v8-version,11,8,172,17,-node.19,0
v8-platform,macos,macos
shared-library,/usr/local/bin/node,0x11255c000,0x1140b009a,153796608
shared-library,/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation,0x7ff812236c40,0x7ff81240ece1,149737472
shared-library,/usr/lib/libobjc.A.dylib,0x7ff811e03640,0x7ff811e305c4,149737472
shared-library,/System/Library/PrivateFrameworks/CoreServicesInternal.framework/Versions/A/CoreServicesInternal,0x7ff8156d7a70,0x7ff815710ec0,149737472
shared-library,/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation,0x7ff8131ef950,0x7ff813abc391,149737472
shared-library,/usr/lib/liboah.dylib,0x7ff81f04a230,0x7ff81f04fdca,149737472
shared-library,/usr/lib/libfakelink.dylib,0x7ff81f0813fa,0x7ff81f082b52,149737472
shared-library,/usr/lib/libicucore.A.dylib,0x7ff81513c680,0x7ff81535e9ac,149737472
shared-library,/usr/lib/libSystem.B.dylib,0x7ff81f07e725,0x7ff81f07ece2,149737472
shared-library,/System/Library/PrivateFrameworks/SoftLinking.framework/Versions/A/SoftLinking,0x7ff81f083c35,0x7ff81f083ebe,149737472
shared-library,/usr/lib/libc++abi.dylib,0x7ff81217fc70,0x7ff812190bbe,149737472
shared-library,/usr/lib/libc++.1.dylib,0x7ff812100cc0,0x7ff812153ef6,149737472
shared-library,/usr/lib/system/libcache.dylib,0x7ff81f07871c,0x7ff81f07b47c,149737472
shared-library,/usr/lib/system/libcommonCrypto.dylib,0x7ff81f0329d0,0x7ff81f03ce6c,149737472
shared-library,/usr/lib/system/libcompiler_rt.dylib,0x7ff81f05bddc,0x7ff81f060c45,149737472
shared-library,/usr/lib/system/libcopyfile.dylib,0x7ff81f0518d0,0x7ff81f059306,149737472
shared-library,/usr/lib/system/libcorecrypto.dylib,0x7ff811f445c0,0x7ff811fcb6d4,149737472
shared-library,/usr/lib/system/libdispatch.dylib,0x7ff81202bb40,0x7ff812060ffd,149737472
shared-library,/usr/lib/system/libdyld.dylib,0x7ff8121dc510,0x7ff8121fdc30,149737472
shared-library,/usr/lib/system/libkeymgr.dylib,0x7ff81f06dae7,0x7ff81f06df18,149737472
shared-library,/usr/lib/system/libmacho.dylib,0x7ff81f011468,0x7ff81f0158c7,149737472
shared-library,/usr/lib/system/libquarantine.dylib,0x7ff81e4a4e0a,0x7ff81e4a6cb0,149737472
shared-library,/usr/lib/system/libremovefile.dylib,0x7ff81f06b6d0,0x7ff81f06cd87,149737472
shared-library,/usr/lib/system/libsystem_asl.dylib,0x7ff8177ea2fc,0x7ff8177fe5e8,149737472
shared-library,/usr/lib/system/libsystem_blocks.dylib,0x7ff811ee2108,0x7ff811ee4490,149737472
shared-library,/usr/lib/system/libsystem_c.dylib,0x7ff812075640,0x7ff8120f41c8,149737472
shared-library,/usr/lib/system/libsystem_collections.dylib,0x7ff81f063ec2,0x7ff81f0679dc,149737472
shared-library,/usr/lib/system/libsystem_configuration.dylib,0x7ff81d5c2000,0x7ff81d5c48be,149737472
shared-library,/usr/lib/system/libsystem_containermanager.dylib,0x7ff81c6307dc,0x7ff81c650f39,149737472
shared-library,/usr/lib/system/libsystem_coreservices.dylib,0x7ff81ec6a610,0x7ff81ec6e2b0,149737472
shared-library,/usr/lib/system/libsystem_darwin.dylib,0x7ff8153d2160,0x7ff8153d933c,149737472
shared-library,/usr/lib/system/libsystem_darwindirectory.dylib,0x7ffc28f05bed,0x7ffc28f083dc,149737472
shared-library,/usr/lib/system/libsystem_dnssd.dylib,0x7ff81f06f5fc,0x7ff81f0751bd,149737472
shared-library,/usr/lib/system/libsystem_featureflags.dylib,0x7ff812071ec9,0x7ff812073bd0,149737472
shared-library,/usr/lib/system/libsystem_info.dylib,0x7ff81220ad50,0x7ff81223085b,149737472
shared-library,/usr/lib/system/libsystem_m.dylib,0x7ff81efa7200,0x7ff81efdd66c,149737472
shared-library,/usr/lib/system/libsystem_malloc.dylib,0x7ff811ff1b30,0x7ff81201e4f0,149737472
shared-library,/usr/lib/system/libsystem_networkextension.dylib,0x7ff81775fd96,0x7ff817772720,149737472
shared-library,/usr/lib/system/libsystem_notify.dylib,0x7ff81581bd24,0x7ff815829e66,149737472
shared-library,/usr/lib/system/libsystem_sandbox.dylib,0x7ff81d5c5d30,0x7ff81d5ca2ba,149737472
shared-library,/usr/lib/system/libsystem_secinit.dylib,0x7ff81f068edd,0x7ff81f06a44c,149737472
shared-library,/usr/lib/system/libsystem_kernel.dylib,0x7ff812195670,0x7ff8121be91c,149737472
shared-library,/usr/lib/system/libsystem_platform.dylib,0x7ff812200880,0x7ff812207553,149737472
shared-library,/usr/lib/system/libsystem_pthread.dylib,0x7ff8121cfbf0,0x7ff8121d8728,149737472
shared-library,/usr/lib/system/libsystem_symptoms.dylib,0x7ff819380dd6,0x7ff8193864ca,149737472
shared-library,/usr/lib/system/libsystem_trace.dylib,0x7ff811f2a400,0x7ff811f4001a,149737472
shared-library,/usr/lib/system/libunwind.dylib,0x7ff81f042e90,0x7ff81f04846a,149737472
shared-library,/usr/lib/system/libxpc.dylib,0x7ff811ee6610,0x7ff811f1823e,149737472
shared-library,/System/Library/Frameworks/IOKit.framework/Versions/A/IOKit,0x7ff815759730,0x7ff815801960,149737472
shared-library,/System/Library/Frameworks/CoreServices.framework/Versions/A/CoreServices,0x7ff826a1ffc0,0x7ff826a1ffc0,149737472
shared-library,/usr/lib/libDiagnosticMessagesClient.dylib,0x7ff819fe9f85,0x7ff819feac04,149737472
shared-library,/usr/lib/libenergytrace.dylib,0x7ff817777759,0x7ff817777d3e,149737472
shared-library,/usr/lib/libbsm.0.dylib,0x7ff81e4cbbd4,0x7ff81e4d8fed,149737472
shared-library,/usr/lib/libz.1.dylib,0x7ff81ef92960,0x7ff81ef9f184,149737472
shared-library,/usr/lib/system/libkxld.dylib,0x7ff81f01a240,0x7ff81f030de4,149737472
shared-library,/System/Library/Frameworks/CFNetwork.framework/Versions/A/CFNetwork,0x7ff8173b1da0,0x7ff81761c945,149737472
shared-library,/System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/FSEvents.framework/Versions/A/FSEvents,0x7ff81ae10d40,0x7ff81ae1afa0,149737472
shared-library,/System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/CarbonCore.framework/Versions/A/CarbonCore,0x7ff8153dd520,0x7ff8154c0c25,149737472
shared-library,/System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/Metadata.framework/Versions/A/Metadata,0x7ff81a0326a0,0x7ff81a0b296c,149737472
shared-library,/System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/OSServices.framework/Versions/A/OSServices,0x7ff81ec70960,0x7ff81ec95303,149737472
shared-library,/System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/SearchKit.framework/Versions/A/SearchKit,0x7ff81f15bbb0,0x7ff81f1acdd0,149737472
shared-library,/System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/AE.framework/Versions/A/AE,0x7ff819307a70,0x7ff8193665f0,149737472
shared-library,/System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/LaunchServices.framework/Versions/A/LaunchServices,0x7ff8126d1740,0x7ff8128dea52,149737472
shared-library,/System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/DictionaryServices.framework/Versions/A/DictionaryServices,0x7ff820634750,0x7ff8206747a8,149737472
shared-library,/System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/SharedFileList.framework/Versions/A/SharedFileList,0x7ff81ae1eb68,0x7ff81ae3c17e,149737472
shared-library,/System/Library/Frameworks/Security.framework/Versions/A/Security,0x7ff814d9f910,0x7ff8150922b0,149737472
shared-library,/System/Library/Frameworks/SystemConfiguration.framework/Versions/A/SystemConfiguration,0x7ff812ea6d20,0x7ff812f1dfd0,149737472
shared-library,/usr/lib/libapple_nghttp2.dylib,0x7ff81f1e6120,0x7ff81f1f83da,149737472
shared-library,/usr/lib/libcompression.dylib,0x7ff81f21c900,0x7ff81f27e494,149737472
shared-library,/usr/lib/libsqlite3.dylib,0x7ff818f810b0,0x7ff819129ed0,149737472
shared-library,/System/Library/Frameworks/Network.framework/Versions/A/Network,0x7ff81938a610,0x7ff819d4e74f,149737472
shared-library,/usr/lib/libCoreEntitlements.dylib,0x7ffc2757c480,0x7ffc2758767a,149737472
shared-library,/System/Library/PrivateFrameworks/MessageSecurity.framework/Versions/A/MessageSecurity,0x7ffb2fc3f1d0,0x7ffb2fc7ccfa,149737472
shared-library,/System/Library/PrivateFrameworks/ProtocolBuffer.framework/Versions/A/ProtocolBuffer,0x7ff818f67f30,0x7ff818f7b421,149737472
shared-library,/usr/lib/libMobileGestalt.dylib,0x7ff817779840,0x7ff8177cd4f8,149737472
shared-library,/System/Library/PrivateFrameworks/AppleFSCompression.framework/Versions/A/AppleFSCompression,0x7ff81eb8c9c0,0x7ff81ebe528a,149737472
shared-library,/usr/lib/libcoretls.dylib,0x7ff81e4b3b80,0x7ff81e4c640b,149737472
shared-library,/usr/lib/libcoretls_cfhelpers.dylib,0x7ff82069c0b4,0x7ff82069cdf2,149737472
shared-library,/usr/lib/libpam.2.dylib,0x7ff81f216c7c,0x7ff81f219e99,149737472
shared-library,/usr/lib/libxar.1.dylib,0x7ff820713b30,0x7ff82071fab4,149737472
shared-library,/System/Library/PrivateFrameworks/CoreAutoLayout.framework/Versions/A/CoreAutoLayout,0x7ff81ae498b0,0x7ff81ae7f13f,149737472
shared-library,/System/Library/Frameworks/DiskArbitration.framework/Versions/A/DiskArbitration,0x7ff81a0ca4f0,0x7ff81a0d0166,149737472
shared-library,/usr/lib/libarchive.2.dylib,0x7ff81f0d3540,0x7ff81f146a12,149737472
shared-library,/usr/lib/libxml2.2.dylib,0x7ff81ae919b0,0x7ff81af51847,149737472
shared-library,/usr/lib/liblangid.dylib,0x7ff81d5d23b7,0x7ff81d5d2d78,149737472
shared-library,/System/Library/Frameworks/Combine.framework/Versions/A/Combine,0x7ff82486a260,0x7ff824936620,149737472
shared-library,/System/Library/PrivateFrameworks/CollectionsInternal.framework/Versions/A/CollectionsInternal,0x7ffb1f515340,0x7ffb1f636070,149737472
shared-library,/System/Library/PrivateFrameworks/ReflectionInternal.framework/Versions/A/ReflectionInternal,0x7ffc142f90d0,0x7ffc142fda3a,149737472
shared-library,/System/Library/PrivateFrameworks/RuntimeInternal.framework/Versions/A/RuntimeInternal,0x7ffc14898660,0x7ffc148a71ab,149737472
shared-library,/usr/lib/swift/libswiftCore.dylib,0x7ff822466ab0,0x7ff82281cd24,149737472
shared-library,/usr/lib/swift/libswiftCoreFoundation.dylib,0x7ff9181bbb40,0x7ff9181c0190,149737472
shared-library,/usr/lib/swift/libswiftDarwin.dylib,0x7ff915ff3340,0x7ff915ff73aa,149737472
shared-library,/usr/lib/swift/libswiftDispatch.dylib,0x7ff82839cee0,0x7ff8283adb8e,149737472
shared-library,/usr/lib/swift/libswiftIOKit.dylib,0x7ff9181f9c70,0x7ff9181f9fab,149737472
shared-library,/usr/lib/swift/libswiftObjectiveC.dylib,0x7ff82ab24820,0x7ff82ab26180,149737472
shared-library,/usr/lib/swift/libswiftXPC.dylib,0x7ff9181cca10,0x7ff9181f135c,149737472
shared-library,/usr/lib/swift/libswift_Concurrency.dylib,0x7ffc28bea840,0x7ffc28c24d03,149737472
shared-library,/usr/lib/swift/libswift_StringProcessing.dylib,0x7ffc28d253b0,0x7ffc28d98ad8,149737472
shared-library,/usr/lib/swift/libswiftos.dylib,0x7ff82ab28490,0x7ff82ab3abf0,149737472
shared-library,/System/Library/PrivateFrameworks/AppleSystemInfo.framework/Versions/A/AppleSystemInfo,0x7ff81d5cd6eb,0x7ff81d5d0284,149737472
shared-library,/usr/lib/libpcap.A.dylib,0x7ff81f085460,0x7ff81f0a650a,149737472
shared-library,/usr/lib/libdns_services.dylib,0x7ff81937785f,0x7ff81937e0d8,149737472
shared-library,/usr/lib/libnetwork.dylib,0x7ff8173affc0,0x7ff8173affc0,149737472
shared-library,/System/Library/PrivateFrameworks/IOMobileFramebuffer.framework/Versions/A/IOMobileFramebuffer,0x7ff81e1cd6b0,0x7ff81e1d8ffe,149737472
shared-library,/System/Library/Frameworks/IOSurface.framework/Versions/A/IOSurface,0x7ff81c659710,0x7ff81c66906b,149737472
shared-library,/usr/lib/liblzma.5.dylib,0x7ff820682528,0x7ff8206947f7,149737472
shared-library,/usr/lib/swift/libswift_RegexParser.dylib,0x7ffc28c71030,0x7ffc28d08f6a,149737472
shared-library,/usr/lib/libbz2.1.0.dylib,0x7ff81ec5a710,0x7ff81ec67ec5,149737472
shared-library,/usr/lib/libiconv.2.dylib,0x7ff81f0bace0,0x7ff81f0c06e4,149737472
shared-library,/usr/lib/libcharset.1.dylib,0x7ff81f00de1c,0x7ff81f00de80,149737472
shared-library,/usr/lib/libheimdal-asn1.dylib,0x7ff820c06790,0x7ff820c0ecf9,149737472
shared-library,/usr/lib/libCheckFix.dylib,0x7ff81e4a9b10,0x7ff81e4af311,149737472
shared-library,/System/Library/PrivateFrameworks/TCC.framework/Versions/A/TCC,0x7ff817801648,0x7ff817818530,149737472
shared-library,/System/Library/PrivateFrameworks/CoreNLP.framework/Versions/A/CoreNLP,0x7ff81d5d4d60,0x7ff81d6b9290,149737472
shared-library,/System/Library/PrivateFrameworks/MetadataUtilities.framework/Versions/A/MetadataUtilities,0x7ff819fecc60,0x7ff81a024900,149737472
shared-library,/System/Library/Frameworks/Accelerate.framework/Versions/A/Accelerate,0x7ff826d25000,0x7ff826d25000,149737472
shared-library,/usr/lib/libmecab.dylib,0x7ff81e4dc5c0,0x7ff81e5275e0,149737472
shared-library,/usr/lib/libCRFSuite.dylib,0x7ff812f2da00,0x7ff812f5d9b0,149737472
shared-library,/usr/lib/libgermantok.dylib,0x7ff81e534f90,0x7ff81e536dda,149737472
shared-library,/usr/lib/libThaiTokenizer.dylib,0x7ff81f1c1e90,0x7ff81f1c2e26,149737472
shared-library,/System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vImage.framework/Versions/A/vImage,0x7ff81a0d1ee0,0x7ff81a6b99fa,149737472
shared-library,/System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/vecLib,0x7ff8269f3000,0x7ff8269f3000,149737472
shared-library,/System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libvMisc.dylib,0x7ff820755c40,0x7ff8208a3141,149737472
shared-library,/System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libvDSP.dylib,0x7ff81dfbcde0,0x7ff81e18db3d,149737472
shared-library,/System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libBLAS.dylib,0x7ff812ad72c0,0x7ff812d4512e,149737472
shared-library,/System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libLAPACK.dylib,0x7ff81f2fcfc0,0x7ff820620fb7,149737472
shared-library,/System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libLinearAlgebra.dylib,0x7ff81e537fe8,0x7ff81e54ae8d,149737472
shared-library,/System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libSparseBLAS.dylib,0x7ff81f200c20,0x7ff81f213a08,149737472
shared-library,/System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libQuadrature.dylib,0x7ff81f2f710a,0x7ff81f2fb11c,149737472
shared-library,/System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libBNNS.dylib,0x7ff81d6e28b0,0x7ff81df4441d,149737472
shared-library,/System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libSparse.dylib,0x7ff812e2f8b0,0x7ff812ea0fe9,149737472
shared-library,/System/Library/PrivateFrameworks/MIL.framework/Versions/A/MIL,0x7ffb2e5c9b90,0x7ffb2e9e92a6,149737472
shared-library,/System/Library/Frameworks/OpenDirectory.framework/Versions/A/Frameworks/CFOpenDirectory.framework/Versions/A/CFOpenDirectory,0x7ff81adf51a0,0x7ff81ae0889f,149737472
shared-library,/System/Library/Frameworks/OpenDirectory.framework/Versions/A/OpenDirectory,0x7ff81ade905c,0x7ff81adefaa2,149737472
shared-library,/System/Library/PrivateFrameworks/APFS.framework/Versions/A/APFS,0x7ff82069e0e0,0x7ff8206fa520,149737472
shared-library,/System/Library/Frameworks/SecurityFoundation.framework/Versions/A/SecurityFoundation,0x7ff81e3ee370,0x7ff81e432780,149737472
shared-library,/usr/lib/libutil.dylib,0x7ff820722564,0x7ff820724964,149737472
shared-library,/System/Library/PrivateFrameworks/InstalledContentLibrary.framework/Versions/A/InstalledContentLibrary,0x7ffb2ca18a50,0x7ffb2cacfa73,149737472
shared-library,/System/Library/PrivateFrameworks/CoreServicesStore.framework/Versions/A/CoreServicesStore,0x7ff8157193f0,0x7ff81574bb8a,149737472
shared-library,/usr/lib/libapp_launch_measurement.dylib,0x7ff81ae45b00,0x7ff81ae4778e,149737472
shared-library,/System/Library/PrivateFrameworks/AppleMobileFileIntegrity.framework/Versions/A/AppleMobileFileIntegrity,0x7ffb1d3f6854,0x7ffb1d401e47,149737472
shared-library,/usr/lib/libmis.dylib,0x7ff91819cc28,0x7ff9181a92d0,149737472
shared-library,/System/Library/PrivateFrameworks/MobileSystemServices.framework/Versions/A/MobileSystemServices,0x7ff9282c1250,0x7ff9282c3690,149737472
shared-library,/System/Library/PrivateFrameworks/ConfigProfileHelper.framework/Versions/A/ConfigProfileHelper,0x7ffa25cc783f,0x7ffa25cc8a86,149737472
shared-library,/System/Library/PrivateFrameworks/CoreAnalytics.framework/Versions/A/CoreAnalytics,0x7ff819fbeaf0,0x7ff819fe0851,149737472
shared-library,/System/Library/PrivateFrameworks/AppleSauce.framework/Versions/A/AppleSauce,0x7ff81f1c39c0,0x7ff81f1e1ec9,149737472
shared-library,/System/Library/PrivateFrameworks/LanguageModeling.framework/Versions/A/LanguageModeling,0x7ff813e26ce0,0x7ff813fab4d8,149737472
shared-library,/usr/lib/libxslt.1.dylib,0x7ff8207257d0,0x7ff8207461a8,149737472
shared-library,/usr/lib/libcmph.dylib,0x7ff81f0c1868,0x7ff81f0cfcee,149737472
shared-library,/System/Library/PrivateFrameworks/CoreEmoji.framework/Versions/A/CoreEmoji,0x7ff81e19c0b0,0x7ff81e1c2109,149737472
shared-library,/System/Library/PrivateFrameworks/LinguisticData.framework/Versions/A/LinguisticData,0x7ff81d6ddaa0,0x7ff81d6e10a5,149737472
shared-library,/System/Library/PrivateFrameworks/Lexicon.framework/Versions/A/Lexicon,0x7ff812d4bd30,0x7ff812e080c2,149737472
shared-library,/System/Library/PrivateFrameworks/BackgroundTaskManagement.framework/Versions/A/BackgroundTaskManagement,0x7ff81e477168,0x7ff81e491412,149737472
shared-library,/usr/lib/libTLE.dylib,0x7ffc276f7700,0x7ffc276feaf9,149737472
shared-library-end
profiler,begin,1000
tick,0x7ff8092c89aa,1454,0,0x0,6
new,CodeRange,0x10fd80000,0
new,MemoryChunk,0x72e4b40000,262144
new,MemoryChunk,0x72ddd00000,262144
new,MemoryChunk,0x72d5c00000,262144
new,MemoryChunk,0x72a9e80000,262144
new,MemoryChunk,0x721ba80000,262144
heap-capacity,1031008
heap-available,4346312384
new,MemoryChunk,0x7220740000,262144
tick,0x109aad124,2606,0,0x0,6
new,MemoryChunk,0x726b2c0000,270336
new,MemoryChunk,0x72e2e80000,262144
new,MemoryChunk,0x72e9780000,262144
tick,0x109bd6ffd,3916,0,0x0,6
new,MemoryChunk,0x727e980000,262144
tick,0x109be451d,4919,0,0x0,6
code-creation,Builtin,2,5179,0x109f36fc0,768,DeoptimizationEntry_Eager
code-creation,Builtin,2,5197,0x109f37300,772,DeoptimizationEntry_Lazy
code-creation,Builtin,2,5204,0x109f37640,2712,RecordWriteSaveFP
code-creation,Builtin,2,5209,0x109f38100,1172,RecordWriteIgnoreFP
code-creation,Builtin,2,5225,0x109f385c0,332,EphemeronKeyBarrierSaveFP
code-creation,Builtin,2,5255,0x109f38740,116,EphemeronKeyBarrierIgnoreFP
code-creation,Builtin,2,5273,0x109f387c0,64,AdaptorWithBuiltinExitFrame
code-creation,Builtin,2,5297,0x109f38840,340,IndirectPointerBarrierSaveFP
code-creation,Builtin,2,5308,0x109f389c0,116,IndirectPointerBarrierIgnoreFP
code-creation,Builtin,2,5315,0x109f38a40,292,CallFunction_ReceiverIsNullOrUndefined
code-creation,Builtin,2,5321,0x109f38b80,340,CallFunction_ReceiverIsNotNullOrUndefined
code-creation,Builtin,2,5328,0x109f38d00,376,CallFunction_ReceiverIsAny
code-creation,Builtin,2,5333,0x109f38e80,100,CallBoundFunction
code-creation,Builtin,2,5338,0x109f38f00,896,CallWrappedFunction
code-creation,Builtin,2,5343,0x109f392c0,168,Call_ReceiverIsNullOrUndefined
code-creation,Builtin,2,5348,0x109f39380,168,Call_ReceiverIsNotNullOrUndefined
code-creation,Builtin,2,5354,0x109f39440,168,Call_ReceiverIsAny
code-creation,Builtin,2,5359,0x109f39500,956,Call_ReceiverIsNullOrUndefined_Baseline_Compact
code-creation,Builtin,2,5365,0x109f398c0,952,Call_ReceiverIsNullOrUndefined_Baseline
code-creation,Builtin,2,5373,0x109f39c80,1044,Call_ReceiverIsNotNullOrUndefined_Baseline_Compact
code-creation,Builtin,2,5379,0x109f3a0c0,1040,Call_ReceiverIsNotNullOrUndefined_Baseline
code-creation,Builtin,2,5385,0x109f3a500,1044,Call_ReceiverIsAny_Baseline_Compact
code-creation,Builtin,2,5391,0x109f3a940,1040,Call_ReceiverIsAny_Baseline
code-creation,Builtin,2,5422,0x109f3ad80,944,Call_ReceiverIsNullOrUndefined_WithFeedback
code-creation,Builtin,2,5430,0x109f3b140,944,Call_ReceiverIsNotNullOrUndefined_WithFeedback
code-creation,Builtin,2,5437,0x109f3b500,944,Call_ReceiverIsAny_WithFeedback
code-creation,Builtin,2,5444,0x109f3b8c0,748,CallProxy
code-creation,Builtin,2,5484,0x109f3bbc0,152,CallVarargs
code-creation,Builtin,2,5499,0x109f3bc80,1020,CallWithSpread
code-creation,Builtin,2,5505,0x109f3c080,2024,CallWithSpread_Baseline
code-creation,Builtin,2,5510,0x109f3c880,2012,CallWithSpread_WithFeedback
code-creation,Builtin,2,5515,0x109f3d080,968,CallWithArrayLike
code-creation,Builtin,2,5520,0x109f3d480,1940,CallWithArrayLike_WithFeedback
code-creation,Builtin,2,5526,0x109f3dc40,156,CallForwardVarargs
code-creation,Builtin,2,5544,0x109f3dd00,156,CallFunctionForwardVarargs
code-creation,Builtin,2,5550,0x109f3ddc0,468,CallFunctionTemplate_Generic
code-creation,Builtin,2,5555,0x109f3dfc0,152,CallFunctionTemplate_CheckAccess
code-creation,Builtin,2,5561,0x109f3e080,412,CallFunctionTemplate_CheckCompatibleReceiver
code-creation,Builtin,2,5568,0x109f3e240,472,CallFunctionTemplate_CheckAccessAndCompatibleReceiver
code-creation,Builtin,2,5575,0x109f3e440,32,ConstructFunction
code-creation,Builtin,2,5580,0x109f3e480,100,ConstructBoundFunction
code-creation,Builtin,2,5585,0x109f3e500,28,ConstructedNonConstructable
code-creation,Builtin,2,5591,0x109f3e540,100,Construct
code-creation,Builtin,2,5595,0x109f3e5c0,152,ConstructVarargs
code-creation,Builtin,2,5600,0x109f3e680,1044,ConstructWithSpread
code-creation,Builtin,2,5605,0x109f3eac0,1896,ConstructWithSpread_Baseline
code-creation,Builtin,2,5610,0x109f3f240,1896,ConstructWithSpread_WithFeedback
code-creation,Builtin,2,5616,0x109f3f9c0,1068,ConstructWithArrayLike
code-creation,Builtin,2,5621,0x109f3fe00,1828,ConstructWithArrayLike_WithFeedback
code-creation,Builtin,2,5626,0x109f40540,196,ConstructForwardVarargs
code-creation,Builtin,2,5631,0x109f40640,196,ConstructFunctionForwardVarargs
code-creation,Builtin,2,5637,0x109f40740,776,Construct_Baseline
code-creation,Builtin,2,5642,0x109f40a80,784,Construct_WithFeedback
code-creation,Builtin,2,5647,0x109f40dc0,448,JSConstructStubGeneric
code-creation,Builtin,2,5652,0x109f40fc0,344,JSBuiltinsConstructStub
code-creation,Builtin,2,5657,0x109f41140,924,FastNewObject
code-creation,Builtin,2,5661,0x109f41500,368,FastNewClosure
code-creation,Builtin,2,5666,0x109f41680,784,ConstructProxy
code-creation,Builtin,2,5671,0x109f419c0,192,JSEntry
code-creation,Builtin,2,5675,0x109f41ac0,192,JSConstructEntry
code-creation,Builtin,2,5680,0x109f41bc0,192,JSRunMicrotasksEntry
code-creation,Builtin,2,5685,0x109f41cc0,100,JSEntryTrampoline
code-creation,Builtin,2,5690,0x109f41d40,100,JSConstructEntryTrampoline
code-creation,Builtin,2,5695,0x109f41dc0,256,ResumeGeneratorTrampoline
code-creation,Builtin,2,5700,0x109f41f00,1384,StringFromCodePointAt
code-creation,Builtin,2,5707,0x109f42480,944,StringEqual
code-creation,Builtin,2,5711,0x109f42840,388,StringGreaterThan
code-creation,Builtin,2,5716,0x109f42a00,388,StringGreaterThanOrEqual
code-creation,Builtin,2,5721,0x109f42bc0,388,StringLessThan
code-creation,Builtin,2,5726,0x109f42d80,388,StringLessThanOrEqual
code-creation,Builtin,2,5731,0x109f42f40,388,StringCompare
code-creation,Builtin,2,5736,0x109f43100,3716,StringSubstring
code-creation,Builtin,2,5740,0x109f43fc0,116,OrderedHashTableHealIndex
code-creation,Builtin,2,5745,0x109f44040,872,InterpreterEntryTrampoline
code-creation,Builtin,2,5751,0x109f443c0,884,InterpreterEntryTrampolineForProfiling
code-creation,Builtin,2,5756,0x109f44740,76,InterpreterPushArgsThenCall
code-creation,Builtin,2,5762,0x109f447c0,84,InterpreterPushUndefinedAndArgsThenCall
code-creation,Builtin,2,5767,0x109f44840,84,InterpreterPushArgsThenCallWithFinalSpread
code-creation,Builtin,2,5773,0x109f448c0,84,InterpreterPushArgsThenConstruct
code-creation,Builtin,2,5779,0x109f44940,720,InterpreterPushArgsThenFastConstructFunction
code-creation,Builtin,2,5785,0x109f44c40,84,InterpreterPushArgsThenConstructArrayFunction
code-creation,Builtin,2,5791,0x109f44cc0,88,InterpreterPushArgsThenConstructWithFinalSpread
code-creation,Builtin,2,5798,0x109f44d40,80,InterpreterEnterAtBytecode
code-creation,Builtin,2,5804,0x109f44dc0,216,InterpreterEnterAtNextBytecode
code-creation,Builtin,2,5809,0x109f44ec0,96,InterpreterOnStackReplacement
code-creation,Builtin,2,5814,0x109f44f40,392,BaselineOutOfLinePrologue
code-creation,Builtin,2,5819,0x109f45100,16,BaselineOutOfLinePrologueDeopt
code-creation,Builtin,2,5825,0x109f45140,100,BaselineOnStackReplacement
code-creation,Builtin,2,5830,0x109f451c0,84,BaselineLeaveFrame
code-creation,Builtin,2,5835,0x109f45240,208,BaselineOrInterpreterEnterAtBytecode
code-creation,Builtin,2,5840,0x109f45340,216,BaselineOrInterpreterEnterAtNextBytecode
code-creation,Builtin,2,5846,0x109f45440,180,InterpreterOnStackReplacement_ToBaseline
code-creation,Builtin,2,5861,0x109f45500,36,MaglevOnStackReplacement
code-creation,Builtin,2,5917,0x109f45540,4,MaglevFunctionEntryStackCheck_WithoutNewTarget
code-creation,Builtin,2,5933,0x109f45580,4,MaglevFunctionEntryStackCheck_WithNewTarget
code-creation,Builtin,2,5941,0x109f455c0,4,MaglevOptimizeCodeOrTailCallOptimizedCodeSlot
code-creation,Builtin,2,5947,0x109f45600,860,CompileLazy
code-creation,Builtin,2,5952,0x109f45980,80,CompileLazyDeoptimizedCode
code-creation,Builtin,2,5958,0x109f45a00,224,InstantiateAsmJs
code-creation,Builtin,2,5963,0x109f45b00,32,NotifyDeoptimized
code-creation,Builtin,2,5968,0x109f45b40,52,ContinueToCodeStubBuiltin
code-creation,Builtin,2,6006,0x109f45b80,60,ContinueToCodeStubBuiltinWithResult
code-creation,Builtin,2,6014,0x109f45bc0,56,ContinueToJavaScriptBuiltin
code-creation,Builtin,2,6020,0x109f45c00,64,ContinueToJavaScriptBuiltinWithResult
code-creation,Builtin,2,6026,0x109f45c80,320,CallApiCallbackGeneric
code-creation,Builtin,2,6035,0x109f45e00,268,CallApiCallbackOptimizedNoProfiling
code-creation,Builtin,2,6042,0x109f45f40,300,CallApiCallbackOptimized
code-creation,Builtin,2,6051,0x109f46080,280,CallApiGetter
tick,0x7ff8092cbace,6081,0,0x0,6
code-creation,Builtin,2,6100,0x109f461c0,32,HandleApiCallOrConstruct
code-creation,Builtin,2,6111,0x109f46200,12,HandleApiConstruct
code-creation,Builtin,2,6117,0x109f46240,12,HandleApiCallAsFunctionDelegate
code-creation,Builtin,2,6123,0x109f46280,12,HandleApiCallAsConstructorDelegate
code-creation,Builtin,2,6128,0x109f462c0,52,AllocateInYoungGeneration
code-creation,Builtin,2,6133,0x109f46300,52,AllocateInOldGeneration
code-creation,Builtin,2,6139,0x109f46340,132,NewHeapNumber
code-creation,Builtin,2,6143,0x109f46400,596,CopyFastSmiOrObjectElements
code-creation,Builtin,2,6149,0x109f46680,608,GrowFastDoubleElements
code-creation,Builtin,2,6154,0x109f46900,488,GrowFastSmiOrObjectElements
code-creation,Builtin,2,6162,0x109f46b00,452,DebugBreakTrampoline
code-creation,Builtin,2,6167,0x109f46d00,276,RestartFrameTrampoline
code-creation,Builtin,2,6172,0x109f46e40,188,ToNumber
code-creation,Builtin,2,6177,0x109f46f00,88,ToBigInt
code-creation,Builtin,2,6181,0x109f46f80,300,ToNumber_Baseline
code-creation,Builtin,2,6186,0x109f470c0,360,ToNumeric_Baseline
code-creation,Builtin,2,6191,0x109f47240,104,PlainPrimitiveToNumber
code-creation,Builtin,2,6196,0x109f472c0,224,ToNumberConvertBigInt
code-creation,Builtin,2,6201,0x109f473c0,60,ToBigIntConvertNumber
code-creation,Builtin,2,6206,0x109f47400,140,Typeof
code-creation,Builtin,2,6210,0x109f474c0,112,BigIntToI64
code-creation,Builtin,2,6215,0x109f47540,4,BigIntToI32Pair
code-creation,Builtin,2,6220,0x109f47580,220,I64ToBigInt
code-creation,Builtin,2,6224,0x109f47680,4,I32PairToBigInt
code-creation,Builtin,2,6229,0x109f476c0,116,ToBooleanLazyDeoptContinuation
code-creation,Builtin,2,6234,0x109f47740,348,MathCeilContinuation
code-creation,Builtin,2,6239,0x109f478c0,352,MathFloorContinuation
code-creation,Builtin,2,6244,0x109f47a40,400,MathRoundContinuation
code-creation,Builtin,2,6249,0x109f47c00,4240,KeyedLoadIC_PolymorphicName
code-creation,Builtin,2,6254,0x109f48cc0,18000,KeyedStoreIC_Megamorphic
code-creation,Builtin,2,6260,0x109f4d340,14196,DefineKeyedOwnIC_Megamorphic
code-creation,Builtin,2,6269,0x109f50ac0,696,LoadGlobalIC_NoFeedback
code-creation,Builtin,2,6274,0x109f50d80,68,LoadIC_FunctionPrototype
code-creation,Builtin,2,6279,0x109f50e00,12,LoadIC_StringLength
code-creation,Builtin,2,6284,0x109f50e40,16,LoadIC_StringWrapperLength
code-creation,Builtin,2,6289,0x109f50e80,4376,LoadIC_NoFeedback
code-creation,Builtin,2,6294,0x109f51fc0,32,StoreGlobalIC_Slow
code-creation,Builtin,2,6299,0x109f52000,8348,StoreIC_NoFeedback
code-creation,Builtin,2,6304,0x109f540c0,4628,DefineNamedOwnIC_NoFeedback
code-creation,Builtin,2,6411,0x109f55300,188,KeyedLoadIC_SloppyArguments
code-creation,Builtin,2,6424,0x109f553c0,72,LoadIndexedInterceptorIC
code-creation,Builtin,2,6430,0x109f55440,248,KeyedStoreIC_SloppyArguments_Standard
code-creation,Builtin,2,6451,0x109f55540,248,KeyedStoreIC_SloppyArguments_GrowNoTransitionHandleCOW
code-creation,Builtin,2,6469,0x109f55640,248,KeyedStoreIC_SloppyArguments_NoTransitionIgnoreOOB
code-creation,Builtin,2,6493,0x109f55740,248,KeyedStoreIC_SloppyArguments_NoTransitionHandleCOW
code-creation,Builtin,2,6535,0x109f55840,14972,StoreFastElementIC_Standard
code-creation,Builtin,2,6543,0x109f592c0,11640,StoreFastElementIC_GrowNoTransitionHandleCOW
code-creation,Builtin,2,6549,0x109f5c040,14364,StoreFastElementIC_NoTransitionIgnoreOOB
code-creation,Builtin,2,6555,0x109f5f880,7016,StoreFastElementIC_NoTransitionHandleCOW
code-creation,Builtin,2,6569,0x109f61400,9040,ElementsTransitionAndStore_Standard
code-creation,Builtin,2,6597,0x109f63780,21156,ElementsTransitionAndStore_GrowNoTransitionHandleCOW
code-creation,Builtin,2,6621,0x109f68a40,9040,ElementsTransitionAndStore_NoTransitionIgnoreOOB
code-creation,Builtin,2,6627,0x109f6adc0,12244,ElementsTransitionAndStore_NoTransitionHandleCOW
code-creation,Builtin,2,6634,0x109f6ddc0,1208,KeyedHasIC_PolymorphicName
code-creation,Builtin,2,6639,0x109f6e280,172,KeyedHasIC_SloppyArguments
code-creation,Builtin,2,6645,0x109f6e340,72,HasIndexedInterceptorIC
code-creation,Builtin,2,6650,0x109f6e3c0,160,EnqueueMicrotask
code-creation,Builtin,2,6655,0x109f6e480,8,RunMicrotasksTrampoline
code-creation,Builtin,2,6660,0x109f6e4c0,3752,RunMicrotasks
code-creation,Builtin,2,6665,0x109f6f380,3796,HasProperty
code-creation,Builtin,2,6670,0x109f70280,1380,DeleteProperty
code-creation,Builtin,2,6674,0x109f70800,2664,CopyDataProperties
code-creation,Builtin,2,6679,0x109f71280,11316,SetDataProperties
code-creation,Builtin,2,6684,0x109f73ec0,3508,CopyDataPropertiesWithExcludedPropertiesOnStack
code-creation,Builtin,2,6690,0x109f74c80,56,CopyDataPropertiesWithExcludedProperties
code-creation,Builtin,2,6696,0x109f74cc0,28,Abort
code-creation,Builtin,2,6700,0x109f74d00,28,AbortCSADcheck
code-creation,Builtin,2,6705,0x109f74d40,12,EmptyFunction
code-creation,Builtin,2,6709,0x109f74d80,12,Illegal
code-creation,Builtin,2,6714,0x109f74dc0,12,StrictPoisonPillThrower
code-creation,Builtin,2,6719,0x109f74e00,12,UnsupportedThrower
code-creation,Builtin,2,6724,0x109f74e40,60,ReturnReceiver
code-creation,Builtin,2,6728,0x109f74e80,36,ArrayConstructor
code-creation,Builtin,2,6733,0x109f74ec0,380,ArrayConstructorImpl
code-creation,Builtin,2,6738,0x109f75040,220,ArrayNoArgumentConstructor_PackedSmi_DontOverride
code-creation,Builtin,2,6744,0x109f75140,220,ArrayNoArgumentConstructor_HoleySmi_DontOverride
code-creation,Builtin,2,6751,0x109f75240,184,ArrayNoArgumentConstructor_PackedSmi_DisableAllocationSites
code-creation,Builtin,2,6757,0x109f75300,184,ArrayNoArgumentConstructor_HoleySmi_DisableAllocationSites
code-creation,Builtin,2,6764,0x109f753c0,184,ArrayNoArgumentConstructor_Packed_DisableAllocationSites
code-creation,Builtin,2,6771,0x109f75480,184,ArrayNoArgumentConstructor_Holey_DisableAllocationSites
code-creation,Builtin,2,6777,0x109f75540,192,ArrayNoArgumentConstructor_PackedDouble_DisableAllocationSites
code-creation,Builtin,2,6784,0x109f75640,192,ArrayNoArgumentConstructor_HoleyDouble_DisableAllocationSites
code-creation,Builtin,2,6791,0x109f75740,924,ArraySingleArgumentConstructor_PackedSmi_DontOverride
code-creation,Builtin,2,6798,0x109f75b00,940,ArraySingleArgumentConstructor_HoleySmi_DontOverride
code-creation,Builtin,2,6804,0x109f75ec0,852,ArraySingleArgumentConstructor_PackedSmi_DisableAllocationSites
code-creation,Builtin,2,6811,0x109f76240,804,ArraySingleArgumentConstructor_HoleySmi_DisableAllocationSites
code-creation,Builtin,2,6818,0x109f76580,852,ArraySingleArgumentConstructor_Packed_DisableAllocationSites
code-creation,Builtin,2,6825,0x109f76900,804,ArraySingleArgumentConstructor_Holey_DisableAllocationSites
code-creation,Builtin,2,6831,0x109f76c40,932,ArraySingleArgumentConstructor_PackedDouble_DisableAllocationSites
code-creation,Builtin,2,6838,0x109f77000,880,ArraySingleArgumentConstructor_HoleyDouble_DisableAllocationSites
code-creation,Builtin,2,6846,0x109f77380,48,ArrayNArgumentsConstructor
code-creation,Builtin,2,6859,0x109f773c0,12,ArrayConcat
code-creation,Builtin,2,6865,0x109f77400,12,ArrayPrototypeFill
code-creation,Builtin,2,6869,0x109f77440,1792,ArrayIncludesSmi
code-creation,Builtin,2,6874,0x109f77b80,1604,ArrayIncludesSmiOrObject
code-creation,Builtin,2,6879,0x109f78200,380,ArrayIncludesPackedDoubles
code-creation,Builtin,2,6884,0x109f78380,436,ArrayIncludesHoleyDoubles
code-creation,Builtin,2,6890,0x109f78540,580,ArrayIncludes
code-creation,Builtin,2,6894,0x109f787c0,1652,ArrayIndexOfSmi
code-creation,Builtin,2,6899,0x109f78e40,1588,ArrayIndexOfSmiOrObject
code-creation,Builtin,2,6904,0x109f79480,252,ArrayIndexOfPackedDoubles
code-creation,Builtin,2,6909,0x109f79580,252,ArrayIndexOfHoleyDoubles
code-creation,Builtin,2,6914,0x109f79680,584,ArrayIndexOf
code-creation,Builtin,2,6919,0x109f79900,12,ArrayPop
code-creation,Builtin,2,6923,0x109f79940,560,ArrayPrototypePop
code-creation,Builtin,2,6928,0x109f79b80,12,ArrayPush
code-creation,Builtin,2,6932,0x109f79bc0,2912,ArrayPrototypePush
code-creation,Builtin,2,6937,0x109f7a740,12,ArrayShift
code-creation,Builtin,2,6941,0x109f7a780,12,ArrayUnshift
code-creation,Builtin,2,6946,0x109f7a7c0,12,ArrayFromAsync
code-creation,Builtin,2,6950,0x109f7a800,1176,CloneFastJSArray
code-creation,Builtin,2,6955,0x109f7acc0,2568,CloneFastJSArrayFillingHoles
code-creation,Builtin,2,6960,0x109f7b700,1196,ExtractFastJSArray
code-creation,Builtin,2,6965,0x109f7bbc0,264,ArrayPrototypeEntries
code-creation,Builtin,2,6970,0x109f7bd00,252,ArrayPrototypeKeys
code-creation,Builtin,2,6975,0x109f7be00,264,ArrayPrototypeValues
code-creation,Builtin,2,6980,0x109f7bf40,4284,ArrayIteratorPrototypeNext
code-creation,Builtin,2,6985,0x109f7d000,5260,FlattenIntoArray
code-creation,Builtin,2,6990,0x109f7e4c0,5208,FlatMapIntoArray
code-creation,Builtin,2,6994,0x109f7f940,368,ArrayPrototypeFlat
code-creation,Builtin,2,6999,0x109f7fac0,428,ArrayPrototypeFlatMap
code-creation,Builtin,2,7004,0x109f7fc80,12,ArrayBufferConstructor
code-creation,Builtin,2,7009,0x109f7fcc0,12,ArrayBufferConstructor_DoNotInitialize
code-creation,Builtin,2,7015,0x109f7fd00,12,ArrayBufferPrototypeSlice
code-creation,Builtin,2,7020,0x109f7fd40,12,ArrayBufferPrototypeResize
code-creation,Builtin,2,7069,0x109f7fd80,12,ArrayBufferPrototypeTransfer
code-creation,Builtin,2,7101,0x109f7fdc0,12,ArrayBufferPrototypeTransferToFixedLength
code-creation,Builtin,2,7108,0x109f7fe00,1000,AsyncFunctionEnter
code-creation,Builtin,2,7119,0x109f80200,80,AsyncFunctionReject
code-creation,Builtin,2,7145,0x109f80280,76,AsyncFunctionResolve
code-creation,Builtin,2,7158,0x109f80300,12,AsyncFunctionLazyDeoptContinuation
code-creation,Builtin,2,7167,0x109f80340,1556,AsyncFunctionAwaitCaught
code-creation,Builtin,2,7175,0x109f80980,1556,AsyncFunctionAwaitUncaught
code-creation,Builtin,2,7196,0x109f80fc0,172,AsyncFunctionAwaitRejectClosure
code-creation,Builtin,2,7202,0x109f81080,168,AsyncFunctionAwaitResolveClosure
code-creation,Builtin,2,7207,0x109f81140,12,BigIntConstructor
code-creation,Builtin,2,7212,0x109f81180,12,BigIntAsUintN
code-creation,Builtin,2,7218,0x109f811c0,12,BigIntAsIntN
code-creation,Builtin,2,7224,0x109f81200,12,BigIntPrototypeToLocaleString
code-creation,Builtin,2,7229,0x109f81240,12,BigIntPrototypeToString
code-creation,Builtin,2,7326,0x109f81280,12,BigIntPrototypeValueOf
code-creation,Builtin,2,7336,0x109f812c0,12,CallSitePrototypeGetColumnNumber
code-creation,Builtin,2,7342,0x109f81300,12,CallSitePrototypeGetEnclosingColumnNumber
code-creation,Builtin,2,7375,0x109f81340,12,CallSitePrototypeGetEnclosingLineNumber
code-creation,Builtin,2,7382,0x109f81380,12,CallSitePrototypeGetEvalOrigin
code-creation,Builtin,2,7487,0x109f813c0,12,CallSitePrototypeGetFileName
code-creation,Builtin,2,7514,0x109f81400,12,CallSitePrototypeGetFunction
code-creation,Builtin,2,7525,0x109f81440,12,CallSitePrototypeGetFunctionName
code-creation,Builtin,2,7547,0x109f81480,12,CallSitePrototypeGetLineNumber
code-creation,Builtin,2,7553,0x109f814c0,12,CallSitePrototypeGetMethodName
code-creation,Builtin,2,7561,0x109f81500,12,CallSitePrototypeGetPosition
code-creation,Builtin,2,7578,0x109f81540,12,CallSitePrototypeGetPromiseIndex
code-creation,Builtin,2,7587,0x109f81580,12,CallSitePrototypeGetScriptHash
code-creation,Builtin,2,7593,0x109f815c0,12,CallSitePrototypeGetScriptNameOrSourceURL
code-creation,Builtin,2,7604,0x109f81600,12,CallSitePrototypeGetThis
code-creation,Builtin,2,7611,0x109f81640,12,CallSitePrototypeGetTypeName
code-creation,Builtin,2,7643,0x109f81680,12,CallSitePrototypeIsAsync
code-creation,Builtin,2,7665,0x109f816c0,12,CallSitePrototypeIsConstructor
code-creation,Builtin,2,7671,0x109f81700,12,CallSitePrototypeIsEval
code-creation,Builtin,2,7678,0x109f81740,12,CallSitePrototypeIsNative
code-creation,Builtin,2,7685,0x109f81780,12,CallSitePrototypeIsPromiseAll
code-creation,Builtin,2,7692,0x109f817c0,12,CallSitePrototypeIsToplevel
code-creation,Builtin,2,7698,0x109f81800,12,CallSitePrototypeToString
code-creation,Builtin,2,7705,0x109f81840,12,ConsoleDebug
code-creation,Builtin,2,7710,0x109f81880,12,ConsoleError
code-creation,Builtin,2,7735,0x109f818c0,12,ConsoleInfo
code-creation,Builtin,2,7741,0x109f81900,12,ConsoleLog
code-creation,Builtin,2,7766,0x109f81940,12,ConsoleWarn
code-creation,Builtin,2,7772,0x109f81980,12,ConsoleDir
code-creation,Builtin,2,7777,0x109f819c0,12,ConsoleDirXml
code-creation,Builtin,2,7782,0x109f81a00,12,ConsoleTable
code-creation,Builtin,2,7787,0x109f81a40,12,ConsoleTrace
code-creation,Builtin,2,7792,0x109f81a80,12,ConsoleGroup
code-creation,Builtin,2,7796,0x109f81ac0,12,ConsoleGroupCollapsed
code-creation,Builtin,2,7801,0x109f81b00,12,ConsoleGroupEnd
code-creation,Builtin,2,7806,0x109f81b40,12,ConsoleClear
code-creation,Builtin,2,7810,0x109f81b80,12,ConsoleCount
code-creation,Builtin,2,7815,0x109f81bc0,12,ConsoleCountReset
code-creation,Builtin,2,7823,0x109f81c00,12,ConsoleAssert
code-creation,Builtin,2,7830,0x109f81c40,12,ConsoleProfile
code-creation,Builtin,2,7835,0x109f81c80,12,ConsoleProfileEnd
code-creation,Builtin,2,7841,0x109f81cc0,12,ConsoleTime
code-creation,Builtin,2,7870,0x109f81d00,12,ConsoleTimeLog
code-creation,Builtin,2,7892,0x109f81d40,12,ConsoleTimeEnd
code-creation,Builtin,2,7898,0x109f81d80,12,ConsoleTimeStamp
code-creation,Builtin,2,7903,0x109f81dc0,12,ConsoleContext
code-creation,Builtin,2,7909,0x109f81e00,12,DataViewConstructor
tick,0x7ff8092cbace,7918,0,0x0,6
code-creation,Builtin,2,7936,0x109f81e40,12,DateConstructor
code-creation,Builtin,2,7942,0x109f81e80,220,DatePrototypeGetDate
code-creation,Builtin,2,7947,0x109f81f80,220,DatePrototypeGetDay
code-creation,Builtin,2,7952,0x109f82080,220,DatePrototypeGetFullYear
code-creation,Builtin,2,7957,0x109f82180,220,DatePrototypeGetHours
code-creation,Builtin,2,7962,0x109f82280,204,DatePrototypeGetMilliseconds
code-creation,Builtin,2,7967,0x109f82380,220,DatePrototypeGetMinutes
code-creation,Builtin,2,7972,0x109f82480,220,DatePrototypeGetMonth
code-creation,Builtin,2,7977,0x109f82580,220,DatePrototypeGetSeconds
code-creation,Builtin,2,7982,0x109f82680,128,DatePrototypeGetTime
code-creation,Builtin,2,7987,0x109f82740,204,DatePrototypeGetTimezoneOffset
code-creation,Builtin,2,7993,0x109f82840,204,DatePrototypeGetUTCDate
code-creation,Builtin,2,7998,0x109f82940,204,DatePrototypeGetUTCDay
code-creation,Builtin,2,8003,0x109f82a40,204,DatePrototypeGetUTCFullYear
code-creation,Builtin,2,8008,0x109f82b40,204,DatePrototypeGetUTCHours
code-creation,Builtin,2,8013,0x109f82c40,204,DatePrototypeGetUTCMilliseconds
code-creation,Builtin,2,8018,0x109f82d40,204,DatePrototypeGetUTCMinutes
code-creation,Builtin,2,8024,0x109f82e40,204,DatePrototypeGetUTCMonth
code-creation,Builtin,2,8029,0x109f82f40,204,DatePrototypeGetUTCSeconds
code-creation,Builtin,2,8034,0x109f83040,128,DatePrototypeValueOf
code-creation,Builtin,2,8039,0x109f83100,436,DatePrototypeToPrimitive
code-creation,Builtin,2,8044,0x109f832c0,12,DatePrototypeGetYear
code-creation,Builtin,2,8049,0x109f83300,12,DatePrototypeSetYear
code-creation,Builtin,2,8054,0x109f83340,12,DateNow
code-creation,Builtin,2,8058,0x109f83380,12,DateParse
code-creation,Builtin,2,8062,0x109f833c0,12,DatePrototypeSetDate
code-creation,Builtin,2,8067,0x109f83400,12,DatePrototypeSetFullYear
code-creation,Builtin,2,8080,0x109f83440,12,DatePrototypeSetHours
code-creation,Builtin,2,8085,0x109f83480,12,DatePrototypeSetMilliseconds
code-creation,Builtin,2,8091,0x109f834c0,12,DatePrototypeSetMinutes
code-creation,Builtin,2,8096,0x109f83500,12,DatePrototypeSetMonth
code-creation,Builtin,2,8101,0x109f83540,12,DatePrototypeSetSeconds
code-creation,Builtin,2,8106,0x109f83580,12,DatePrototypeSetTime
code-creation,Builtin,2,8111,0x109f835c0,12,DatePrototypeSetUTCDate
code-creation,Builtin,2,8116,0x109f83600,12,DatePrototypeSetUTCFullYear
code-creation,Builtin,2,8121,0x109f83640,12,DatePrototypeSetUTCHours
code-creation,Builtin,2,8126,0x109f83680,12,DatePrototypeSetUTCMilliseconds
code-creation,Builtin,2,8131,0x109f836c0,12,DatePrototypeSetUTCMinutes
code-creation,Builtin,2,8137,0x109f83700,12,DatePrototypeSetUTCMonth
code-creation,Builtin,2,8142,0x109f83740,12,DatePrototypeSetUTCSeconds
code-creation,Builtin,2,8147,0x109f83780,12,DatePrototypeToDateString
code-creation,Builtin,2,8152,0x109f837c0,12,DatePrototypeToISOString
code-creation,Builtin,2,8157,0x109f83800,12,DatePrototypeToUTCString
code-creation,Builtin,2,8162,0x109f83840,12,DatePrototypeToString
code-creation,Builtin,2,8167,0x109f83880,12,DatePrototypeToTimeString
code-creation,Builtin,2,8172,0x109f838c0,12,DatePrototypeToJson
code-creation,Builtin,2,8177,0x109f83900,12,DateUTC
code-creation,Builtin,2,8181,0x109f83940,12,ErrorConstructor
code-creation,Builtin,2,8186,0x109f83980,12,ErrorCaptureStackTrace
code-creation,Builtin,2,8191,0x109f839c0,12,ErrorPrototypeToString
code-creation,Builtin,2,8196,0x109f83a00,12,FunctionConstructor
code-creation,Builtin,2,8201,0x109f83a40,80,FunctionPrototypeApply
code-creation,Builtin,2,8206,0x109f83ac0,12,FunctionPrototypeBind
code-creation,Builtin,2,8211,0x109f83b00,36,FunctionPrototypeCall
code-creation,Builtin,2,8216,0x109f83b40,12,FunctionPrototypeToString
code-creation,Builtin,2,8221,0x109f83b80,252,CreateIterResultObject
code-creation,Builtin,2,8226,0x109f83c80,1120,CreateGeneratorObject
code-creation,Builtin,2,8231,0x109f84100,12,GeneratorFunctionConstructor
code-creation,Builtin,2,8236,0x109f84140,404,GeneratorPrototypeNext
code-creation,Builtin,2,8241,0x109f84300,404,GeneratorPrototypeReturn
code-creation,Builtin,2,8246,0x109f844c0,408,GeneratorPrototypeThrow
code-creation,Builtin,2,8251,0x109f84680,12,AsyncFunctionConstructor
code-creation,Builtin,2,8256,0x109f846c0,456,SuspendGeneratorBaseline
code-creation,Builtin,2,8261,0x109f848c0,100,ResumeGeneratorBaseline
code-creation,Builtin,2,8266,0x109f84940,36,GetIteratorWithFeedbackLazyDeoptContinuation
code-creation,Builtin,2,8272,0x109f84980,88,CallIteratorWithFeedbackLazyDeoptContinuation
code-creation,Builtin,2,8280,0x109f84a00,12,GlobalDecodeURI
code-creation,Builtin,2,8285,0x109f84a40,12,GlobalDecodeURIComponent
code-creation,Builtin,2,8290,0x109f84a80,12,GlobalEncodeURI
code-creation,Builtin,2,8294,0x109f84ac0,12,GlobalEncodeURIComponent
code-creation,Builtin,2,8299,0x109f84b00,12,GlobalEscape
code-creation,Builtin,2,8304,0x109f84b40,12,GlobalUnescape
code-creation,Builtin,2,8308,0x109f84b80,12,GlobalEval
code-creation,Builtin,2,8313,0x109f84bc0,176,GlobalIsFinite
code-creation,Builtin,2,8317,0x109f84c80,172,GlobalIsNaN
code-creation,Builtin,2,8331,0x109f84d40,12,JsonParse
code-creation,Builtin,2,8337,0x109f84d80,12,JsonStringify
code-creation,Builtin,2,8341,0x109f84dc0,12,JsonRawJson
code-creation,Builtin,2,8346,0x109f84e00,12,JsonIsRawJson
code-creation,Builtin,2,8350,0x109f84e40,4832,LoadIC
code-creation,Builtin,2,8355,0x109f86140,4456,LoadIC_Megamorphic
code-creation,Builtin,2,8361,0x109f872c0,4640,LoadIC_Noninlined
code-creation,Builtin,2,8366,0x109f88500,44,LoadICTrampoline
code-creation,Builtin,2,8372,0x109f88540,24,LoadICBaseline
code-creation,Builtin,2,8395,0x109f88580,44,LoadICTrampoline_Megamorphic
code-creation,Builtin,2,8401,0x109f885c0,8988,LoadSuperIC
code-creation,Builtin,2,8421,0x109f8a900,24,LoadSuperICBaseline
code-creation,Builtin,2,8428,0x109f8a940,8028,KeyedLoadIC
code-creation,Builtin,2,8432,0x109f8c8c0,16552,KeyedLoadIC_Megamorphic
code-creation,Builtin,2,8447,0x109f90980,13612,KeyedLoadIC_MegamorphicStringKey
code-creation,Builtin,2,8453,0x109f93ec0,44,KeyedLoadICTrampoline
code-creation,Builtin,2,8458,0x109f93f00,24,KeyedLoadICBaseline
code-creation,Builtin,2,8464,0x109f93f40,44,KeyedLoadICTrampoline_Megamorphic
code-creation,Builtin,2,8470,0x109f93f80,44,KeyedLoadICTrampoline_MegamorphicStringKey
code-creation,Builtin,2,8475,0x109f93fc0,5412,StoreGlobalIC
code-creation,Builtin,2,8480,0x109f95500,44,StoreGlobalICTrampoline
code-creation,Builtin,2,8487,0x109f95540,24,StoreGlobalICBaseline
code-creation,Builtin,2,8493,0x109f95580,6036,StoreIC
code-creation,Builtin,2,8500,0x109f96d40,44,StoreICTrampoline
code-creation,Builtin,2,8506,0x109f96d80,24,StoreICBaseline
code-creation,Builtin,2,8513,0x109f96dc0,5836,DefineNamedOwnIC
code-creation,Builtin,2,8519,0x109f984c0,44,DefineNamedOwnICTrampoline
code-creation,Builtin,2,8526,0x109f98500,24,DefineNamedOwnICBaseline
code-creation,Builtin,2,8533,0x109f98540,6544,KeyedStoreIC
code-creation,Builtin,2,8539,0x109f99f00,44,KeyedStoreICTrampoline
code-creation,Builtin,2,8546,0x109f99f40,24,KeyedStoreICBaseline
code-creation,Builtin,2,8553,0x109f99f80,6448,DefineKeyedOwnIC
code-creation,Builtin,2,8560,0x109f9b8c0,52,DefineKeyedOwnICTrampoline
code-creation,Builtin,2,8567,0x109f9b900,28,DefineKeyedOwnICBaseline
code-creation,Builtin,2,8574,0x109f9b940,320,StoreInArrayLiteralIC
code-creation,Builtin,2,8581,0x109f9bac0,24,StoreInArrayLiteralICBaseline
code-creation,Builtin,2,8588,0x109f9bb00,196,LookupContextTrampoline
code-creation,Builtin,2,8595,0x109f9bc00,200,LookupContextBaseline
code-creation,Builtin,2,8601,0x109f9bd00,196,LookupContextInsideTypeofTrampoline
code-creation,Builtin,2,8609,0x109f9be00,200,LookupContextInsideTypeofBaseline
code-creation,Builtin,2,8616,0x109f9bf00,3052,LoadGlobalIC
code-creation,Builtin,2,8622,0x109f9cb00,3032,LoadGlobalICInsideTypeof
code-creation,Builtin,2,8629,0x109f9d700,44,LoadGlobalICTrampoline
code-creation,Builtin,2,8636,0x109f9d740,24,LoadGlobalICBaseline
code-creation,Builtin,2,8643,0x109f9d780,44,LoadGlobalICInsideTypeofTrampoline
code-creation,Builtin,2,8650,0x109f9d7c0,24,LoadGlobalICInsideTypeofBaseline
code-creation,Builtin,2,8657,0x109f9d800,192,LookupGlobalIC
code-creation,Builtin,2,8664,0x109f9d900,228,LookupGlobalICTrampoline
code-creation,Builtin,2,8671,0x109f9da00,204,LookupGlobalICBaseline
code-creation,Builtin,2,8677,0x109f9db00,192,LookupGlobalICInsideTypeof
code-creation,Builtin,2,8684,0x109f9dc00,228,LookupGlobalICInsideTypeofTrampoline
code-creation,Builtin,2,8692,0x109f9dd00,204,LookupGlobalICInsideTypeofBaseline
code-creation,Builtin,2,8699,0x109f9de00,3088,CloneObjectIC
code-creation,Builtin,2,8706,0x109f9ea40,24,CloneObjectICBaseline
code-creation,Builtin,2,8713,0x109f9ea80,2808,CloneObjectIC_Slow
code-creation,Builtin,2,8719,0x109f9f580,3140,KeyedHasIC
code-creation,Builtin,2,8725,0x109fa0200,24,KeyedHasICBaseline
code-creation,Builtin,2,8732,0x109fa0240,3796,KeyedHasIC_Megamorphic
code-creation,Builtin,2,8739,0x109fa1140,1892,IterableToList
code-creation,Builtin,2,8745,0x109fa18c0,1704,IterableToFixedArray
code-creation,Builtin,2,8752,0x109fa1f80,724,IterableToListWithSymbolLookup
code-creation,Builtin,2,8759,0x109fa2280,56,IterableToFixedArrayWithSymbolLookupSlow
code-creation,Builtin,2,8767,0x109fa22c0,112,IterableToListMayPreserveHoles
code-creation,Builtin,2,8774,0x109fa2340,1344,IterableToFixedArrayForWasm
code-creation,Builtin,2,8781,0x109fa28c0,1888,StringListFromIterable
code-creation,Builtin,2,8788,0x109fa3040,1220,FindOrderedHashMapEntry
code-creation,Builtin,2,8795,0x109fa3540,4532,MapConstructor
code-creation,Builtin,2,8802,0x109fa4700,1972,MapPrototypeSet
code-creation,Builtin,2,8808,0x109fa4ec0,1604,MapPrototypeDelete
code-creation,Builtin,2,8815,0x109fa5540,212,MapPrototypeGet
code-creation,Builtin,2,8821,0x109fa5640,172,MapPrototypeHas
code-creation,Builtin,2,8828,0x109fa5700,12,MapPrototypeClear
code-creation,Builtin,2,8834,0x109fa5740,288,MapPrototypeEntries
code-creation,Builtin,2,8841,0x109fa5880,144,MapPrototypeGetSize
code-creation,Builtin,2,8854,0x109fa5940,560,MapPrototypeForEach
code-creation,Builtin,2,8861,0x109fa5b80,288,MapPrototypeKeys
code-creation,Builtin,2,8868,0x109fa5cc0,288,MapPrototypeValues
code-creation,Builtin,2,8874,0x109fa5e00,932,MapIteratorPrototypeNext
code-creation,Builtin,2,8881,0x109fa61c0,1328,MapIteratorToList
code-creation,Builtin,2,8888,0x109fa6700,12,NumberPrototypeToExponential
code-creation,Builtin,2,8895,0x109fa6740,12,NumberPrototypeToFixed
code-creation,Builtin,2,8904,0x109fa6780,12,NumberPrototypeToLocaleString
code-creation,Builtin,2,8911,0x109fa67c0,12,NumberPrototypeToPrecision
code-creation,Builtin,2,8918,0x109fa6800,356,SameValue
code-creation,Builtin,2,8924,0x109fa6980,200,SameValueNumbersOnly
code-creation,Builtin,2,8931,0x109fa6a80,1320,Add_Baseline
code-creation,Builtin,2,8937,0x109fa6fc0,1020,AddSmi_Baseline
code-creation,Builtin,2,8944,0x109fa73c0,1296,Subtract_Baseline
code-creation,Builtin,2,8951,0x109fa7900,1032,SubtractSmi_Baseline
code-creation,Builtin,2,8957,0x109fa7d40,1392,Multiply_Baseline
code-creation,Builtin,2,8964,0x109fa82c0,1120,MultiplySmi_Baseline
code-creation,Builtin,2,8971,0x109fa8740,1480,Divide_Baseline
code-creation,Builtin,2,8977,0x109fa8d40,1252,DivideSmi_Baseline
code-creation,Builtin,2,8984,0x109fa9240,1416,Modulus_Baseline
code-creation,Builtin,2,8990,0x109fa9800,1136,ModulusSmi_Baseline
code-creation,Builtin,2,8997,0x109fa9c80,780,Exponentiate_Baseline
code-creation,Builtin,2,9004,0x109fa9fc0,672,ExponentiateSmi_Baseline
code-creation,Builtin,2,9011,0x109faa280,1712,BitwiseAnd_Baseline
code-creation,Builtin,2,9017,0x109faa940,420,BitwiseAndSmi_Baseline
code-creation,Builtin,2,9024,0x109faab00,1712,BitwiseOr_Baseline
code-creation,Builtin,2,9031,0x109fab1c0,420,BitwiseOrSmi_Baseline
code-creation,Builtin,2,9038,0x109fab380,1712,BitwiseXor_Baseline
code-creation,Builtin,2,9044,0x109faba40,420,BitwiseXorSmi_Baseline
code-creation,Builtin,2,9051,0x109fabc00,1092,ShiftLeft_Baseline
code-creation,Builtin,2,9058,0x109fac080,444,ShiftLeftSmi_Baseline
code-creation,Builtin,2,9065,0x109fac240,1092,ShiftRight_Baseline
code-creation,Builtin,2,9071,0x109fac6c0,428,ShiftRightSmi_Baseline
code-creation,Builtin,2,9078,0x109fac880,1292,ShiftRightLogical_Baseline
code-creation,Builtin,2,9085,0x109facdc0,680,ShiftRightLogicalSmi_Baseline
code-creation,Builtin,2,9093,0x109fad080,1256,Add_WithFeedback
code-creation,Builtin,2,9099,0x109fad580,1244,Subtract_WithFeedback
code-creation,Builtin,2,9106,0x109fada80,1336,Multiply_WithFeedback
code-creation,Builtin,2,9113,0x109fadfc0,1440,Divide_WithFeedback
code-creation,Builtin,2,9119,0x109fae580,1360,Modulus_WithFeedback
code-creation,Builtin,2,9126,0x109faeb00,740,Exponentiate_WithFeedback
code-creation,Builtin,2,9133,0x109faee00,1556,BitwiseAnd_WithFeedback
code-creation,Builtin,2,9140,0x109faf440,1556,BitwiseOr_WithFeedback
code-creation,Builtin,2,9147,0x109fafa80,1556,BitwiseXor_WithFeedback
code-creation,Builtin,2,9154,0x109fb00c0,1072,ShiftLeft_WithFeedback
code-creation,Builtin,2,9161,0x109fb0500,1072,ShiftRight_WithFeedback
code-creation,Builtin,2,9168,0x109fb0940,1144,ShiftRightLogical_WithFeedback
code-creation,Builtin,2,9175,0x109fb0dc0,1956,Equal_Baseline
code-creation,Builtin,2,9181,0x109fb1580,1180,StrictEqual_Baseline
code-creation,Builtin,2,9188,0x109fb1a40,1488,LessThan_Baseline
code-creation,Builtin,2,9195,0x109fb2040,1488,GreaterThan_Baseline
code-creation,Builtin,2,9201,0x109fb2640,1488,LessThanOrEqual_Baseline
code-creation,Builtin,2,9208,0x109fb2c40,1488,GreaterThanOrEqual_Baseline
code-creation,Builtin,2,9215,0x109fb3240,1864,Equal_WithFeedback
code-creation,Builtin,2,9222,0x109fb39c0,1180,StrictEqual_WithFeedback
code-creation,Builtin,2,9229,0x109fb3e80,1480,LessThan_WithFeedback
code-creation,Builtin,2,9236,0x109fb4480,1480,GreaterThan_WithFeedback
code-creation,Builtin,2,9243,0x109fb4a80,1480,LessThanOrEqual_WithFeedback
code-creation,Builtin,2,9250,0x109fb5080,1480,GreaterThanOrEqual_WithFeedback
code-creation,Builtin,2,9257,0x109fb5680,404,BitwiseNot_Baseline
code-creation,Builtin,2,9264,0x109fb5840,560,Decrement_Baseline
code-creation,Builtin,2,9277,0x109fb5a80,564,Increment_Baseline
code-creation,Builtin,2,9284,0x109fb5cc0,588,Negate_Baseline
code-creation,Builtin,2,9291,0x109fb5f40,404,BitwiseNot_WithFeedback
code-creation,Builtin,2,9298,0x109fb6100,552,Decrement_WithFeedback
code-creation,Builtin,2,9305,0x109fb6340,556,Increment_WithFeedback
code-creation,Builtin,2,9311,0x109fb6580,580,Negate_WithFeedback
code-creation,Builtin,2,9318,0x109fb6800,264,ObjectAssign
code-creation,Builtin,2,9324,0x109fb6940,992,ObjectCreate
code-creation,Builtin,2,9331,0x109fb6d40,12,ObjectDefineGetter
code-creation,Builtin,2,9338,0x109fb6d80,12,ObjectDefineProperties
code-creation,Builtin,2,9345,0x109fb6dc0,12,ObjectDefineProperty
code-creation,Builtin,2,9352,0x109fb6e00,12,ObjectDefineSetter
code-creation,Builtin,2,9359,0x109fb6e40,1560,ObjectEntries
code-creation,Builtin,2,9365,0x109fb7480,12,ObjectFreeze
code-creation,Builtin,2,9372,0x109fb74c0,5076,ObjectGetOwnPropertyDescriptor
code-creation,Builtin,2,9379,0x109fb88c0,12,ObjectGetOwnPropertyDescriptors
code-creation,Builtin,2,9386,0x109fb8900,952,ObjectGetOwnPropertyNames
code-creation,Builtin,2,9393,0x109fb8cc0,12,ObjectGetOwnPropertySymbols
code-creation,Builtin,2,9400,0x109fb8d00,168,ObjectHasOwn
code-creation,Builtin,2,9407,0x109fb8dc0,416,ObjectIs
code-creation,Builtin,2,9413,0x109fb8f80,12,ObjectIsFrozen
code-creation,Builtin,2,9419,0x109fb8fc0,12,ObjectIsSealed
code-creation,Builtin,2,9426,0x109fb9000,924,ObjectKeys
code-creation,Builtin,2,9432,0x109fb93c0,12,ObjectLookupGetter
code-creation,Builtin,2,9439,0x109fb9400,12,ObjectLookupSetter
code-creation,Builtin,2,9445,0x109fb9440,3180,ObjectPrototypeHasOwnProperty
code-creation,Builtin,2,9453,0x109fba0c0,300,ObjectPrototypeIsPrototypeOf
code-creation,Builtin,2,9460,0x109fba200,12,ObjectPrototypePropertyIsEnumerable
code-creation,Builtin,2,9467,0x109fba240,12,ObjectPrototypeGetProto
code-creation,Builtin,2,9475,0x109fba280,12,ObjectPrototypeSetProto
code-creation,Builtin,2,9483,0x109fba2c0,12,ObjectSeal
code-creation,Builtin,2,9489,0x109fba300,1384,ObjectToString
code-creation,Builtin,2,9495,0x109fba880,1288,ObjectValues
code-creation,Builtin,2,9502,0x109fbadc0,368,OrdinaryHasInstance
code-creation,Builtin,2,9508,0x109fbaf40,372,InstanceOf
code-creation,Builtin,2,9515,0x109fbb0c0,640,InstanceOf_WithFeedback
code-creation,Builtin,2,9522,0x109fbb380,648,InstanceOf_Baseline
code-creation,Builtin,2,9528,0x109fbb640,300,ForInEnumerate
code-creation,Builtin,2,9535,0x109fbb780,132,ForInPrepare
code-creation,Builtin,2,9541,0x109fbb840,3712,ForInFilter
code-creation,Builtin,2,9547,0x109fbc700,56,ReflectApply
code-creation,Builtin,2,9554,0x109fbc740,64,ReflectConstruct
code-creation,Builtin,2,9560,0x109fbc7c0,12,ReflectDefineProperty
code-creation,Builtin,2,9567,0x109fbc800,12,ReflectOwnKeys
code-creation,Builtin,2,9572,0x109fbc840,12,ReflectSet
code-creation,Builtin,2,9576,0x109fbc880,12,RegExpCapture1Getter
code-creation,Builtin,2,9581,0x109fbc8c0,12,RegExpCapture2Getter
code-creation,Builtin,2,9586,0x109fbc900,12,RegExpCapture3Getter
code-creation,Builtin,2,9591,0x109fbc940,12,RegExpCapture4Getter
code-creation,Builtin,2,9596,0x109fbc980,12,RegExpCapture5Getter
code-creation,Builtin,2,9603,0x109fbc9c0,12,RegExpCapture6Getter
code-creation,Builtin,2,9618,0x109fbca00,12,RegExpCapture7Getter
code-creation,Builtin,2,9625,0x109fbca40,12,RegExpCapture8Getter
code-creation,Builtin,2,9631,0x109fbca80,12,RegExpCapture9Getter
code-creation,Builtin,2,9638,0x109fbcac0,2396,RegExpConstructor
code-creation,Builtin,2,9645,0x109fbd440,12,RegExpInputGetter
code-creation,Builtin,2,9651,0x109fbd480,12,RegExpInputSetter
code-creation,Builtin,2,9658,0x109fbd4c0,12,RegExpLastMatchGetter
code-creation,Builtin,2,9665,0x109fbd500,12,RegExpLastParenGetter
code-creation,Builtin,2,9671,0x109fbd540,12,RegExpLeftContextGetter
code-creation,Builtin,2,9678,0x109fbd580,948,RegExpPrototypeCompile
code-creation,Builtin,2,9686,0x109fbd940,12,RegExpPrototypeToString
code-creation,Builtin,2,9692,0x109fbd980,12,RegExpRightContextGetter
code-creation,Builtin,2,9699,0x109fbd9c0,256,RegExpExecAtom
code-creation,Builtin,2,9713,0x109fbdb00,1100,RegExpExecInternal
code-creation,Builtin,2,9720,0x109fbdf80,8,RegExpInterpreterTrampoline
code-creation,Builtin,2,9727,0x109fbdfc0,8,RegExpExperimentalTrampoline
code-creation,Builtin,2,9734,0x109fbe000,1216,FindOrderedHashSetEntry
code-creation,Builtin,2,9741,0x109fbe500,3216,SetConstructor
code-creation,Builtin,2,9748,0x109fbf1c0,172,SetPrototypeHas
code-creation,Builtin,2,9754,0x109fbf280,1788,SetPrototypeAdd
code-creation,Builtin,2,9761,0x109fbf980,1580,SetPrototypeDelete
code-creation,Builtin,2,9767,0x109fbffc0,12,SetPrototypeClear
code-creation,Builtin,2,9774,0x109fc0000,288,SetPrototypeEntries
code-creation,Builtin,2,9781,0x109fc0140,148,SetPrototypeGetSize
code-creation,Builtin,2,9787,0x109fc0200,540,SetPrototypeForEach
code-creation,Builtin,2,9794,0x109fc0440,288,SetPrototypeValues
code-creation,Builtin,2,9801,0x109fc0580,864,SetIteratorPrototypeNext
code-creation,Builtin,2,9807,0x109fc0900,1200,SetOrSetIteratorToList
code-creation,Builtin,2,9814,0x109fc0dc0,12,ShadowRealmConstructor
code-creation,Builtin,2,9821,0x109fc0e00,640,ShadowRealmGetWrappedValue
code-creation,Builtin,2,9828,0x109fc10c0,12,ShadowRealmPrototypeEvaluate
code-creation,Builtin,2,9835,0x109fc1100,1432,ShadowRealmPrototypeImportValue
code-creation,Builtin,2,9843,0x109fc16c0,240,ShadowRealmImportValueFulfilled
code-creation,Builtin,2,9850,0x109fc17c0,76,ShadowRealmImportValueRejected
code-creation,Builtin,2,9857,0x109fc1840,12,SharedArrayBufferPrototypeGetByteLength
code-creation,Builtin,2,9865,0x109fc1880,12,SharedArrayBufferPrototypeSlice
code-creation,Builtin,2,9872,0x109fc18c0,12,SharedArrayBufferPrototypeGrow
code-creation,Builtin,2,9879,0x109fc1900,2104,AtomicsLoad
code-creation,Builtin,2,9885,0x109fc2140,2200,AtomicsStore
code-creation,Builtin,2,9892,0x109fc2a00,2896,AtomicsExchange
code-creation,Builtin,2,9898,0x109fc3580,3256,AtomicsCompareExchange
code-creation,Builtin,2,9905,0x109fc4240,2912,AtomicsAdd
code-creation,Builtin,2,9911,0x109fc4dc0,2912,AtomicsSub
code-creation,Builtin,2,9917,0x109fc5940,2912,AtomicsAnd
code-creation,Builtin,2,9924,0x109fc64c0,2912,AtomicsOr
code-creation,Builtin,2,9930,0x109fc7040,2912,AtomicsXor
code-creation,Builtin,2,9936,0x109fc7bc0,12,AtomicsNotify
code-creation,Builtin,2,9942,0x109fc7c00,12,AtomicsIsLockFree
code-creation,Builtin,2,9949,0x109fc7c40,12,AtomicsWait
code-creation,Builtin,2,9955,0x109fc7c80,12,AtomicsWaitAsync
code-creation,Builtin,2,9962,0x109fc7cc0,12,StringFromCodePoint
code-creation,Builtin,2,9969,0x109fc7d00,1548,StringFromCharCode
code-creation,Builtin,2,9975,0x109fc8340,12,StringPrototypeLastIndexOf
code-creation,Builtin,2,9982,0x109fc8380,4736,StringPrototypeMatchAll
code-creation,Builtin,2,9989,0x109fc9640,12,StringPrototypeLocaleCompare
code-creation,Builtin,2,9996,0x109fc9680,1300,StringPrototypeReplace
code-creation,Builtin,2,10003,0x109fc9bc0,3072,StringPrototypeSplit
code-creation,Builtin,2,10010,0x109fca800,12,StringRaw
code-creation,Builtin,2,10016,0x109fca840,12,SymbolConstructor
code-creation,Builtin,2,10023,0x109fca880,12,SymbolFor
code-creation,Builtin,2,10029,0x109fca8c0,12,SymbolKeyFor
code-creation,Builtin,2,10035,0x109fca900,88,TypedArrayBaseConstructor
code-creation,Builtin,2,10042,0x109fca980,252,TypedArrayConstructor
code-creation,Builtin,2,10049,0x109fcaa80,12,TypedArrayPrototypeBuffer
code-creation,Builtin,2,10056,0x109fcaac0,880,TypedArrayPrototypeByteLength
code-creation,Builtin,2,10063,0x109fcae40,364,TypedArrayPrototypeByteOffset
code-creation,Builtin,2,10070,0x109fcafc0,592,TypedArrayPrototypeLength
code-creation,Builtin,2,10077,0x109fcb240,12,TypedArrayPrototypeCopyWithin
code-creation,Builtin,2,10084,0x109fcb280,12,TypedArrayPrototypeFill
code-creation,Builtin,2,10091,0x109fcb2c0,12,TypedArrayPrototypeIncludes
code-creation,Builtin,2,10098,0x109fcb300,12,TypedArrayPrototypeIndexOf
code-creation,Builtin,2,10105,0x109fcb340,12,TypedArrayPrototypeLastIndexOf
code-creation,Builtin,2,10113,0x109fcb380,12,TypedArrayPrototypeReverse
code-creation,Builtin,2,10120,0x109fcb3c0,524,TypedArrayPrototypeToStringTag
code-creation,Builtin,2,10134,0x109fcb600,30724,TypedArrayPrototypeMap
code-creation,Builtin,2,10141,0x109fd2e40,196,JSToWasmWrapperAsm
code-creation,Builtin,2,10148,0x109fd2f40,644,WasmReturnPromiseOnSuspendAsm
code-creation,Builtin,2,10155,0x109fd3200,56,WasmToJsWrapperAsm
code-creation,Builtin,2,10162,0x109fd3240,4868,WasmToJsWrapperCSA
code-creation,Builtin,2,10168,0x109fd4580,204,WasmSuspend
code-creation,Builtin,2,10175,0x109fd4680,348,WasmResume
code-creation,Builtin,2,10181,0x109fd4800,368,WasmReject
code-creation,Builtin,2,10187,0x109fd4980,156,WasmCompileLazy
code-creation,Builtin,2,10193,0x109fd4a40,192,WasmLiftoffFrameSetup
code-creation,Builtin,2,10200,0x109fd4b40,180,WasmDebugBreak
code-creation,Builtin,2,10207,0x109fd4c00,16,WasmOnStackReplace
code-creation,Builtin,2,10213,0x109fd4c40,132,WasmFloat32ToNumber
code-creation,Builtin,2,10220,0x109fd4d00,132,WasmFloat64ToNumber
code-creation,Builtin,2,10227,0x109fd4dc0,1436,WasmFloat64ToString
code-creation,Builtin,2,10233,0x109fd5380,24,JSToWasmLazyDeoptContinuation
code-creation,Builtin,2,10241,0x109fd53c0,4840,WeakMapConstructor
code-creation,Builtin,2,10249,0x109fd66c0,260,WeakMapLookupHashIndex
code-creation,Builtin,2,10256,0x109fd6800,224,WeakMapGet
code-creation,Builtin,2,10263,0x109fd6900,184,WeakMapPrototypeHas
code-creation,Builtin,2,10271,0x109fd69c0,244,WeakMapPrototypeSet
code-creation,Builtin,2,10278,0x109fd6ac0,156,WeakMapPrototypeDelete
code-creation,Builtin,2,10286,0x109fd6b80,3432,WeakSetConstructor
code-creation,Builtin,2,10292,0x109fd7900,184,WeakSetPrototypeHas
code-creation,Builtin,2,10300,0x109fd79c0,248,WeakSetPrototypeAdd
code-creation,Builtin,2,10307,0x109fd7ac0,156,WeakSetPrototypeDelete
code-creation,Builtin,2,10314,0x109fd7b80,420,WeakCollectionDelete
code-creation,Builtin,2,10322,0x109fd7d40,904,WeakCollectionSet
code-creation,Builtin,2,10328,0x109fd8100,12,SharedSpaceJSObjectHasInstance
code-creation,Builtin,2,10336,0x109fd8140,12,SharedStructTypeConstructor
code-creation,Builtin,2,10344,0x109fd8180,12,SharedStructTypeIsSharedStruct
code-creation,Builtin,2,10351,0x109fd81c0,12,SharedStructConstructor
code-creation,Builtin,2,10359,0x109fd8200,12,SharedArrayConstructor
code-creation,Builtin,2,10366,0x109fd8240,12,SharedArrayIsSharedArray
code-creation,Builtin,2,10373,0x109fd8280,12,AtomicsMutexConstructor
code-creation,Builtin,2,10380,0x109fd82c0,12,AtomicsMutexIsMutex
code-creation,Builtin,2,10388,0x109fd8300,12,AtomicsMutexLock
code-creation,Builtin,2,10394,0x109fd8340,12,AtomicsMutexTryLock
code-creation,Builtin,2,10402,0x109fd8380,12,AtomicsConditionConstructor
code-creation,Builtin,2,10409,0x109fd83c0,12,AtomicsConditionIsCondition
code-creation,Builtin,2,10417,0x109fd8400,12,AtomicsConditionWait
code-creation,Builtin,2,10424,0x109fd8440,12,AtomicsConditionNotify
code-creation,Builtin,2,10432,0x109fd8480,296,AsyncGeneratorResolve
code-creation,Builtin,2,10439,0x109fd85c0,108,AsyncGeneratorReject
code-creation,Builtin,2,10446,0x109fd8640,1616,AsyncGeneratorYieldWithAwait
code-creation,Builtin,2,10454,0x109fd8cc0,1904,AsyncGeneratorReturn
code-creation,Builtin,2,10462,0x109fd9440,412,AsyncGeneratorResumeNext
code-creation,Builtin,2,10470,0x109fd9600,12,AsyncGeneratorFunctionConstructor
code-creation,Builtin,2,10478,0x109fd9640,1048,AsyncGeneratorPrototypeNext
code-creation,Builtin,2,10485,0x109fd9a80,1048,AsyncGeneratorPrototypeReturn
code-creation,Builtin,2,10493,0x109fd9ec0,1048,AsyncGeneratorPrototypeThrow
code-creation,Builtin,2,10501,0x109fda300,1592,AsyncGeneratorAwaitCaught
code-creation,Builtin,2,10508,0x109fda940,1592,AsyncGeneratorAwaitUncaught
code-creation,Builtin,2,10516,0x109fdaf80,176,AsyncGeneratorAwaitResolveClosure
code-creation,Builtin,2,10523,0x109fdb040,172,AsyncGeneratorAwaitRejectClosure
code-creation,Builtin,2,10531,0x109fdb100,124,AsyncGeneratorYieldWithAwaitResolveClosure
code-creation,Builtin,2,10540,0x109fdb180,124,AsyncGeneratorReturnClosedResolveClosure
code-creation,Builtin,2,10547,0x109fdb200,116,AsyncGeneratorReturnClosedRejectClosure
code-creation,Builtin,2,10556,0x109fdb280,180,AsyncGeneratorReturnResolveClosure
code-creation,Builtin,2,10570,0x109fdb340,1704,AsyncFromSyncIteratorPrototypeNext
code-creation,Builtin,2,10578,0x109fdba00,1800,AsyncFromSyncIteratorPrototypeThrow
code-creation,Builtin,2,10586,0x109fdc140,1824,AsyncFromSyncIteratorPrototypeReturn
code-creation,Builtin,2,10594,0x109fdc880,100,AsyncIteratorValueUnwrap
code-creation,Builtin,2,10601,0x109fdc900,192,CEntry_Return1_ArgvInRegister_NoBuiltinExit
code-creation,Builtin,2,10610,0x109fdca00,204,CEntry_Return1_ArgvOnStack_BuiltinExit
code-creation,Builtin,2,10618,0x109fdcb00,204,CEntry_Return1_ArgvOnStack_NoBuiltinExit
code-creation,Builtin,2,10626,0x109fdcc00,192,CEntry_Return2_ArgvInRegister_NoBuiltinExit
code-creation,Builtin,2,10634,0x109fdcd00,204,CEntry_Return2_ArgvOnStack_BuiltinExit
code-creation,Builtin,2,10642,0x109fdce00,204,CEntry_Return2_ArgvOnStack_NoBuiltinExit
code-creation,Builtin,2,10650,0x109fdcf00,384,WasmCEntry
code-creation,Builtin,2,10657,0x109fdd0c0,4,DirectCEntry
code-creation,Builtin,2,10664,0x109fdd100,1452,StringAdd_CheckNone
code-creation,Builtin,2,10670,0x109fdd6c0,3700,SubString
code-creation,Builtin,2,10677,0x109fde540,84,DoubleToI
code-creation,Builtin,2,10683,0x109fde5c0,3204,GetProperty
code-creation,Builtin,2,10690,0x109fdf280,3420,GetPropertyWithReceiver
code-creation,Builtin,2,10698,0x109fe0000,17984,SetProperty
code-creation,Builtin,2,10705,0x109fe4680,14964,CreateDataProperty
code-creation,Builtin,2,10712,0x109fe8100,52,GetOwnPropertyDescriptor
code-creation,Builtin,2,10720,0x109fe8140,8,MemCopyUint8Uint8
code-creation,Builtin,2,10725,0x109fe8180,8,MemMove
tick,0x7ff8092cbace,10777,0,0x0,6
tick,0x7ff809274631,10816,0,0x0,6
tick,0x7ff8091b897d,10825,0,0x0,6
code-creation,Builtin,2,10834,0x109fe81c0,196,FindNonDefaultConstructorOrConstruct
code-creation,Builtin,2,10847,0x109fe82c0,2988,OrdinaryGetOwnPropertyDescriptor
code-creation,Builtin,2,10870,0x109fe8e80,12,IsTraceCategoryEnabled
code-creation,Builtin,2,10875,0x109fe8ec0,12,Trace
code-creation,Builtin,2,10879,0x109fe8f00,12,FinalizationRegistryUnregister
code-creation,Builtin,2,10902,0x109fe8f40,408,AsyncModuleEvaluate
code-creation,Builtin,2,10907,0x109fe9100,12,CallAsyncModuleFulfilled
code-creation,Builtin,2,10913,0x109fe9140,12,CallAsyncModuleRejected
code-creation,Builtin,2,10918,0x109fe9180,12,TemporalNowTimeZone
code-creation,Builtin,2,10923,0x109fe91c0,12,TemporalNowInstant
code-creation,Builtin,2,10928,0x109fe9200,12,TemporalNowPlainDateTime
code-creation,Builtin,2,10951,0x109fe9240,12,TemporalNowPlainDateTimeISO
code-creation,Builtin,2,10956,0x109fe9280,12,TemporalNowZonedDateTime
code-creation,Builtin,2,10961,0x109fe92c0,12,TemporalNowZonedDateTimeISO
code-creation,Builtin,2,10966,0x109fe9300,12,TemporalNowPlainDate
code-creation,Builtin,2,10972,0x109fe9340,12,TemporalNowPlainDateISO
code-creation,Builtin,2,10977,0x109fe9380,12,TemporalNowPlainTimeISO
code-creation,Builtin,2,10982,0x109fe93c0,12,TemporalPlainDateConstructor
code-creation,Builtin,2,10987,0x109fe9400,12,TemporalPlainDateFrom
code-creation,Builtin,2,10992,0x109fe9440,12,TemporalPlainDateCompare
code-creation,Builtin,2,10998,0x109fe9480,12,TemporalPlainDatePrototypeCalendar
code-creation,Builtin,2,11003,0x109fe94c0,12,TemporalPlainDatePrototypeYear
code-creation,Builtin,2,11009,0x109fe9500,12,TemporalPlainDatePrototypeMonth
code-creation,Builtin,2,11014,0x109fe9540,12,TemporalPlainDatePrototypeMonthCode
code-creation,Builtin,2,11019,0x109fe9580,12,TemporalPlainDatePrototypeDay
code-creation,Builtin,2,11025,0x109fe95c0,12,TemporalPlainDatePrototypeDayOfWeek
code-creation,Builtin,2,11030,0x109fe9600,12,TemporalPlainDatePrototypeDayOfYear
code-creation,Builtin,2,11036,0x109fe9640,12,TemporalPlainDatePrototypeWeekOfYear
code-creation,Builtin,2,11041,0x109fe9680,12,TemporalPlainDatePrototypeDaysInWeek
code-creation,Builtin,2,11047,0x109fe96c0,12,TemporalPlainDatePrototypeDaysInMonth
code-creation,Builtin,2,11053,0x109fe9700,12,TemporalPlainDatePrototypeDaysInYear
code-creation,Builtin,2,11059,0x109fe9740,12,TemporalPlainDatePrototypeMonthsInYear
code-creation,Builtin,2,11073,0x109fe9780,12,TemporalPlainDatePrototypeInLeapYear
code-creation,Builtin,2,11079,0x109fe97c0,12,TemporalPlainDatePrototypeToPlainYearMonth
code-creation,Builtin,2,11085,0x109fe9800,12,TemporalPlainDatePrototypeToPlainMonthDay
code-creation,Builtin,2,11091,0x109fe9840,12,TemporalPlainDatePrototypeGetISOFields
code-creation,Builtin,2,11097,0x109fe9880,12,TemporalPlainDatePrototypeAdd
code-creation,Builtin,2,11102,0x109fe98c0,12,TemporalPlainDatePrototypeSubtract
code-creation,Builtin,2,11108,0x109fe9900,12,TemporalPlainDatePrototypeWith
code-creation,Builtin,2,11113,0x109fe9940,12,TemporalPlainDatePrototypeWithCalendar
code-creation,Builtin,2,11119,0x109fe9980,12,TemporalPlainDatePrototypeUntil
code-creation,Builtin,2,11124,0x109fe99c0,12,TemporalPlainDatePrototypeSince
code-creation,Builtin,2,11130,0x109fe9a00,12,TemporalPlainDatePrototypeEquals
code-creation,Builtin,2,11135,0x109fe9a40,12,TemporalPlainDatePrototypeToPlainDateTime
code-creation,Builtin,2,11141,0x109fe9a80,12,TemporalPlainDatePrototypeToZonedDateTime
code-creation,Builtin,2,11147,0x109fe9ac0,12,TemporalPlainDatePrototypeToString
code-creation,Builtin,2,11153,0x109fe9b00,12,TemporalPlainDatePrototypeToJSON
code-creation,Builtin,2,11159,0x109fe9b40,12,TemporalPlainDatePrototypeToLocaleString
code-creation,Builtin,2,11164,0x109fe9b80,12,TemporalPlainDatePrototypeValueOf
code-creation,Builtin,2,11170,0x109fe9bc0,12,TemporalPlainTimeConstructor
code-creation,Builtin,2,11175,0x109fe9c00,12,TemporalPlainTimeFrom
code-creation,Builtin,2,11180,0x109fe9c40,12,TemporalPlainTimeCompare
code-creation,Builtin,2,11185,0x109fe9c80,12,TemporalPlainTimePrototypeCalendar
code-creation,Builtin,2,11190,0x109fe9cc0,12,TemporalPlainTimePrototypeHour
code-creation,Builtin,2,11196,0x109fe9d00,12,TemporalPlainTimePrototypeMinute
code-creation,Builtin,2,11201,0x109fe9d40,12,TemporalPlainTimePrototypeSecond
code-creation,Builtin,2,11207,0x109fe9d80,12,TemporalPlainTimePrototypeMillisecond
code-creation,Builtin,2,11212,0x109fe9dc0,12,TemporalPlainTimePrototypeMicrosecond
code-creation,Builtin,2,11218,0x109fe9e00,12,TemporalPlainTimePrototypeNanosecond
code-creation,Builtin,2,11224,0x109fe9e40,12,TemporalPlainTimePrototypeAdd
code-creation,Builtin,2,11229,0x109fe9e80,12,TemporalPlainTimePrototypeSubtract
code-creation,Builtin,2,11234,0x109fe9ec0,12,TemporalPlainTimePrototypeWith
code-creation,Builtin,2,11240,0x109fe9f00,12,TemporalPlainTimePrototypeUntil
code-creation,Builtin,2,11245,0x109fe9f40,12,TemporalPlainTimePrototypeSince
code-creation,Builtin,2,11251,0x109fe9f80,12,TemporalPlainTimePrototypeRound
code-creation,Builtin,2,11256,0x109fe9fc0,12,TemporalPlainTimePrototypeEquals
code-creation,Builtin,2,11261,0x109fea000,12,TemporalPlainTimePrototypeToPlainDateTime
code-creation,Builtin,2,11267,0x109fea040,12,TemporalPlainTimePrototypeToZonedDateTime
code-creation,Builtin,2,11273,0x109fea080,12,TemporalPlainTimePrototypeGetISOFields
code-creation,Builtin,2,11279,0x109fea0c0,12,TemporalPlainTimePrototypeToString
code-creation,Builtin,2,11284,0x109fea100,12,TemporalPlainTimePrototypeToJSON
code-creation,Builtin,2,11290,0x109fea140,12,TemporalPlainTimePrototypeToLocaleString
code-creation,Builtin,2,11296,0x109fea180,12,TemporalPlainTimePrototypeValueOf
code-creation,Builtin,2,11301,0x109fea1c0,12,TemporalPlainDateTimeConstructor
code-creation,Builtin,2,11307,0x109fea200,12,TemporalPlainDateTimeFrom
code-creation,Builtin,2,11312,0x109fea240,12,TemporalPlainDateTimeCompare
code-creation,Builtin,2,11317,0x109fea280,12,TemporalPlainDateTimePrototypeCalendar
code-creation,Builtin,2,11326,0x109fea2c0,12,TemporalPlainDateTimePrototypeYear
code-creation,Builtin,2,11331,0x109fea300,12,TemporalPlainDateTimePrototypeMonth
code-creation,Builtin,2,11337,0x109fea340,12,TemporalPlainDateTimePrototypeMonthCode
code-creation,Builtin,2,11342,0x109fea380,12,TemporalPlainDateTimePrototypeDay
code-creation,Builtin,2,11348,0x109fea3c0,12,TemporalPlainDateTimePrototypeHour
code-creation,Builtin,2,11353,0x109fea400,12,TemporalPlainDateTimePrototypeMinute
code-creation,Builtin,2,11359,0x109fea440,12,TemporalPlainDateTimePrototypeSecond
code-creation,Builtin,2,11372,0x109fea480,12,TemporalPlainDateTimePrototypeMillisecond
code-creation,Builtin,2,11378,0x109fea4c0,12,TemporalPlainDateTimePrototypeMicrosecond
code-creation,Builtin,2,11384,0x109fea500,12,TemporalPlainDateTimePrototypeNanosecond
code-creation,Builtin,2,11389,0x109fea540,12,TemporalPlainDateTimePrototypeDayOfWeek
code-creation,Builtin,2,11395,0x109fea580,12,TemporalPlainDateTimePrototypeDayOfYear
code-creation,Builtin,2,11401,0x109fea5c0,12,TemporalPlainDateTimePrototypeWeekOfYear
code-creation,Builtin,2,11407,0x109fea600,12,TemporalPlainDateTimePrototypeDaysInWeek
code-creation,Builtin,2,11412,0x109fea640,12,TemporalPlainDateTimePrototypeDaysInMonth
code-creation,Builtin,2,11418,0x109fea680,12,TemporalPlainDateTimePrototypeDaysInYear
code-creation,Builtin,2,11424,0x109fea6c0,12,TemporalPlainDateTimePrototypeMonthsInYear
code-creation,Builtin,2,11430,0x109fea700,12,TemporalPlainDateTimePrototypeInLeapYear
code-creation,Builtin,2,11436,0x109fea740,12,TemporalPlainDateTimePrototypeWith
code-creation,Builtin,2,11442,0x109fea780,12,TemporalPlainDateTimePrototypeWithPlainTime
code-creation,Builtin,2,11448,0x109fea7c0,12,TemporalPlainDateTimePrototypeWithPlainDate
code-creation,Builtin,2,11454,0x109fea800,12,TemporalPlainDateTimePrototypeWithCalendar
code-creation,Builtin,2,11460,0x109fea840,12,TemporalPlainDateTimePrototypeAdd
code-creation,Builtin,2,11465,0x109fea880,12,TemporalPlainDateTimePrototypeSubtract
code-creation,Builtin,2,11471,0x109fea8c0,12,TemporalPlainDateTimePrototypeUntil
code-creation,Builtin,2,11476,0x109fea900,12,TemporalPlainDateTimePrototypeSince
code-creation,Builtin,2,11482,0x109fea940,12,TemporalPlainDateTimePrototypeRound
code-creation,Builtin,2,11487,0x109fea980,12,TemporalPlainDateTimePrototypeEquals
code-creation,Builtin,2,11493,0x109fea9c0,12,TemporalPlainDateTimePrototypeToString
code-creation,Builtin,2,11499,0x109feaa00,12,TemporalPlainDateTimePrototypeToJSON
code-creation,Builtin,2,11504,0x109feaa40,12,TemporalPlainDateTimePrototypeToLocaleString
code-creation,Builtin,2,11510,0x109feaa80,12,TemporalPlainDateTimePrototypeValueOf
code-creation,Builtin,2,11516,0x109feaac0,12,TemporalPlainDateTimePrototypeToZonedDateTime
code-creation,Builtin,2,11522,0x109feab00,12,TemporalPlainDateTimePrototypeToPlainDate
code-creation,Builtin,2,11528,0x109feab40,12,TemporalPlainDateTimePrototypeToPlainYearMonth
code-creation,Builtin,2,11534,0x109feab80,12,TemporalPlainDateTimePrototypeToPlainMonthDay
code-creation,Builtin,2,11540,0x109feabc0,12,TemporalPlainDateTimePrototypeToPlainTime
code-creation,Builtin,2,11546,0x109feac00,12,TemporalPlainDateTimePrototypeGetISOFields
code-creation,Builtin,2,11552,0x109feac40,12,TemporalZonedDateTimeConstructor
code-creation,Builtin,2,11557,0x109feac80,12,TemporalZonedDateTimeFrom
code-creation,Builtin,2,11562,0x109feacc0,12,TemporalZonedDateTimeCompare
code-creation,Builtin,2,11567,0x109fead00,12,TemporalZonedDateTimePrototypeCalendar
code-creation,Builtin,2,11573,0x109fead40,12,TemporalZonedDateTimePrototypeTimeZone
code-creation,Builtin,2,11579,0x109fead80,12,TemporalZonedDateTimePrototypeYear
code-creation,Builtin,2,11584,0x109feadc0,12,TemporalZonedDateTimePrototypeMonth
code-creation,Builtin,2,11590,0x109feae00,12,TemporalZonedDateTimePrototypeMonthCode
code-creation,Builtin,2,11595,0x109feae40,12,TemporalZonedDateTimePrototypeDay
code-creation,Builtin,2,11601,0x109feae80,12,TemporalZonedDateTimePrototypeHour
code-creation,Builtin,2,11606,0x109feaec0,12,TemporalZonedDateTimePrototypeMinute
code-creation,Builtin,2,11612,0x109feaf00,12,TemporalZonedDateTimePrototypeSecond
code-creation,Builtin,2,11618,0x109feaf40,12,TemporalZonedDateTimePrototypeMillisecond
code-creation,Builtin,2,11624,0x109feaf80,12,TemporalZonedDateTimePrototypeMicrosecond
code-creation,Builtin,2,11629,0x109feafc0,12,TemporalZonedDateTimePrototypeNanosecond
code-creation,Builtin,2,11635,0x109feb000,12,TemporalZonedDateTimePrototypeEpochSeconds
code-creation,Builtin,2,11641,0x109feb040,12,TemporalZonedDateTimePrototypeEpochMilliseconds
code-creation,Builtin,2,11654,0x109feb080,12,TemporalZonedDateTimePrototypeEpochMicroseconds
code-creation,Builtin,2,11660,0x109feb0c0,12,TemporalZonedDateTimePrototypeEpochNanoseconds
code-creation,Builtin,2,11666,0x109feb100,12,TemporalZonedDateTimePrototypeDayOfWeek
code-creation,Builtin,2,11672,0x109feb140,12,TemporalZonedDateTimePrototypeDayOfYear
code-creation,Builtin,2,11678,0x109feb180,12,TemporalZonedDateTimePrototypeWeekOfYear
code-creation,Builtin,2,11684,0x109feb1c0,12,TemporalZonedDateTimePrototypeHoursInDay
code-creation,Builtin,2,11689,0x109feb200,12,TemporalZonedDateTimePrototypeDaysInWeek
code-creation,Builtin,2,11695,0x109feb240,12,TemporalZonedDateTimePrototypeDaysInMonth
code-creation,Builtin,2,11701,0x109feb280,12,TemporalZonedDateTimePrototypeDaysInYear
code-creation,Builtin,2,11707,0x109feb2c0,12,TemporalZonedDateTimePrototypeMonthsInYear
code-creation,Builtin,2,11713,0x109feb300,12,TemporalZonedDateTimePrototypeInLeapYear
code-creation,Builtin,2,11719,0x109feb340,12,TemporalZonedDateTimePrototypeOffsetNanoseconds
code-creation,Builtin,2,11725,0x109feb380,12,TemporalZonedDateTimePrototypeOffset
code-creation,Builtin,2,11731,0x109feb3c0,12,TemporalZonedDateTimePrototypeWith
code-creation,Builtin,2,11736,0x109feb400,12,TemporalZonedDateTimePrototypeWithPlainTime
code-creation,Builtin,2,11742,0x109feb440,12,TemporalZonedDateTimePrototypeWithPlainDate
code-creation,Builtin,2,11748,0x109feb480,12,TemporalZonedDateTimePrototypeWithTimeZone
code-creation,Builtin,2,11754,0x109feb4c0,12,TemporalZonedDateTimePrototypeWithCalendar
code-creation,Builtin,2,11760,0x109feb500,12,TemporalZonedDateTimePrototypeAdd
code-creation,Builtin,2,11766,0x109feb540,12,TemporalZonedDateTimePrototypeSubtract
code-creation,Builtin,2,11771,0x109feb580,12,TemporalZonedDateTimePrototypeUntil
code-creation,Builtin,2,11777,0x109feb5c0,12,TemporalZonedDateTimePrototypeSince
code-creation,Builtin,2,11783,0x109feb600,12,TemporalZonedDateTimePrototypeRound
code-creation,Builtin,2,11788,0x109feb640,12,TemporalZonedDateTimePrototypeEquals
code-creation,Builtin,2,11794,0x109feb680,12,TemporalZonedDateTimePrototypeToString
code-creation,Builtin,2,11800,0x109feb6c0,12,TemporalZonedDateTimePrototypeToJSON
code-creation,Builtin,2,11805,0x109feb700,12,TemporalZonedDateTimePrototypeToLocaleString
code-creation,Builtin,2,11811,0x109feb740,12,TemporalZonedDateTimePrototypeValueOf
code-creation,Builtin,2,11817,0x109feb780,12,TemporalZonedDateTimePrototypeStartOfDay
code-creation,Builtin,2,11823,0x109feb7c0,12,TemporalZonedDateTimePrototypeToInstant
code-creation,Builtin,2,11829,0x109feb800,12,TemporalZonedDateTimePrototypeToPlainDate
code-creation,Builtin,2,11834,0x109feb840,12,TemporalZonedDateTimePrototypeToPlainTime
code-creation,Builtin,2,11840,0x109feb880,12,TemporalZonedDateTimePrototypeToPlainDateTime
code-creation,Builtin,2,11846,0x109feb8c0,12,TemporalZonedDateTimePrototypeToPlainYearMonth
code-creation,Builtin,2,11852,0x109feb900,12,TemporalZonedDateTimePrototypeToPlainMonthDay
code-creation,Builtin,2,11858,0x109feb940,12,TemporalZonedDateTimePrototypeGetISOFields
code-creation,Builtin,2,11864,0x109feb980,12,TemporalDurationConstructor
code-creation,Builtin,2,11870,0x109feb9c0,12,TemporalDurationFrom
code-creation,Builtin,2,11874,0x109feba00,12,TemporalDurationCompare
code-creation,Builtin,2,11880,0x109feba40,12,TemporalDurationPrototypeYears
code-creation,Builtin,2,11885,0x109feba80,12,TemporalDurationPrototypeMonths
code-creation,Builtin,2,11890,0x109febac0,12,TemporalDurationPrototypeWeeks
code-creation,Builtin,2,11896,0x109febb00,12,TemporalDurationPrototypeDays
code-creation,Builtin,2,11901,0x109febb40,12,TemporalDurationPrototypeHours
code-creation,Builtin,2,11906,0x109febb80,12,TemporalDurationPrototypeMinutes
code-creation,Builtin,2,11912,0x109febbc0,12,TemporalDurationPrototypeSeconds
code-creation,Builtin,2,11917,0x109febc00,12,TemporalDurationPrototypeMilliseconds
code-creation,Builtin,2,11923,0x109febc40,12,TemporalDurationPrototypeMicroseconds
code-creation,Builtin,2,11929,0x109febc80,12,TemporalDurationPrototypeNanoseconds
code-creation,Builtin,2,11941,0x109febcc0,12,TemporalDurationPrototypeSign
code-creation,Builtin,2,11946,0x109febd00,12,TemporalDurationPrototypeBlank
code-creation,Builtin,2,11953,0x109febd40,12,TemporalDurationPrototypeWith
code-creation,Builtin,2,11959,0x109febd80,12,TemporalDurationPrototypeNegated
code-creation,Builtin,2,11964,0x109febdc0,12,TemporalDurationPrototypeAbs
code-creation,Builtin,2,11969,0x109febe00,12,TemporalDurationPrototypeAdd
code-creation,Builtin,2,11974,0x109febe40,12,TemporalDurationPrototypeSubtract
code-creation,Builtin,2,11980,0x109febe80,12,TemporalDurationPrototypeRound
code-creation,Builtin,2,11988,0x109febec0,12,TemporalDurationPrototypeTotal
code-creation,Builtin,2,11993,0x109febf00,12,TemporalDurationPrototypeToString
code-creation,Builtin,2,11999,0x109febf40,12,TemporalDurationPrototypeToJSON
code-creation,Builtin,2,12004,0x109febf80,12,TemporalDurationPrototypeToLocaleString
code-creation,Builtin,2,12010,0x109febfc0,12,TemporalDurationPrototypeValueOf
code-creation,Builtin,2,12025,0x109fec000,12,TemporalInstantConstructor
code-creation,Builtin,2,12033,0x109fec040,12,TemporalInstantFrom
code-creation,Builtin,2,12038,0x109fec080,12,TemporalInstantFromEpochSeconds
code-creation,Builtin,2,12044,0x109fec0c0,12,TemporalInstantFromEpochMilliseconds
code-creation,Builtin,2,12050,0x109fec100,12,TemporalInstantFromEpochMicroseconds
code-creation,Builtin,2,12057,0x109fec140,12,TemporalInstantFromEpochNanoseconds
code-creation,Builtin,2,12064,0x109fec180,12,TemporalInstantCompare
code-creation,Builtin,2,12071,0x109fec1c0,12,TemporalInstantPrototypeEpochSeconds
code-creation,Builtin,2,12079,0x109fec200,12,TemporalInstantPrototypeEpochMilliseconds
code-creation,Builtin,2,12087,0x109fec240,12,TemporalInstantPrototypeEpochMicroseconds
code-creation,Builtin,2,12094,0x109fec280,12,TemporalInstantPrototypeEpochNanoseconds
code-creation,Builtin,2,12102,0x109fec2c0,12,TemporalInstantPrototypeAdd
code-creation,Builtin,2,12109,0x109fec300,12,TemporalInstantPrototypeSubtract
code-creation,Builtin,2,12116,0x109fec340,12,TemporalInstantPrototypeUntil
code-creation,Builtin,2,12124,0x109fec380,12,TemporalInstantPrototypeSince
code-creation,Builtin,2,12131,0x109fec3c0,12,TemporalInstantPrototypeRound
code-creation,Builtin,2,12138,0x109fec400,12,TemporalInstantPrototypeEquals
code-creation,Builtin,2,12145,0x109fec440,12,TemporalInstantPrototypeToString
code-creation,Builtin,2,12153,0x109fec480,12,TemporalInstantPrototypeToJSON
code-creation,Builtin,2,12160,0x109fec4c0,12,TemporalInstantPrototypeToLocaleString
code-creation,Builtin,2,12167,0x109fec500,12,TemporalInstantPrototypeValueOf
code-creation,Builtin,2,12175,0x109fec540,12,TemporalInstantPrototypeToZonedDateTime
code-creation,Builtin,2,12182,0x109fec580,12,TemporalInstantPrototypeToZonedDateTimeISO
code-creation,Builtin,2,12190,0x109fec5c0,12,TemporalPlainYearMonthConstructor
code-creation,Builtin,2,12197,0x109fec600,12,TemporalPlainYearMonthFrom
code-creation,Builtin,2,12204,0x109fec640,12,TemporalPlainYearMonthCompare
code-creation,Builtin,2,12211,0x109fec680,12,TemporalPlainYearMonthPrototypeCalendar
code-creation,Builtin,2,12219,0x109fec6c0,12,TemporalPlainYearMonthPrototypeYear
code-creation,Builtin,2,12227,0x109fec700,12,TemporalPlainYearMonthPrototypeMonth
code-creation,Builtin,2,12233,0x109fec740,12,TemporalPlainYearMonthPrototypeMonthCode
code-creation,Builtin,2,12238,0x109fec780,12,TemporalPlainYearMonthPrototypeDaysInYear
code-creation,Builtin,2,12244,0x109fec7c0,12,TemporalPlainYearMonthPrototypeDaysInMonth
code-creation,Builtin,2,12250,0x109fec800,12,TemporalPlainYearMonthPrototypeMonthsInYear
code-creation,Builtin,2,12256,0x109fec840,12,TemporalPlainYearMonthPrototypeInLeapYear
code-creation,Builtin,2,12264,0x109fec880,12,TemporalPlainYearMonthPrototypeWith
code-creation,Builtin,2,12271,0x109fec8c0,12,TemporalPlainYearMonthPrototypeAdd
code-creation,Builtin,2,12277,0x109fec900,12,TemporalPlainYearMonthPrototypeSubtract
code-creation,Builtin,2,12284,0x109fec940,12,TemporalPlainYearMonthPrototypeUntil
code-creation,Builtin,2,12292,0x109fec980,12,TemporalPlainYearMonthPrototypeSince
code-creation,Builtin,2,12306,0x109fec9c0,12,TemporalPlainYearMonthPrototypeEquals
code-creation,Builtin,2,12312,0x109feca00,12,TemporalPlainYearMonthPrototypeToString
code-creation,Builtin,2,12318,0x109feca40,12,TemporalPlainYearMonthPrototypeToJSON
code-creation,Builtin,2,12324,0x109feca80,12,TemporalPlainYearMonthPrototypeToLocaleString
code-creation,Builtin,2,12332,0x109fecac0,12,TemporalPlainYearMonthPrototypeValueOf
code-creation,Builtin,2,12339,0x109fecb00,12,TemporalPlainYearMonthPrototypeToPlainDate
code-creation,Builtin,2,12347,0x109fecb40,12,TemporalPlainYearMonthPrototypeGetISOFields
code-creation,Builtin,2,12355,0x109fecb80,12,TemporalPlainMonthDayConstructor
code-creation,Builtin,2,12362,0x109fecbc0,12,TemporalPlainMonthDayFrom
code-creation,Builtin,2,12369,0x109fecc00,12,TemporalPlainMonthDayPrototypeCalendar
code-creation,Builtin,2,12377,0x109fecc40,12,TemporalPlainMonthDayPrototypeMonthCode
code-creation,Builtin,2,12384,0x109fecc80,12,TemporalPlainMonthDayPrototypeDay
code-creation,Builtin,2,12392,0x109feccc0,12,TemporalPlainMonthDayPrototypeWith
code-creation,Builtin,2,12399,0x109fecd00,12,TemporalPlainMonthDayPrototypeEquals
code-creation,Builtin,2,12406,0x109fecd40,12,TemporalPlainMonthDayPrototypeToString
code-creation,Builtin,2,12414,0x109fecd80,12,TemporalPlainMonthDayPrototypeToJSON
code-creation,Builtin,2,12422,0x109fecdc0,12,TemporalPlainMonthDayPrototypeToLocaleString
code-creation,Builtin,2,12429,0x109fece00,12,TemporalPlainMonthDayPrototypeValueOf
code-creation,Builtin,2,12437,0x109fece40,12,TemporalPlainMonthDayPrototypeToPlainDate
code-creation,Builtin,2,12445,0x109fece80,12,TemporalPlainMonthDayPrototypeGetISOFields
code-creation,Builtin,2,12453,0x109fecec0,12,TemporalTimeZoneConstructor
code-creation,Builtin,2,12460,0x109fecf00,12,TemporalTimeZoneFrom
code-creation,Builtin,2,12466,0x109fecf40,12,TemporalTimeZonePrototypeId
code-creation,Builtin,2,12473,0x109fecf80,12,TemporalTimeZonePrototypeGetOffsetNanosecondsFor
code-creation,Builtin,2,12481,0x109fecfc0,12,TemporalTimeZonePrototypeGetOffsetStringFor
code-creation,Builtin,2,12489,0x109fed000,12,TemporalTimeZonePrototypeGetPlainDateTimeFor
code-creation,Builtin,2,12497,0x109fed040,12,TemporalTimeZonePrototypeGetInstantFor
code-creation,Builtin,2,12504,0x109fed080,12,TemporalTimeZonePrototypeGetPossibleInstantsFor
code-creation,Builtin,2,12513,0x109fed0c0,12,TemporalTimeZonePrototypeGetNextTransition
code-creation,Builtin,2,12520,0x109fed100,12,TemporalTimeZonePrototypeGetPreviousTransition
code-creation,Builtin,2,12528,0x109fed140,12,TemporalTimeZonePrototypeToString
code-creation,Builtin,2,12536,0x109fed180,12,TemporalTimeZonePrototypeToJSON
code-creation,Builtin,2,12543,0x109fed1c0,12,TemporalCalendarConstructor
code-creation,Builtin,2,12550,0x109fed200,12,TemporalCalendarFrom
code-creation,Builtin,2,12557,0x109fed240,12,TemporalCalendarPrototypeId
code-creation,Builtin,2,12564,0x109fed280,12,TemporalCalendarPrototypeDateFromFields
code-creation,Builtin,2,12572,0x109fed2c0,12,TemporalCalendarPrototypeYearMonthFromFields
code-creation,Builtin,2,12579,0x109fed300,12,TemporalCalendarPrototypeMonthDayFromFields
code-creation,Builtin,2,12587,0x109fed340,12,TemporalCalendarPrototypeDateAdd
code-creation,Builtin,2,12595,0x109fed380,12,TemporalCalendarPrototypeDateUntil
code-creation,Builtin,2,12602,0x109fed3c0,12,TemporalCalendarPrototypeYear
code-creation,Builtin,2,12609,0x109fed400,12,TemporalCalendarPrototypeMonth
code-creation,Builtin,2,12616,0x109fed440,12,TemporalCalendarPrototypeMonthCode
code-creation,Builtin,2,12624,0x109fed480,12,TemporalCalendarPrototypeDay
code-creation,Builtin,2,12631,0x109fed4c0,12,TemporalCalendarPrototypeDayOfWeek
code-creation,Builtin,2,12638,0x109fed500,12,TemporalCalendarPrototypeDayOfYear
code-creation,Builtin,2,12646,0x109fed540,12,TemporalCalendarPrototypeWeekOfYear
code-creation,Builtin,2,12653,0x109fed580,12,TemporalCalendarPrototypeDaysInWeek
code-creation,Builtin,2,12660,0x109fed5c0,12,TemporalCalendarPrototypeDaysInMonth
code-creation,Builtin,2,12668,0x109fed600,12,TemporalCalendarPrototypeDaysInYear
code-creation,Builtin,2,12682,0x109fed640,12,TemporalCalendarPrototypeMonthsInYear
code-creation,Builtin,2,12690,0x109fed680,12,TemporalCalendarPrototypeInLeapYear
code-creation,Builtin,2,12698,0x109fed6c0,3956,TemporalCalendarPrototypeFields
code-creation,Builtin,2,12705,0x109fee640,12,TemporalCalendarPrototypeMergeFields
code-creation,Builtin,2,12713,0x109fee680,12,TemporalCalendarPrototypeToString
code-creation,Builtin,2,12720,0x109fee6c0,12,TemporalCalendarPrototypeToJSON
code-creation,Builtin,2,12727,0x109fee700,12,DatePrototypeToTemporalInstant
code-creation,Builtin,2,12734,0x109fee740,1932,StringFixedArrayFromIterable
code-creation,Builtin,2,12741,0x109feef00,1932,TemporalInstantFixedArrayFromIterable
code-creation,Builtin,2,12749,0x109fef6c0,260,AggregateErrorConstructor
code-creation,Builtin,2,12756,0x109fef800,844,ArrayPrototypeAt
code-creation,Builtin,2,12762,0x109fefb80,552,ArrayPrototypeConcat
code-creation,Builtin,2,12769,0x109fefdc0,5116,ArrayPrototypeCopyWithin
code-creation,Builtin,2,12776,0x109ff11c0,212,ArrayEveryLoopEagerDeoptContinuation
code-creation,Builtin,2,12783,0x109ff12c0,564,ArrayEveryLoopLazyDeoptContinuation
code-creation,Builtin,2,12791,0x109ff1500,4468,ArrayEveryLoopContinuation
code-creation,Builtin,2,12800,0x109ff2680,1492,ArrayEvery
code-creation,Builtin,2,12806,0x109ff2c80,272,ArrayFilterLoopEagerDeoptContinuation
code-creation,Builtin,2,12814,0x109ff2dc0,860,ArrayFilterLoopLazyDeoptContinuation
code-creation,Builtin,2,12821,0x109ff3140,4712,ArrayFilterLoopContinuation
code-creation,Builtin,2,12828,0x109ff43c0,4580,ArrayFilter
code-creation,Builtin,2,12835,0x109ff55c0,200,ArrayFindLoopEagerDeoptContinuation
code-creation,Builtin,2,12842,0x109ff56c0,32,ArrayFindLoopLazyDeoptContinuation
code-creation,Builtin,2,12850,0x109ff5700,308,ArrayFindLoopAfterCallbackLazyDeoptContinuation
code-creation,Builtin,2,12858,0x109ff5840,532,ArrayFindLoopContinuation
code-creation,Builtin,2,12865,0x109ff5a80,1472,ArrayPrototypeFind
code-creation,Builtin,2,12871,0x109ff6080,200,ArrayFindIndexLoopEagerDeoptContinuation
code-creation,Builtin,2,12879,0x109ff6180,32,ArrayFindIndexLoopLazyDeoptContinuation
code-creation,Builtin,2,12887,0x109ff61c0,308,ArrayFindIndexLoopAfterCallbackLazyDeoptContinuation
code-creation,Builtin,2,12895,0x109ff6300,528,ArrayFindIndexLoopContinuation
code-creation,Builtin,2,12902,0x109ff6540,1464,ArrayPrototypeFindIndex
code-creation,Builtin,2,12909,0x109ff6b00,464,ArrayFindLastLoopContinuation
code-creation,Builtin,2,12916,0x109ff6d00,1660,ArrayPrototypeFindLast
code-creation,Builtin,2,12923,0x109ff7380,460,ArrayFindLastIndexLoopContinuation
code-creation,Builtin,2,12930,0x109ff7580,1648,ArrayPrototypeFindLastIndex
code-creation,Builtin,2,12937,0x109ff7c00,212,ArrayForEachLoopEagerDeoptContinuation
code-creation,Builtin,2,12945,0x109ff7d00,212,ArrayForEachLoopLazyDeoptContinuation
code-creation,Builtin,2,12953,0x109ff7e00,4336,ArrayForEachLoopContinuation
code-creation,Builtin,2,12960,0x109ff8f00,1336,ArrayForEach
code-creation,Builtin,2,12966,0x109ff9440,4752,ArrayFrom
code-creation,Builtin,2,12973,0x109ffa700,168,ArrayIsArray
code-creation,Builtin,2,12979,0x109ffa7c0,396,LoadJoinElement_DictionaryElements_0
code-creation,Builtin,2,12986,0x109ffa980,40,LoadJoinElement_FastSmiOrObjectElements_0
code-creation,Builtin,2,12994,0x109ffa9c0,132,LoadJoinElement_FastDoubleElements_0
code-creation,Builtin,2,13002,0x109ffaa80,196,ConvertToLocaleString
code-creation,Builtin,2,13008,0x109ffab80,792,JoinStackPush
code-creation,Builtin,2,13015,0x109ffaec0,324,JoinStackPop
code-creation,Builtin,2,13021,0x109ffb040,9324,ArrayPrototypeJoin
code-creation,Builtin,2,13028,0x109ffd4c0,5788,ArrayPrototypeToLocaleString
code-creation,Builtin,2,13035,0x109ffeb80,236,ArrayPrototypeToString
code-creation,Builtin,2,13042,0x109ffec80,9188,TypedArrayPrototypeJoin
code-creation,Builtin,2,13049,0x10a001080,5632,TypedArrayPrototypeToLocaleString
code-creation,Builtin,2,13056,0x10a0026c0,4356,ArrayPrototypeLastIndexOf
code-creation,Builtin,2,13063,0x10a003800,236,ArrayMapPreLoopLazyDeoptContinuation
code-creation,Builtin,2,13077,0x10a003900,244,ArrayMapLoopEagerDeoptContinuation
code-creation,Builtin,2,13085,0x10a003a00,472,ArrayMapLoopLazyDeoptContinuation
code-creation,Builtin,2,13093,0x10a003c00,4360,ArrayMapLoopContinuation
code-creation,Builtin,2,13099,0x10a004d40,3804,ArrayMap
code-creation,Builtin,2,13106,0x10a005c40,1868,ArrayOf
code-creation,Builtin,2,13112,0x10a0063c0,408,ArrayReduceRightPreLoopEagerDeoptContinuation
code-creation,Builtin,2,13120,0x10a006580,200,ArrayReduceRightLoopEagerDeoptContinuation
code-creation,Builtin,2,13128,0x10a006680,200,ArrayReduceRightLoopLazyDeoptContinuation
code-creation,Builtin,2,13135,0x10a006780,4392,ArrayReduceRightLoopContinuation
code-creation,Builtin,2,13143,0x10a0078c0,1896,ArrayReduceRight
code-creation,Builtin,2,13149,0x10a008040,180,ArrayReducePreLoopEagerDeoptContinuation
code-creation,Builtin,2,13157,0x10a008100,200,ArrayReduceLoopEagerDeoptContinuation
code-creation,Builtin,2,13164,0x10a008200,200,ArrayReduceLoopLazyDeoptContinuation
code-creation,Builtin,2,13172,0x10a008300,4420,ArrayReduceLoopContinuation
code-creation,Builtin,2,13179,0x10a009480,1544,ArrayReduce
code-creation,Builtin,2,13185,0x10a009ac0,3568,ArrayPrototypeReverse
code-creation,Builtin,2,13192,0x10a00a8c0,3800,ArrayPrototypeShift
code-creation,Builtin,2,13199,0x10a00b7c0,6508,ArrayPrototypeSlice
code-creation,Builtin,2,13205,0x10a00d140,212,ArraySomeLoopEagerDeoptContinuation
code-creation,Builtin,2,13213,0x10a00d240,532,ArraySomeLoopLazyDeoptContinuation
code-creation,Builtin,2,13220,0x10a00d480,4456,ArraySomeLoopContinuation
code-creation,Builtin,2,13227,0x10a00e600,1476,ArraySome
code-creation,Builtin,2,13233,0x10a00ec00,15088,ArrayPrototypeSplice
code-creation,Builtin,2,13240,0x10a012700,2140,GenericArrayToReversed
code-creation,Builtin,2,13247,0x10a012f80,2848,ArrayPrototypeToReversed
code-creation,Builtin,2,13254,0x10a013ac0,6152,ArrayTimSortIntoCopy
code-creation,Builtin,2,13261,0x10a015300,2132,ArrayPrototypeToSorted
code-creation,Builtin,2,13267,0x10a015b80,9476,ArrayPrototypeToSpliced
code-creation,Builtin,2,13274,0x10a0180c0,3160,ArrayPrototypeUnshift
code-creation,Builtin,2,13281,0x10a018d40,1436,GenericArrayWith
code-creation,Builtin,2,13288,0x10a019300,1140,ArrayPrototypeWith
code-creation,Builtin,2,13293,0x10a019780,324,ArrayBufferPrototypeGetByteLength
code-creation,Builtin,2,13300,0x10a019900,484,ArrayBufferPrototypeGetMaxByteLength
code-creation,Builtin,2,13314,0x10a019b00,216,ArrayBufferPrototypeGetResizable
code-creation,Builtin,2,13320,0x10a019c00,216,ArrayBufferPrototypeGetDetached
code-creation,Builtin,2,13327,0x10a019d00,324,SharedArrayBufferPrototypeGetMaxByteLength
code-creation,Builtin,2,13334,0x10a019e80,216,SharedArrayBufferPrototypeGetGrowable
code-creation,Builtin,2,13340,0x10a019f80,100,ArrayBufferIsView
code-creation,Builtin,2,13345,0x10a01a000,440,ToInteger
code-creation,Builtin,2,13349,0x10a01a1c0,3340,FastCreateDataProperty
code-creation,Builtin,2,13354,0x10a01af00,1104,BooleanConstructor
code-creation,Builtin,2,13359,0x10a01b380,216,BooleanPrototypeToString
code-creation,Builtin,2,13364,0x10a01b480,212,BooleanPrototypeValueOf
code-creation,Builtin,2,13371,0x10a01b580,1068,BigIntAddNoThrow
code-creation,Builtin,2,13377,0x10a01b9c0,1144,BigIntAdd
code-creation,Builtin,2,13384,0x10a01be40,1068,BigIntSubtractNoThrow
code-creation,Builtin,2,13389,0x10a01c280,1144,BigIntSubtract
code-creation,Builtin,2,13395,0x10a01c700,328,BigIntMultiplyNoThrow
code-creation,Builtin,2,13403,0x10a01c880,444,BigIntMultiply
code-creation,Builtin,2,13409,0x10a01ca40,544,BigIntDivideNoThrow
code-creation,Builtin,2,13414,0x10a01cc80,652,BigIntDivide
code-creation,Builtin,2,13418,0x10a01cf40,464,BigIntModulusNoThrow
code-creation,Builtin,2,13425,0x10a01d140,568,BigIntModulus
code-creation,Builtin,2,13431,0x10a01d380,964,BigIntBitwiseAndNoThrow
code-creation,Builtin,2,13436,0x10a01d780,1108,BigIntBitwiseAnd
code-creation,Builtin,2,13442,0x10a01dc00,936,BigIntBitwiseOrNoThrow
code-creation,Builtin,2,13448,0x10a01dfc0,1052,BigIntBitwiseOr
code-creation,Builtin,2,13460,0x10a01e400,976,BigIntBitwiseXorNoThrow
code-creation,Builtin,2,13468,0x10a01e800,1124,BigIntBitwiseXor
code-creation,Builtin,2,13474,0x10a01ec80,1296,BigIntShiftLeftNoThrow
code-creation,Builtin,2,13479,0x10a01f1c0,1420,BigIntShiftLeft
code-creation,Builtin,2,13485,0x10a01f780,1296,BigIntShiftRightNoThrow
code-creation,Builtin,2,13491,0x10a01fcc0,1420,BigIntShiftRight
code-creation,Builtin,2,13497,0x10a020280,168,BigIntEqual
code-creation,Builtin,2,13501,0x10a020340,208,BigIntLessThan
code-creation,Builtin,2,13506,0x10a020440,208,BigIntGreaterThan
code-creation,Builtin,2,13510,0x10a020540,208,BigIntLessThanOrEqual
code-creation,Builtin,2,13515,0x10a020640,208,BigIntGreaterThanOrEqual
code-creation,Builtin,2,13520,0x10a020740,328,BigIntUnaryMinus
code-creation,Builtin,2,13525,0x10a0208c0,2264,ToString
code-creation,Builtin,2,13529,0x10a0211c0,212,StringPrototypeToString
code-creation,Builtin,2,13536,0x10a0212c0,212,StringPrototypeValueOf
code-creation,Builtin,2,13543,0x10a0213c0,2500,StringToList
code-creation,Builtin,2,13547,0x10a021dc0,856,StringPrototypeCharAt
code-creation,Builtin,2,13553,0x10a022140,752,StringPrototypeCharCodeAt
code-creation,Builtin,2,13560,0x10a022440,1320,StringPrototypeCodePointAt
code-creation,Builtin,2,13567,0x10a022980,460,StringPrototypeConcat
code-creation,Builtin,2,13573,0x10a022b80,1088,StringConstructor
code-creation,Builtin,2,13578,0x10a023000,2292,StringAddConvertLeft
code-creation,Builtin,2,13584,0x10a023900,2356,StringAddConvertRight
code-creation,Builtin,2,13588,0x10a024240,628,StringCharAt
code-creation,Builtin,2,13594,0x10a0244c0,16,FastNewClosureBaseline
code-creation,Builtin,2,13600,0x10a024500,308,FastNewFunctionContextEval
code-creation,Builtin,2,13606,0x10a024640,308,FastNewFunctionContextFunction
code-creation,Builtin,2,13611,0x10a024780,240,CreateRegExpLiteral
code-creation,Builtin,2,13616,0x10a024880,1328,CreateShallowArrayLiteral
code-creation,Builtin,2,13623,0x10a024dc0,492,CreateEmptyArrayLiteral
code-creation,Builtin,2,13629,0x10a024fc0,2180,CreateShallowObjectLiteral
code-creation,Builtin,2,13635,0x10a025880,460,ObjectConstructor
code-creation,Builtin,2,13641,0x10a025a80,228,CreateEmptyLiteralObject
code-creation,Builtin,2,13647,0x10a025b80,544,NumberConstructor
code-creation,Builtin,2,13651,0x10a025dc0,60,GenericLazyDeoptContinuation
code-creation,Builtin,2,13657,0x10a025e00,60,StringToNumber
code-creation,Builtin,2,13661,0x10a025e40,188,NonNumberToNumber
code-creation,Builtin,2,13666,0x10a025f00,240,NonNumberToNumeric
code-creation,Builtin,2,13671,0x10a026000,36,ToNumeric
code-creation,Builtin,2,13675,0x10a026040,1268,NumberToString
code-creation,Builtin,2,13679,0x10a026540,108,ToBoolean
code-creation,Builtin,2,13684,0x10a0265c0,104,ToBooleanForBaselineJump
code-creation,Builtin,2,13689,0x10a026640,640,ToLength
code-creation,Builtin,2,13693,0x10a026900,1356,ToName
code-creation,Builtin,2,13719,0x10a026e80,1012,ToObject
code-creation,Builtin,2,13723,0x10a027280,452,NonPrimitiveToPrimitive_Default
code-creation,Builtin,2,13730,0x10a027480,452,NonPrimitiveToPrimitive_Number
code-creation,Builtin,2,13736,0x10a027680,800,NonPrimitiveToPrimitive_String
code-creation,Builtin,2,13757,0x10a0279c0,20,OrdinaryToPrimitive_Number
code-creation,Builtin,2,13763,0x10a027a00,376,OrdinaryToPrimitive_Number_Inline
code-creation,Builtin,2,13768,0x10a027b80,376,OrdinaryToPrimitive_String
code-creation,Builtin,2,13773,0x10a027d00,224,FastConsoleAssert
code-creation,Builtin,2,13778,0x10a027e00,184,DataViewPrototypeGetBuffer
code-creation,Builtin,2,13783,0x10a027ec0,764,DataViewPrototypeGetByteLength
code-creation,Builtin,2,13788,0x10a0281c0,440,DataViewPrototypeGetByteOffset
code-creation,Builtin,2,13794,0x10a028380,848,DataViewPrototypeGetUint8
code-creation,Builtin,2,13799,0x10a028700,848,DataViewPrototypeGetInt8
code-creation,Builtin,2,13805,0x10a028a80,924,DataViewPrototypeGetUint16
code-creation,Builtin,2,13810,0x10a028e40,920,DataViewPrototypeGetInt16
code-creation,Builtin,2,13817,0x10a029200,1076,DataViewPrototypeGetUint32
code-creation,Builtin,2,13822,0x10a029640,956,DataViewPrototypeGetInt32
code-creation,Builtin,2,13835,0x10a029a00,1112,DataViewPrototypeGetFloat32
code-creation,Builtin,2,13843,0x10a029e80,1176,DataViewPrototypeGetFloat64
code-creation,Builtin,2,13848,0x10a02a340,1232,DataViewPrototypeGetBigUint64
code-creation,Builtin,2,13855,0x10a02a840,1256,DataViewPrototypeGetBigInt64
code-creation,Builtin,2,13860,0x10a02ad40,1264,DataViewPrototypeSetUint8
code-creation,Builtin,2,13865,0x10a02b240,1264,DataViewPrototypeSetInt8
code-creation,Builtin,2,13870,0x10a02b740,1348,DataViewPrototypeSetUint16
code-creation,Builtin,2,13876,0x10a02bcc0,1348,DataViewPrototypeSetInt16
code-creation,Builtin,2,13881,0x10a02c240,1388,DataViewPrototypeSetUint32
code-creation,Builtin,2,13887,0x10a02c7c0,1388,DataViewPrototypeSetInt32
code-creation,Builtin,2,13894,0x10a02cd40,1356,DataViewPrototypeSetFloat32
code-creation,Builtin,2,13903,0x10a02d2c0,1412,DataViewPrototypeSetFloat64
code-creation,Builtin,2,13909,0x10a02d880,1264,DataViewPrototypeSetBigUint64
code-creation,Builtin,2,13915,0x10a02dd80,1264,DataViewPrototypeSetBigInt64
code-creation,Builtin,2,13921,0x10a02e280,1004,FinalizationRegistryConstructor
code-creation,Builtin,2,13926,0x10a02e680,1220,FinalizationRegistryRegister
code-creation,Builtin,2,13932,0x10a02eb80,696,FinalizationRegistryPrototypeCleanupSome
code-creation,Builtin,2,13937,0x10a02ee40,364,FunctionPrototypeHasInstance
code-creation,Builtin,2,13942,0x10a02efc0,968,FastFunctionPrototypeBind
code-creation,Builtin,2,13948,0x10a02f3c0,152,IncBlockCounter
code-creation,Builtin,2,13952,0x10a02f480,240,GetTemplateObject
code-creation,Builtin,2,13957,0x10a02f580,84,ForInNext
code-creation,Builtin,2,13963,0x10a02f600,156,GetImportMetaObjectBaseline
code-creation,Builtin,2,13970,0x10a02f6c0,112,GetIteratorWithFeedback
code-creation,Builtin,2,13977,0x10a02f740,100,GetIteratorBaseline
code-creation,Builtin,2,13984,0x10a02f7c0,372,CreateAsyncFromSyncIteratorBaseline
code-creation,Builtin,2,13991,0x10a02f940,1068,CallIteratorWithFeedback
code-creation,Builtin,2,13998,0x10a02fd80,964,IteratorConstructor
code-creation,Builtin,2,14005,0x10a030180,892,IteratorFrom
code-creation,Builtin,2,14011,0x10a030500,160,WrapForValidIteratorPrototypeNext
code-creation,Builtin,2,14019,0x10a0305c0,408,WrapForValidIteratorPrototypeReturn
code-creation,Builtin,2,14026,0x10a030780,424,IteratorHelperPrototypeNext
code-creation,Builtin,2,14033,0x10a030940,1328,IteratorHelperPrototypeReturn
code-creation,Builtin,2,14040,0x10a030e80,372,IteratorPrototypeMap
code-creation,Builtin,2,14047,0x10a031000,1436,IteratorMapHelperNext
code-creation,Builtin,2,14054,0x10a0315c0,372,IteratorPrototypeFilter
code-creation,Builtin,2,14061,0x10a031740,1636,IteratorFilterHelperNext
code-creation,Builtin,2,14068,0x10a031dc0,516,IteratorPrototypeTake
code-creation,Builtin,2,14074,0x10a032000,1688,IteratorTakeHelperNext
code-creation,Builtin,2,14081,0x10a0326c0,516,IteratorPrototypeDrop
code-creation,Builtin,2,14088,0x10a032900,1832,IteratorDropHelperNext
code-creation,Builtin,2,14095,0x10a033040,404,IteratorPrototypeFlatMap
code-creation,Builtin,2,14102,0x10a033200,2772,IteratorFlatMapHelperNext
code-creation,Builtin,2,14109,0x10a033d00,1636,IteratorPrototypeReduce
code-creation,Builtin,2,14116,0x10a034380,1652,IteratorPrototypeToArray
code-creation,Builtin,2,14123,0x10a034a00,1064,IteratorPrototypeForEach
code-creation,Builtin,2,14130,0x10a034e40,1336,IteratorPrototypeSome
code-creation,Builtin,2,14155,0x10a035380,1332,IteratorPrototypeEvery
code-creation,Builtin,2,14164,0x10a0358c0,1340,IteratorPrototypeFind
code-creation,Builtin,2,14170,0x10a035e00,8560,MapGroupBy
code-creation,Builtin,2,14177,0x10a037f80,312,MathAbs
code-creation,Builtin,2,14183,0x10a0380c0,452,MathCeil
code-creation,Builtin,2,14190,0x10a0382c0,460,MathFloor
code-creation,Builtin,2,14198,0x10a0384c0,504,MathRound
code-creation,Builtin,2,14204,0x10a0386c0,456,MathTrunc
code-creation,Builtin,2,14209,0x10a0388c0,404,MathPow
code-creation,Builtin,2,14216,0x10a038a80,464,MathMax
code-creation,Builtin,2,14223,0x10a038c80,464,MathMin
code-creation,Builtin,2,14230,0x10a038e80,312,MathAcos
code-creation,Builtin,2,14248,0x10a038fc0,312,MathAcosh
code-creation,Builtin,2,14255,0x10a039100,312,MathAsin
code-creation,Builtin,2,14261,0x10a039240,312,MathAsinh
code-creation,Builtin,2,14267,0x10a039380,312,MathAtan
code-creation,Builtin,2,14274,0x10a0394c0,400,MathAtan2
code-creation,Builtin,2,14280,0x10a039680,312,MathAtanh
code-creation,Builtin,2,14286,0x10a0397c0,312,MathCbrt
code-creation,Builtin,2,14292,0x10a039900,168,MathClz32
code-creation,Builtin,2,14299,0x10a0399c0,312,MathCos
code-creation,Builtin,2,14305,0x10a039b00,312,MathCosh
code-creation,Builtin,2,14311,0x10a039c40,312,MathExp
code-creation,Builtin,2,14318,0x10a039d80,312,MathExpm1
code-creation,Builtin,2,14324,0x10a039ec0,268,MathFround
code-creation,Builtin,2,14330,0x10a03a000,304,MathImul
code-creation,Builtin,2,14336,0x10a03a140,312,MathLog
code-creation,Builtin,2,14343,0x10a03a280,312,MathLog1p
code-creation,Builtin,2,14349,0x10a03a3c0,312,MathLog10
code-creation,Builtin,2,14355,0x10a03a500,312,MathLog2
code-creation,Builtin,2,14362,0x10a03a640,312,MathSin
code-creation,Builtin,2,14368,0x10a03a780,176,MathSign
code-creation,Builtin,2,14374,0x10a03a840,312,MathSinh
code-creation,Builtin,2,14380,0x10a03a980,264,MathSqrt
code-creation,Builtin,2,14387,0x10a03aac0,312,MathTan
code-creation,Builtin,2,14393,0x10a03ac00,312,MathTanh
code-creation,Builtin,2,14399,0x10a03ad40,1088,MathHypot
code-creation,Builtin,2,14406,0x10a03b1c0,320,MathRandom
code-creation,Builtin,2,14412,0x10a03b340,2692,NumberPrototypeToString
code-creation,Builtin,2,14419,0x10a03be00,132,NumberIsFinite
code-creation,Builtin,2,14426,0x10a03bec0,332,NumberIsInteger
code-creation,Builtin,2,14432,0x10a03c040,128,NumberIsNaN
code-creation,Builtin,2,14439,0x10a03c100,364,NumberIsSafeInteger
code-creation,Builtin,2,14445,0x10a03c280,212,NumberPrototypeValueOf
code-creation,Builtin,2,14452,0x10a03c380,200,NumberParseFloat
code-creation,Builtin,2,14459,0x10a03c480,248,ParseInt
code-creation,Builtin,2,14465,0x10a03c580,84,NumberParseInt
code-creation,Builtin,2,14472,0x10a03c600,844,Add
code-creation,Builtin,2,14478,0x10a03c980,476,Subtract
code-creation,Builtin,2,14484,0x10a03cb80,604,Multiply
code-creation,Builtin,2,14490,0x10a03ce00,548,Divide
code-creation,Builtin,2,14496,0x10a03d040,596,Modulus
code-creation,Builtin,2,14502,0x10a03d2c0,616,Exponentiate
code-creation,Builtin,2,14509,0x10a03d540,384,Negate
code-creation,Builtin,2,14515,0x10a03d700,208,BitwiseNot
code-creation,Builtin,2,14521,0x10a03d800,160,Decrement
code-creation,Builtin,2,14528,0x10a03d8c0,160,Increment
code-creation,Builtin,2,14534,0x10a03d980,608,ShiftLeft
code-creation,Builtin,2,14540,0x10a03dc00,608,ShiftRight
code-creation,Builtin,2,14547,0x10a03de80,640,ShiftRightLogical
code-creation,Builtin,2,14556,0x10a03e140,352,BitwiseAnd
code-creation,Builtin,2,14570,0x10a03e2c0,352,BitwiseOr
code-creation,Builtin,2,14575,0x10a03e440,352,BitwiseXor
code-creation,Builtin,2,14581,0x10a03e5c0,1012,LessThan
code-creation,Builtin,2,14588,0x10a03e9c0,1012,LessThanOrEqual
code-creation,Builtin,2,14594,0x10a03edc0,1012,GreaterThan
code-creation,Builtin,2,14601,0x10a03f1c0,1012,GreaterThanOrEqual
code-creation,Builtin,2,14607,0x10a03f5c0,1060,Equal
code-creation,Builtin,2,14614,0x10a03fa00,512,StrictEqual
code-creation,Builtin,2,14620,0x10a03fc40,3328,ObjectFromEntries
code-creation,Builtin,2,14627,0x10a040980,4192,GroupByGeneric
code-creation,Builtin,2,14633,0x10a041a00,8976,ObjectGroupBy
code-creation,Builtin,2,14640,0x10a043d40,884,CreateObjectWithoutProperties
code-creation,Builtin,2,14647,0x10a0440c0,140,ObjectIsExtensible
code-creation,Builtin,2,14654,0x10a044180,144,ObjectPreventExtensions
code-creation,Builtin,2,14661,0x10a044240,148,ObjectGetPrototypeOf
code-creation,Builtin,2,14667,0x10a044300,300,ObjectSetPrototypeOf
code-creation,Builtin,2,14674,0x10a044440,80,ObjectPrototypeToString
code-creation,Builtin,2,14681,0x10a0444c0,100,ObjectPrototypeValueOf
code-creation,Builtin,2,14688,0x10a044540,184,ObjectPrototypeToLocaleString
code-creation,Builtin,2,14695,0x10a044600,996,FulfillPromise
code-creation,Builtin,2,14709,0x10a044a00,1096,RejectPromise
code-creation,Builtin,2,14716,0x10a044e80,2524,NewPromiseCapability
code-creation,Builtin,2,14723,0x10a045880,192,PromiseCapabilityDefaultReject
code-creation,Builtin,2,14731,0x10a045980,172,PromiseCapabilityDefaultResolve
code-creation,Builtin,2,14738,0x10a045a40,1400,PerformPromiseThen
code-creation,Builtin,2,14745,0x10a045fc0,664,PromiseReject
code-creation,Builtin,2,14751,0x10a046280,320,PromiseGetCapabilitiesExecutor
code-creation,Builtin,2,14759,0x10a046400,108,PromiseConstructorLazyDeoptContinuation
code-creation,Builtin,2,14767,0x10a046480,4892,PromiseAll
code-creation,Builtin,2,14773,0x10a0477c0,5300,PromiseAllSettled
code-creation,Builtin,2,14780,0x10a048c80,1104,PromiseAllResolveElementClosure
code-creation,Builtin,2,14787,0x10a049100,1504,PromiseAllSettledResolveElementClosure
code-creation,Builtin,2,14795,0x10a049700,1504,PromiseAllSettledRejectElementClosure
code-creation,Builtin,2,14802,0x10a049d00,1160,PromiseAnyRejectElementClosure
code-creation,Builtin,2,14810,0x10a04a1c0,2836,PromiseAny
code-creation,Builtin,2,14816,0x10a04ad00,3184,PromiseConstructor
code-creation,Builtin,2,14823,0x10a04b980,292,PromisePrototypeCatch
code-creation,Builtin,2,14830,0x10a04bac0,92,PromiseValueThunkFinally
code-creation,Builtin,2,14837,0x10a04bb40,84,PromiseThrowerFinally
code-creation,Builtin,2,14844,0x10a04bbc0,1024,PromiseCatchFinally
code-creation,Builtin,2,14851,0x10a04c000,1024,PromiseThenFinally
code-creation,Builtin,2,14857,0x10a04c440,1684,PromisePrototypeFinally
code-creation,Builtin,2,14864,0x10a04cb00,1308,PromiseResolveThenableJob
code-creation,Builtin,2,14871,0x10a04d040,1576,PromiseRace
code-creation,Builtin,2,14878,0x10a04d680,348,PromiseFulfillReactionJob
code-creation,Builtin,2,14885,0x10a04d800,468,PromiseRejectReactionJob
code-creation,Builtin,2,14892,0x10a04da00,156,PromiseResolveTrampoline
code-creation,Builtin,2,14899,0x10a04dac0,700,PromiseResolve
code-creation,Builtin,2,14905,0x10a04dd80,740,ResolvePromise
code-creation,Builtin,2,14912,0x10a04e080,2400,PromisePrototypeThen
code-creation,Builtin,2,14919,0x10a04ea00,332,PromiseWithResolvers
code-creation,Builtin,2,14926,0x10a04eb80,444,ProxyConstructor
code-creation,Builtin,2,14932,0x10a04ed40,2652,ProxyDeleteProperty
code-creation,Builtin,2,14939,0x10a04f7c0,2928,ProxyGetProperty
code-creation,Builtin,2,14945,0x10a050340,1104,ProxyGetPrototypeOf
code-creation,Builtin,2,14952,0x10a0507c0,2576,ProxyHasProperty
code-creation,Builtin,2,14959,0x10a051200,792,ProxyIsExtensible
code-creation,Builtin,2,14966,0x10a051540,848,ProxyPreventExtensions
code-creation,Builtin,2,14973,0x10a0518c0,1144,ProxyRevocable
code-creation,Builtin,2,14979,0x10a051d40,136,ProxyRevoke
code-creation,Builtin,2,14986,0x10a051e00,3152,ProxySetProperty
code-creation,Builtin,2,14992,0x10a052a80,1360,ProxySetPrototypeOf
code-creation,Builtin,2,14999,0x10a053000,208,ReflectIsExtensible
code-creation,Builtin,2,15006,0x10a053100,212,ReflectPreventExtensions
code-creation,Builtin,2,15013,0x10a053200,184,ReflectGetPrototypeOf
code-creation,Builtin,2,15020,0x10a0532c0,328,ReflectSetPrototypeOf
code-creation,Builtin,2,15027,0x10a053440,296,ReflectGet
code-creation,Builtin,2,15033,0x10a053580,156,ReflectDeleteProperty
code-creation,Builtin,2,15040,0x10a053640,156,ReflectHas
code-creation,Builtin,2,15047,0x10a053700,4992,ReflectGetOwnPropertyDescriptor
code-creation,Builtin,2,15054,0x10a054ac0,5564,RegExpPrototypeExecSlow
code-creation,Builtin,2,15061,0x10a056080,5588,RegExpPrototypeExec
code-creation,Builtin,2,15068,0x10a057680,2752,RegExpPrototypeMatchAll
code-creation,Builtin,2,15075,0x10a058180,9984,RegExpStringIteratorPrototypeNext
code-creation,Builtin,2,15082,0x10a05a8c0,9388,RegExpMatchFast
code-creation,Builtin,2,15089,0x10a05cd80,3820,RegExpPrototypeMatch
code-creation,Builtin,2,15096,0x10a05dc80,6380,RegExpReplace
code-creation,Builtin,2,15102,0x10a05f580,508,RegExpPrototypeReplace
code-creation,Builtin,2,15109,0x10a05f780,1440,RegExpSearchFast
code-creation,Builtin,2,15116,0x10a05fd40,1664,RegExpPrototypeSearch
code-creation,Builtin,2,15129,0x10a060400,212,RegExpPrototypeSourceGetter
code-creation,Builtin,2,15137,0x10a060500,6608,RegExpSplit
code-creation,Builtin,2,15143,0x10a061f00,468,RegExpPrototypeSplit
code-creation,Builtin,2,15150,0x10a062100,2308,RegExpPrototypeTest
code-creation,Builtin,2,15157,0x10a062a40,1388,RegExpPrototypeTestFast
code-creation,Builtin,2,15164,0x10a062fc0,236,RegExpPrototypeGlobalGetter
code-creation,Builtin,2,15171,0x10a0630c0,252,RegExpPrototypeIgnoreCaseGetter
code-creation,Builtin,2,15179,0x10a0631c0,252,RegExpPrototypeMultilineGetter
code-creation,Builtin,2,15186,0x10a0632c0,252,RegExpPrototypeHasIndicesGetter
code-creation,Builtin,2,15193,0x10a0633c0,252,RegExpPrototypeLinearGetter
code-creation,Builtin,2,15201,0x10a0634c0,252,RegExpPrototypeDotAllGetter
code-creation,Builtin,2,15208,0x10a0635c0,284,RegExpPrototypeStickyGetter
code-creation,Builtin,2,15215,0x10a063700,284,RegExpPrototypeUnicodeGetter
code-creation,Builtin,2,15222,0x10a063840,252,RegExpPrototypeUnicodeSetsGetter
code-creation,Builtin,2,15230,0x10a063940,2612,RegExpPrototypeFlagsGetter
code-creation,Builtin,2,15237,0x10a064380,12004,SetPrototypeDifference
code-creation,Builtin,2,15244,0x10a067280,12944,SetPrototypeIntersection
code-creation,Builtin,2,15250,0x10a06a540,3116,SetPrototypeIsDisjointFrom
code-creation,Builtin,2,15258,0x10a06b180,1804,SetPrototypeIsSubsetOf
code-creation,Builtin,2,15265,0x10a06b8c0,2276,SetPrototypeIsSupersetOf
code-creation,Builtin,2,15272,0x10a06c1c0,11828,SetPrototypeSymmetricDifference
code-creation,Builtin,2,15279,0x10a06f000,7632,SetPrototypeUnion
code-creation,Builtin,2,15286,0x10a070e00,1320,StringPrototypeAt
code-creation,Builtin,2,15292,0x10a071340,3296,StringPrototypeEndsWith
code-creation,Builtin,2,15300,0x10a072040,496,CreateHTML
code-creation,Builtin,2,15306,0x10a072240,148,StringPrototypeAnchor
code-creation,Builtin,2,15313,0x10a072300,120,StringPrototypeBig
code-creation,Builtin,2,15319,0x10a072380,120,StringPrototypeBlink
code-creation,Builtin,2,15326,0x10a072400,120,StringPrototypeBold
code-creation,Builtin,2,15333,0x10a072480,148,StringPrototypeFontcolor
code-creation,Builtin,2,15340,0x10a072540,148,StringPrototypeFontsize
code-creation,Builtin,2,15347,0x10a072600,120,StringPrototypeFixed
code-creation,Builtin,2,15354,0x10a072680,120,StringPrototypeItalics
code-creation,Builtin,2,15361,0x10a072700,148,StringPrototypeLink
code-creation,Builtin,2,15367,0x10a0727c0,120,StringPrototypeSmall
code-creation,Builtin,2,15374,0x10a072840,120,StringPrototypeStrike
code-creation,Builtin,2,15384,0x10a0728c0,120,StringPrototypeSub
code-creation,Builtin,2,15391,0x10a072940,120,StringPrototypeSup
code-creation,Builtin,2,15398,0x10a0729c0,1024,StringPrototypeIncludes
code-creation,Builtin,2,15405,0x10a072e00,648,StringPrototypeIndexOf
code-creation,Builtin,2,15412,0x10a0730c0,636,StringPrototypeIsWellFormed
code-creation,Builtin,2,15419,0x10a073340,348,StringPrototypeIterator
code-creation,Builtin,2,15426,0x10a0734c0,1804,StringIteratorPrototypeNext
code-creation,Builtin,2,15433,0x10a073c00,1360,StringPrototypeMatch
code-creation,Builtin,2,15440,0x10a074180,1360,StringPrototypeSearch
code-creation,Builtin,2,15447,0x10a074700,768,StringPrototypePadStart
code-creation,Builtin,2,15454,0x10a074a40,772,StringPrototypePadEnd
code-creation,Builtin,2,15461,0x10a074d80,156,StringRepeat
code-creation,Builtin,2,15467,0x10a074e40,408,StringPrototypeRepeat
code-creation,Builtin,2,15474,0x10a075000,13272,StringPrototypeReplaceAll
code-creation,Builtin,2,15481,0x10a078400,4416,StringPrototypeSlice
code-creation,Builtin,2,15488,0x10a079580,3296,StringPrototypeStartsWith
code-creation,Builtin,2,15495,0x10a07a280,4344,StringPrototypeSubstr
code-creation,Builtin,2,15502,0x10a07b380,4300,StringPrototypeSubstring
code-creation,Builtin,2,15509,0x10a07c480,932,StringPrototypeToWellFormed
code-creation,Builtin,2,15516,0x10a07c840,8936,StringPrototypeTrim
code-creation,Builtin,2,15523,0x10a07eb40,8468,StringPrototypeTrimStart
code-creation,Builtin,2,15530,0x10a080c80,8024,StringPrototypeTrimEnd
code-creation,Builtin,2,15537,0x10a082c00,216,SymbolPrototypeDescriptionGetter
code-creation,Builtin,2,15551,0x10a082d00,212,SymbolPrototypeToPrimitive
code-creation,Builtin,2,15559,0x10a082e00,232,SymbolPrototypeToString
tick,0x7ff8092cbace,15572,0,0x0,6
tick,0x7ff8093038b3,15584,0,0x0,6
tick,0x1098a32b1,15591,0,0x0,6
tick,0x7ff8092cae7e,15595,0,0x0,6
code-creation,Builtin,2,15603,0x10a082f00,212,SymbolPrototypeValueOf
code-creation,Builtin,2,15610,0x10a083000,1136,TypedArrayPrototypeAt
code-creation,Builtin,2,15616,0x10a083480,11248,CreateTypedArray
code-creation,Builtin,2,15621,0x10a086080,1764,TypedArrayPrototypeEvery
code-creation,Builtin,2,15626,0x10a086780,412,TypedArrayPrototypeEntries
code-creation,Builtin,2,15632,0x10a086940,4600,TypedArrayPrototypeFilter
code-creation,Builtin,2,15637,0x10a087b40,1768,TypedArrayPrototypeFind
code-creation,Builtin,2,15642,0x10a088240,1772,TypedArrayPrototypeFindIndex
code-creation,Builtin,2,15648,0x10a088940,1784,TypedArrayPrototypeFindLast
code-creation,Builtin,2,15653,0x10a089040,1792,TypedArrayPrototypeFindLastIndex
code-creation,Builtin,2,15659,0x10a089780,1624,TypedArrayPrototypeForEach
code-creation,Builtin,2,15664,0x10a089e00,3052,TypedArrayFrom
code-creation,Builtin,2,15669,0x10a08aa00,404,TypedArrayPrototypeKeys
code-creation,Builtin,2,15674,0x10a08abc0,1416,TypedArrayOf
code-creation,Builtin,2,15679,0x10a08b180,1776,TypedArrayPrototypeReduce
code-creation,Builtin,2,15684,0x10a08b880,1708,TypedArrayPrototypeReduceRight
code-creation,Builtin,2,15689,0x10a08bf40,3300,TypedArrayPrototypeSet
code-creation,Builtin,2,15694,0x10a08cc40,4096,TypedArrayPrototypeSlice
code-creation,Builtin,2,15699,0x10a08dc80,1768,TypedArrayPrototypeSome
code-creation,Builtin,2,15705,0x10a08e380,896,TypedArrayMergeSort
code-creation,Builtin,2,15709,0x10a08e740,2320,TypedArrayPrototypeSort
code-creation,Builtin,2,15715,0x10a08f080,3092,TypedArrayPrototypeSubArray
code-creation,Builtin,2,15742,0x10a08fcc0,1796,TypedArrayPrototypeToReversed
code-creation,Builtin,2,15748,0x10a090400,3292,TypedArrayPrototypeToSorted
code-creation,Builtin,2,15770,0x10a091100,412,TypedArrayPrototypeValues
code-creation,Builtin,2,15775,0x10a0912c0,3160,TypedArrayPrototypeWith
code-creation,Builtin,2,15799,0x10a091f40,1132,WeakRefConstructor
code-creation,Builtin,2,15821,0x10a0923c0,188,WeakRefDeref
code-creation,Builtin,2,15825,0x10a092480,724,NewSloppyArgumentsElements
code-creation,Builtin,2,15830,0x10a092780,352,NewStrictArgumentsElements
code-creation,Builtin,2,15836,0x10a092900,360,NewRestArgumentsElements
code-creation,Builtin,2,15841,0x10a092a80,1476,FastNewSloppyArguments
code-creation,Builtin,2,15846,0x10a093080,508,FastNewStrictArguments
code-creation,Builtin,2,15851,0x10a093280,548,FastNewRestArguments
code-creation,Builtin,2,15856,0x10a0934c0,660,StringSlowFlatten
code-creation,Builtin,2,15860,0x10a093780,2108,StringIndexOf
code-creation,Builtin,2,15865,0x10a093fc0,2028,TestTurbofanType
code-creation,Builtin,2,15869,0x10a0947c0,192,CheckTurbofanType
code-creation,Builtin,2,15874,0x10a0948c0,532,CheckTurboshaftWord32Type
code-creation,Builtin,2,15879,0x10a094b00,1008,CheckTurboshaftWord64Type
code-creation,Builtin,2,15894,0x10a094f00,1084,CheckTurboshaftFloat32Type
code-creation,Builtin,2,15899,0x10a095340,1080,CheckTurboshaftFloat64Type
code-creation,Builtin,2,15904,0x10a095780,176,DebugPrintWordPtr
code-creation,Builtin,2,15909,0x10a095840,180,DebugPrintFloat64
code-creation,Builtin,2,15914,0x10a095900,4,GenericBuiltinTest_JSAny_0
code-creation,Builtin,2,15919,0x10a095940,20,TestHelperPlus1
code-creation,Builtin,2,15924,0x10a095980,20,TestHelperPlus2
code-creation,Builtin,2,15928,0x10a0959c0,92,NewSmiBox
code-creation,Builtin,2,15933,0x10a095a40,24,ReturnTwoValues
code-creation,Builtin,2,15937,0x10a095a80,28,ThrowAsBuiltin
code-creation,Builtin,2,15942,0x10a095ac0,100,TestCallNever
code-creation,Builtin,2,15946,0x10a095b40,28,Load_FastSmiElements_0
code-creation,Builtin,2,15951,0x10a095b80,28,Load_FastObjectElements_0
code-creation,Builtin,2,15957,0x10a095bc0,140,Load_FastDoubleElements_0
code-creation,Builtin,2,15962,0x10a095c80,28,Store_FastSmiElements_0
code-creation,Builtin,2,15977,0x10a095cc0,92,Store_FastObjectElements_0
code-creation,Builtin,2,15983,0x10a095d40,44,Store_FastDoubleElements_0
code-creation,Builtin,2,15989,0x10a095d80,36,Delete_FastSmiElements_0
code-creation,Builtin,2,15994,0x10a095dc0,36,Delete_FastObjectElements_0
code-creation,Builtin,2,15999,0x10a095e00,40,Delete_FastDoubleElements_0
code-creation,Builtin,2,16004,0x10a095e40,200,SortCompareDefault
code-creation,Builtin,2,16009,0x10a095f40,96,SortCompareUserFn
code-creation,Builtin,2,16014,0x10a095fc0,12,CanUseSameAccessor_GenericElementsAccessor_0
code-creation,Builtin,2,16020,0x10a096000,360,Copy
code-creation,Builtin,2,16024,0x10a096180,5964,MergeAt
code-creation,Builtin,2,16028,0x10a097900,920,GallopLeft
code-creation,Builtin,2,16032,0x10a097cc0,928,GallopRight
code-creation,Builtin,2,16037,0x10a098080,4084,ArrayTimSort
code-creation,Builtin,2,16041,0x10a099080,2020,ArrayPrototypeSort
code-creation,Builtin,2,16046,0x10a099880,4240,StringFastLocaleCompare
code-creation,Builtin,2,16051,0x10a09a940,3400,JSToWasmWrapper
code-creation,Builtin,2,16056,0x10a09b6c0,3416,WasmReturnPromiseOnSuspend
code-creation,Builtin,2,16061,0x10a09c440,2664,JSToWasmHandleReturns
code-creation,Builtin,2,16066,0x10a09cec0,92,WasmInt32ToHeapNumber
code-creation,Builtin,2,16071,0x10a09cf40,68,WasmFuncRefToJS
code-creation,Builtin,2,16075,0x10a09cfc0,124,WasmTaggedNonSmiToInt32
code-creation,Builtin,2,16080,0x10a09d040,76,WasmTaggedToFloat64
code-creation,Builtin,2,16085,0x10a09d0c0,84,WasmTaggedToFloat32
code-creation,Builtin,2,16090,0x10a09d140,80,WasmMemoryGrow
code-creation,Builtin,2,16095,0x10a09d1c0,88,WasmTableInit
code-creation,Builtin,2,16099,0x10a09d240,88,WasmTableCopy
code-creation,Builtin,2,16104,0x10a09d2c0,76,WasmTableFill
code-creation,Builtin,2,16108,0x10a09d340,68,WasmTableGrow
code-creation,Builtin,2,16112,0x10a09d3c0,76,WasmTableGet
code-creation,Builtin,2,16117,0x10a09d440,148,WasmTableSet
code-creation,Builtin,2,16122,0x10a09d500,148,WasmTableGetFuncRef
code-creation,Builtin,2,16126,0x10a09d5c0,104,WasmTableSetFuncRef
code-creation,Builtin,2,16131,0x10a09d640,76,WasmRefFunc
code-creation,Builtin,2,16135,0x10a09d6c0,32,WasmInternalFunctionCreateExternal
code-creation,Builtin,2,16141,0x10a09d700,156,WasmAllocateFixedArray
code-creation,Builtin,2,16146,0x10a09d7c0,44,WasmThrow
code-creation,Builtin,2,16150,0x10a09d800,56,WasmRethrow
code-creation,Builtin,2,16155,0x10a09d840,44,WasmRethrowExplicitContext
code-creation,Builtin,2,16160,0x10a09d880,44,WasmTriggerTierUp
code-creation,Builtin,2,16164,0x10a09d8c0,32,WasmStackGuard
code-creation,Builtin,2,16169,0x10a09d900,32,WasmStackOverflow
code-creation,Builtin,2,16174,0x10a09d940,40,WasmTraceMemory
code-creation,Builtin,2,16178,0x10a09d980,32,WasmTraceEnter
code-creation,Builtin,2,16183,0x10a09d9c0,40,WasmTraceExit
code-creation,Builtin,2,16187,0x10a09da00,756,WasmAllocateJSArray
code-creation,Builtin,2,16192,0x10a09dd00,100,WasmAllocateStructWithRtt
code-creation,Builtin,2,16197,0x10a09dd80,128,WasmAllocateArray_Uninitialized
code-creation,Builtin,2,16202,0x10a09de40,96,WasmArrayNewSegment
code-creation,Builtin,2,16207,0x10a09dec0,184,WasmArrayInitSegment
code-creation,Builtin,2,16212,0x10a09df80,136,WasmArrayCopyWithChecks
code-creation,Builtin,2,16217,0x10a09e040,100,WasmArrayCopy
code-creation,Builtin,2,16221,0x10a09e0c0,108,WasmUint32ToNumber
code-creation,Builtin,2,16226,0x10a09e140,140,UintPtr53ToNumber
code-creation,Builtin,2,16231,0x10a09e200,116,WasmAtomicNotify
code-creation,Builtin,2,16235,0x10a09e280,108,WasmI32AtomicWait
code-creation,Builtin,2,16240,0x10a09e300,104,WasmI64AtomicWait
code-creation,Builtin,2,16245,0x10a09e380,1348,CallRefIC
code-creation,Builtin,2,16249,0x10a09e900,1700,WasmGetOwnProperty
code-creation,Builtin,2,16254,0x10a09efc0,92,WasmTrap
code-creation,Builtin,2,16258,0x10a09f040,16,ThrowWasmTrapUnreachable
code-creation,Builtin,2,16263,0x10a09f080,16,ThrowWasmTrapMemOutOfBounds
code-creation,Builtin,2,16268,0x10a09f0c0,16,ThrowWasmTrapUnalignedAccess
code-creation,Builtin,2,16273,0x10a09f100,16,ThrowWasmTrapDivByZero
code-creation,Builtin,2,16285,0x10a09f140,16,ThrowWasmTrapDivUnrepresentable
code-creation,Builtin,2,16291,0x10a09f180,16,ThrowWasmTrapRemByZero
code-creation,Builtin,2,16296,0x10a09f1c0,16,ThrowWasmTrapFloatUnrepresentable
code-creation,Builtin,2,16301,0x10a09f200,16,ThrowWasmTrapFuncSigMismatch
code-creation,Builtin,2,16306,0x10a09f240,16,ThrowWasmTrapDataSegmentOutOfBounds
code-creation,Builtin,2,16312,0x10a09f280,16,ThrowWasmTrapElementSegmentOutOfBounds
code-creation,Builtin,2,16318,0x10a09f2c0,16,ThrowWasmTrapTableOutOfBounds
code-creation,Builtin,2,16323,0x10a09f300,16,ThrowWasmTrapRethrowNull
code-creation,Builtin,2,16328,0x10a09f340,16,ThrowWasmTrapNullDereference
code-creation,Builtin,2,16333,0x10a09f380,16,ThrowWasmTrapIllegalCast
code-creation,Builtin,2,16338,0x10a09f3c0,16,ThrowWasmTrapArrayOutOfBounds
code-creation,Builtin,2,16344,0x10a09f400,16,ThrowWasmTrapArrayTooLarge
code-creation,Builtin,2,16349,0x10a09f440,16,ThrowWasmTrapStringOffsetOutOfBounds
code-creation,Builtin,2,16354,0x10a09f480,148,WasmStringNewWtf8
code-creation,Builtin,2,16359,0x10a09f540,164,WasmStringNewWtf8Array
code-creation,Builtin,2,16364,0x10a09f600,140,WasmStringNewWtf16
code-creation,Builtin,2,16369,0x10a09f6c0,1176,WasmStringNewWtf16Array
code-creation,Builtin,2,16374,0x10a09fb80,116,WasmStringFromDataSegment
code-creation,Builtin,2,16379,0x10a09fc00,52,WasmStringAsWtf16
code-creation,Builtin,2,16383,0x10a09fc40,48,WasmStringConst
code-creation,Builtin,2,16388,0x10a09fc80,108,WasmStringMeasureUtf8
code-creation,Builtin,2,16393,0x10a09fd00,108,WasmStringMeasureWtf8
code-creation,Builtin,2,16398,0x10a09fd80,156,WasmStringEncodeWtf8
code-creation,Builtin,2,16402,0x10a09fe40,148,WasmStringEncodeWtf8Array
code-creation,Builtin,2,16408,0x10a09ff00,104,WasmStringEncodeWtf16
code-creation,Builtin,2,16412,0x10a09ff80,908,WasmStringEncodeWtf16Array
code-creation,Builtin,2,16418,0x10a0a0340,68,ThrowToLowerCaseCalledOnNull
code-creation,Builtin,2,16423,0x10a0a03c0,68,ThrowIndexOfCalledOnNull
code-creation,Builtin,2,16428,0x10a0a0440,20,WasmStringConcat
code-creation,Builtin,2,16432,0x10a0a0480,60,WasmStringEqual
code-creation,Builtin,2,16437,0x10a0a04c0,140,WasmStringIsUSVSequence
code-creation,Builtin,2,16442,0x10a0a0580,40,WasmStringAsWtf8
code-creation,Builtin,2,16447,0x10a0a05c0,224,WasmStringViewWtf8Advance
code-creation,Builtin,2,16452,0x10a0a06c0,168,WasmStringViewWtf8Encode
code-creation,Builtin,2,16457,0x10a0a0780,172,WasmStringViewWtf8Slice
code-creation,Builtin,2,16462,0x10a0a0840,556,WasmStringViewWtf16GetCodeUnit
code-creation,Builtin,2,16467,0x10a0a0a80,140,WasmStringViewWtf16Encode
code-creation,Builtin,2,16472,0x10a0a0b40,5156,WasmStringViewWtf16Slice
code-creation,Builtin,2,16477,0x10a0a1f80,100,WasmStringAsIter
code-creation,Builtin,2,16482,0x10a0a2000,1196,WasmStringCodePointAt
code-creation,Builtin,2,16487,0x10a0a24c0,1232,WasmStringViewIterNext
code-creation,Builtin,2,16491,0x10a0a29c0,1444,WasmStringViewIterAdvance
code-creation,Builtin,2,16499,0x10a0a2f80,1444,WasmStringViewIterRewind
code-creation,Builtin,2,16505,0x10a0a3540,4708,WasmStringViewIterSlice
code-creation,Builtin,2,16510,0x10a0a47c0,2736,WasmIntToString
code-creation,Builtin,2,16514,0x10a0a5280,160,WasmStringToDouble
code-creation,Builtin,2,16519,0x10a0a5340,80,WasmStringFromCodePoint
code-creation,Builtin,2,16524,0x10a0a53c0,36,WasmStringHash
code-creation,Builtin,2,16529,0x10a0a5400,60,WasmExternInternalize
code-creation,Builtin,2,16533,0x10a0a5440,516,WebAssemblyStringFromWtf16Array
code-creation,Builtin,2,16539,0x10a0a5680,528,WebAssemblyStringFromWtf8Array
code-creation,Builtin,2,16544,0x10a0a58c0,436,WebAssemblyStringToWtf16Array
code-creation,Builtin,2,16549,0x10a0a5a80,304,WebAssemblyStringFromCharCode
code-creation,Builtin,2,16555,0x10a0a5bc0,364,WebAssemblyStringFromCodePoint
code-creation,Builtin,2,16560,0x10a0a5d40,1424,WebAssemblyStringCodePointAt
code-creation,Builtin,2,16565,0x10a0a6300,824,WebAssemblyStringCharCodeAt
code-creation,Builtin,2,16570,0x10a0a6640,148,WebAssemblyStringLength
code-creation,Builtin,2,16575,0x10a0a6700,220,WebAssemblyStringConcat
code-creation,Builtin,2,16587,0x10a0a6800,436,WebAssemblyStringSubstring
code-creation,Builtin,2,16593,0x10a0a69c0,420,WebAssemblyStringEquals
code-creation,Builtin,2,16598,0x10a0a6b80,220,WebAssemblyStringCompare
code-creation,Builtin,2,16603,0x10a0a6c80,164,LoadJoinElement_GenericElementsAccessor_0
code-creation,Builtin,2,16609,0x10a0a6d40,24,LoadJoinTypedElement_Int32Elements_0
code-creation,Builtin,2,16614,0x10a0a6d80,108,LoadJoinTypedElement_Float32Elements_0
code-creation,Builtin,2,16620,0x10a0a6e00,104,LoadJoinTypedElement_Float64Elements_0
code-creation,Builtin,2,16625,0x10a0a6e80,24,LoadJoinTypedElement_Uint8ClampedElements_0
code-creation,Builtin,2,16631,0x10a0a6ec0,208,LoadJoinTypedElement_BigUint64Elements_0
code-creation,Builtin,2,16637,0x10a0a6fc0,236,LoadJoinTypedElement_BigInt64Elements_0
code-creation,Builtin,2,16643,0x10a0a70c0,24,LoadJoinTypedElement_Uint8Elements_0
code-creation,Builtin,2,16648,0x10a0a7100,24,LoadJoinTypedElement_Int8Elements_0
code-creation,Builtin,2,16654,0x10a0a7140,24,LoadJoinTypedElement_Uint16Elements_0
code-creation,Builtin,2,16659,0x10a0a7180,24,LoadJoinTypedElement_Int16Elements_0
code-creation,Builtin,2,16665,0x10a0a71c0,124,LoadJoinTypedElement_Uint32Elements_0
code-creation,Builtin,2,16671,0x10a0a7240,12,GenericBuiltinTest_Smi_0
code-creation,Builtin,2,16676,0x10a0a7280,40,CanUseSameAccessor_FastDoubleElements_0
code-creation,Builtin,2,16682,0x10a0a72c0,40,CanUseSameAccessor_FastSmiElements_0
code-creation,Builtin,2,16687,0x10a0a7300,40,CanUseSameAccessor_FastObjectElements_0
code-creation,Builtin,2,16693,0x10a0a7340,24,LoadNoHasPropertyCheck_GenericElementsAccessor_0
code-creation,Builtin,2,16699,0x10a0a7380,3900,Load_GenericElementsAccessor_0
code-creation,Builtin,2,16704,0x10a0a82c0,24,Store_GenericElementsAccessor_0
code-creation,Builtin,2,16710,0x10a0a8300,36,Delete_GenericElementsAccessor_0
code-creation,Builtin,2,16715,0x10a0a8340,24,LoadTypedElement_Int32Elements_0
code-creation,Builtin,2,16721,0x10a0a8380,196,StoreTypedElementNumeric_Int32Elements_0
code-creation,Builtin,2,16726,0x10a0a8480,580,StoreTypedElementJSAny_Int32Elements_0
code-creation,Builtin,2,16732,0x10a0a8700,108,LoadTypedElement_Float32Elements_0
code-creation,Builtin,2,16737,0x10a0a8780,32,StoreTypedElementNumeric_Float32Elements_0
code-creation,Builtin,2,16743,0x10a0a87c0,540,StoreTypedElementJSAny_Float32Elements_0
code-creation,Builtin,2,16749,0x10a0a8a00,104,LoadTypedElement_Float64Elements_0
code-creation,Builtin,2,16755,0x10a0a8a80,28,StoreTypedElementNumeric_Float64Elements_0
code-creation,Builtin,2,16760,0x10a0a8ac0,536,StoreTypedElementJSAny_Float64Elements_0
code-creation,Builtin,2,16766,0x10a0a8d00,24,LoadTypedElement_Uint8ClampedElements_0
code-creation,Builtin,2,16772,0x10a0a8d40,24,StoreTypedElementNumeric_Uint8ClampedElements_0
code-creation,Builtin,2,16778,0x10a0a8d80,996,StoreTypedElementJSAny_Uint8ClampedElements_0
code-creation,Builtin,2,16784,0x10a0a9180,208,LoadTypedElement_BigUint64Elements_0
code-creation,Builtin,2,16790,0x10a0a9280,56,StoreTypedElementNumeric_BigUint64Elements_0
code-creation,Builtin,2,16796,0x10a0a92c0,552,StoreTypedElementJSAny_BigUint64Elements_0
code-creation,Builtin,2,16802,0x10a0a9500,236,LoadTypedElement_BigInt64Elements_0
code-creation,Builtin,2,16807,0x10a0a9600,56,StoreTypedElementNumeric_BigInt64Elements_0
code-creation,Builtin,2,16813,0x10a0a9640,552,StoreTypedElementJSAny_BigInt64Elements_0
code-creation,Builtin,2,16821,0x10a0a9880,24,LoadTypedElement_Uint8Elements_0
code-creation,Builtin,2,16826,0x10a0a98c0,24,StoreTypedElementNumeric_Uint8Elements_0
code-creation,Builtin,2,16832,0x10a0a9900,580,StoreTypedElementJSAny_Uint8Elements_0
code-creation,Builtin,2,16837,0x10a0a9b80,24,LoadTypedElement_Int8Elements_0
code-creation,Builtin,2,16843,0x10a0a9bc0,24,StoreTypedElementNumeric_Int8Elements_0
code-creation,Builtin,2,16849,0x10a0a9c00,580,StoreTypedElementJSAny_Int8Elements_0
code-creation,Builtin,2,16864,0x10a0a9e80,24,LoadTypedElement_Uint16Elements_0
code-creation,Builtin,2,16872,0x10a0a9ec0,24,StoreTypedElementNumeric_Uint16Elements_0
code-creation,Builtin,2,16888,0x10a0a9f00,580,StoreTypedElementJSAny_Uint16Elements_0
code-creation,Builtin,2,16896,0x10a0aa180,24,LoadTypedElement_Int16Elements_0
code-creation,Builtin,2,16902,0x10a0aa1c0,24,StoreTypedElementNumeric_Int16Elements_0
code-creation,Builtin,2,16909,0x10a0aa200,580,StoreTypedElementJSAny_Int16Elements_0
code-creation,Builtin,2,16915,0x10a0aa480,124,LoadTypedElement_Uint32Elements_0
code-creation,Builtin,2,16920,0x10a0aa500,196,StoreTypedElementNumeric_Uint32Elements_0
code-creation,Builtin,2,16928,0x10a0aa600,580,StoreTypedElementJSAny_Uint32Elements_0
code-creation,Builtin,2,16936,0x10a0aa880,12,CollatorConstructor
code-creation,Builtin,2,16941,0x10a0aa8c0,12,CollatorInternalCompare
code-creation,Builtin,2,16947,0x10a0aa900,12,CollatorPrototypeCompare
code-creation,Builtin,2,16953,0x10a0aa940,12,CollatorSupportedLocalesOf
code-creation,Builtin,2,16958,0x10a0aa980,12,CollatorPrototypeResolvedOptions
code-creation,Builtin,2,16963,0x10a0aa9c0,12,DatePrototypeToLocaleDateString
code-creation,Builtin,2,16969,0x10a0aaa00,12,DatePrototypeToLocaleString
code-creation,Builtin,2,16974,0x10a0aaa40,12,DatePrototypeToLocaleTimeString
code-creation,Builtin,2,16979,0x10a0aaa80,12,DateTimeFormatConstructor
code-creation,Builtin,2,16984,0x10a0aaac0,12,DateTimeFormatInternalFormat
code-creation,Builtin,2,16991,0x10a0aab00,12,DateTimeFormatPrototypeFormat
code-creation,Builtin,2,16996,0x10a0aab40,12,DateTimeFormatPrototypeFormatRange
code-creation,Builtin,2,17002,0x10a0aab80,12,DateTimeFormatPrototypeFormatRangeToParts
code-creation,Builtin,2,17007,0x10a0aabc0,12,DateTimeFormatPrototypeFormatToParts
code-creation,Builtin,2,17013,0x10a0aac00,12,DateTimeFormatPrototypeResolvedOptions
code-creation,Builtin,2,17019,0x10a0aac40,12,DateTimeFormatSupportedLocalesOf
code-creation,Builtin,2,17024,0x10a0aac80,12,DisplayNamesConstructor
code-creation,Builtin,2,17031,0x10a0aacc0,12,DisplayNamesPrototypeOf
code-creation,Builtin,2,17036,0x10a0aad00,12,DisplayNamesPrototypeResolvedOptions
code-creation,Builtin,2,17043,0x10a0aad40,12,DisplayNamesSupportedLocalesOf
code-creation,Builtin,2,17049,0x10a0aad80,12,DurationFormatConstructor
code-creation,Builtin,2,17054,0x10a0aadc0,12,DurationFormatPrototypeFormat
code-creation,Builtin,2,17059,0x10a0aae00,12,DurationFormatPrototypeFormatToParts
code-creation,Builtin,2,17065,0x10a0aae40,12,DurationFormatPrototypeResolvedOptions
code-creation,Builtin,2,17070,0x10a0aae80,12,DurationFormatSupportedLocalesOf
code-creation,Builtin,2,17078,0x10a0aaec0,12,IntlGetCanonicalLocales
code-creation,Builtin,2,17084,0x10a0aaf00,12,IntlSupportedValuesOf
code-creation,Builtin,2,17089,0x10a0aaf40,12,ListFormatConstructor
code-creation,Builtin,2,17094,0x10a0aaf80,200,ListFormatPrototypeFormat
code-creation,Builtin,2,17099,0x10a0ab080,200,ListFormatPrototypeFormatToParts
code-creation,Builtin,2,17105,0x10a0ab180,12,ListFormatPrototypeResolvedOptions
code-creation,Builtin,2,17110,0x10a0ab1c0,12,ListFormatSupportedLocalesOf
code-creation,Builtin,2,17116,0x10a0ab200,12,LocaleConstructor
code-creation,Builtin,2,17122,0x10a0ab240,12,LocalePrototypeBaseName
code-creation,Builtin,2,17127,0x10a0ab280,12,LocalePrototypeCalendar
code-creation,Builtin,2,17133,0x10a0ab2c0,12,LocalePrototypeCalendars
code-creation,Builtin,2,17139,0x10a0ab300,12,LocalePrototypeCaseFirst
code-creation,Builtin,2,17143,0x10a0ab340,12,LocalePrototypeCollation
code-creation,Builtin,2,17149,0x10a0ab380,12,LocalePrototypeCollations
code-creation,Builtin,2,17154,0x10a0ab3c0,12,LocalePrototypeGetCalendars
code-creation,Builtin,2,17159,0x10a0ab400,12,LocalePrototypeGetCollations
code-creation,Builtin,2,17164,0x10a0ab440,12,LocalePrototypeGetHourCycles
code-creation,Builtin,2,17169,0x10a0ab480,12,LocalePrototypeGetNumberingSystems
code-creation,Builtin,2,17176,0x10a0ab4c0,12,LocalePrototypeGetTimeZones
code-creation,Builtin,2,17182,0x10a0ab500,12,LocalePrototypeGetTextInfo
code-creation,Builtin,2,17187,0x10a0ab540,12,LocalePrototypeGetWeekInfo
code-creation,Builtin,2,17192,0x10a0ab580,12,LocalePrototypeHourCycle
code-creation,Builtin,2,17199,0x10a0ab5c0,12,LocalePrototypeHourCycles
code-creation,Builtin,2,17212,0x10a0ab600,12,LocalePrototypeLanguage
code-creation,Builtin,2,17218,0x10a0ab640,12,LocalePrototypeMaximize
code-creation,Builtin,2,17223,0x10a0ab680,12,LocalePrototypeMinimize
code-creation,Builtin,2,17230,0x10a0ab6c0,12,LocalePrototypeNumeric
code-creation,Builtin,2,17235,0x10a0ab700,12,LocalePrototypeNumberingSystem
code-creation,Builtin,2,17241,0x10a0ab740,12,LocalePrototypeNumberingSystems
code-creation,Builtin,2,17249,0x10a0ab780,12,LocalePrototypeRegion
code-creation,Builtin,2,17255,0x10a0ab7c0,12,LocalePrototypeScript
code-creation,Builtin,2,17260,0x10a0ab800,12,LocalePrototypeTextInfo
code-creation,Builtin,2,17265,0x10a0ab840,12,LocalePrototypeTimeZones
code-creation,Builtin,2,17270,0x10a0ab880,12,LocalePrototypeToString
code-creation,Builtin,2,17275,0x10a0ab8c0,12,LocalePrototypeWeekInfo
code-creation,Builtin,2,17282,0x10a0ab900,12,NumberFormatConstructor
code-creation,Builtin,2,17289,0x10a0ab940,12,NumberFormatInternalFormatNumber
code-creation,Builtin,2,17296,0x10a0ab980,12,NumberFormatPrototypeFormatNumber
code-creation,Builtin,2,17304,0x10a0ab9c0,12,NumberFormatPrototypeFormatRange
code-creation,Builtin,2,17311,0x10a0aba00,12,NumberFormatPrototypeFormatRangeToParts
code-creation,Builtin,2,17319,0x10a0aba40,12,NumberFormatPrototypeFormatToParts
code-creation,Builtin,2,17326,0x10a0aba80,12,NumberFormatPrototypeResolvedOptions
code-creation,Builtin,2,17334,0x10a0abac0,12,NumberFormatSupportedLocalesOf
code-creation,Builtin,2,17341,0x10a0abb00,12,PluralRulesConstructor
code-creation,Builtin,2,17348,0x10a0abb40,12,PluralRulesPrototypeResolvedOptions
code-creation,Builtin,2,17355,0x10a0abb80,12,PluralRulesPrototypeSelect
code-creation,Builtin,2,17362,0x10a0abbc0,12,PluralRulesPrototypeSelectRange
code-creation,Builtin,2,17369,0x10a0abc00,12,PluralRulesSupportedLocalesOf
code-creation,Builtin,2,17376,0x10a0abc40,12,RelativeTimeFormatConstructor
code-creation,Builtin,2,17384,0x10a0abc80,12,RelativeTimeFormatPrototypeFormat
code-creation,Builtin,2,17391,0x10a0abcc0,12,RelativeTimeFormatPrototypeFormatToParts
code-creation,Builtin,2,17398,0x10a0abd00,12,RelativeTimeFormatPrototypeResolvedOptions
code-creation,Builtin,2,17406,0x10a0abd40,12,RelativeTimeFormatSupportedLocalesOf
code-creation,Builtin,2,17414,0x10a0abd80,12,SegmenterConstructor
code-creation,Builtin,2,17420,0x10a0abdc0,12,SegmenterPrototypeResolvedOptions
code-creation,Builtin,2,17428,0x10a0abe00,12,SegmenterPrototypeSegment
code-creation,Builtin,2,17434,0x10a0abe40,12,SegmenterSupportedLocalesOf
code-creation,Builtin,2,17442,0x10a0abe80,12,SegmentIteratorPrototypeNext
code-creation,Builtin,2,17449,0x10a0abec0,12,SegmentsPrototypeContaining
code-creation,Builtin,2,17456,0x10a0abf00,12,SegmentsPrototypeIterator
code-creation,Builtin,2,17463,0x10a0abf40,12,StringPrototypeNormalizeIntl
code-creation,Builtin,2,17470,0x10a0abf80,1176,StringPrototypeToLocaleLowerCase
code-creation,Builtin,2,17477,0x10a0ac440,12,StringPrototypeToLocaleUpperCase
code-creation,Builtin,2,17484,0x10a0ac480,200,StringPrototypeToLowerCaseIntl
code-creation,Builtin,2,17491,0x10a0ac580,12,StringPrototypeToUpperCaseIntl
code-creation,Builtin,2,17499,0x10a0ac5c0,720,StringToLowerCaseIntl
code-creation,Builtin,2,17505,0x10a0ac8c0,12,TemporalCalendarPrototypeEra
code-creation,Builtin,2,17512,0x10a0ac900,12,TemporalCalendarPrototypeEraYear
code-creation,Builtin,2,17520,0x10a0ac940,12,TemporalPlainDatePrototypeEra
code-creation,Builtin,2,17527,0x10a0ac980,12,TemporalPlainDatePrototypeEraYear
code-creation,Builtin,2,17534,0x10a0ac9c0,12,TemporalPlainDateTimePrototypeEra
code-creation,Builtin,2,17541,0x10a0aca00,12,TemporalPlainDateTimePrototypeEraYear
code-creation,Builtin,2,17549,0x10a0aca40,12,TemporalPlainYearMonthPrototypeEra
code-creation,Builtin,2,17556,0x10a0aca80,12,TemporalPlainYearMonthPrototypeEraYear
code-creation,Builtin,2,17564,0x10a0acac0,12,TemporalZonedDateTimePrototypeEra
code-creation,Builtin,2,17571,0x10a0acb00,12,TemporalZonedDateTimePrototypeEraYear
code-creation,Builtin,2,17578,0x10a0acb40,12,V8BreakIteratorConstructor
code-creation,Builtin,2,17592,0x10a0acb80,12,V8BreakIteratorInternalAdoptText
code-creation,Builtin,2,17600,0x10a0acbc0,12,V8BreakIteratorInternalBreakType
code-creation,Builtin,2,17607,0x10a0acc00,12,V8BreakIteratorInternalCurrent
code-creation,Builtin,2,17614,0x10a0acc40,12,V8BreakIteratorInternalFirst
code-creation,Builtin,2,17622,0x10a0acc80,12,V8BreakIteratorInternalNext
code-creation,Builtin,2,17629,0x10a0accc0,12,V8BreakIteratorPrototypeAdoptText
code-creation,Builtin,2,17636,0x10a0acd00,12,V8BreakIteratorPrototypeBreakType
code-creation,Builtin,2,17643,0x10a0acd40,12,V8BreakIteratorPrototypeCurrent
code-creation,Builtin,2,17651,0x10a0acd80,12,V8BreakIteratorPrototypeFirst
code-creation,Builtin,2,17656,0x10a0acdc0,12,V8BreakIteratorPrototypeNext
code-creation,Builtin,2,17661,0x10a0ace00,12,V8BreakIteratorPrototypeResolvedOptions
code-creation,Builtin,2,17667,0x10a0ace40,12,V8BreakIteratorSupportedLocalesOf
code-creation,BytecodeHandler,0,17676,0x10a0ace80,24,Wide
code-creation,BytecodeHandler,0,17681,0x10a0acec0,24,ExtraWide
code-creation,BytecodeHandler,0,17686,0x10a0acf00,104,DebugBreakWide
code-creation,BytecodeHandler,0,17692,0x10a0acf80,104,DebugBreakExtraWide
code-creation,BytecodeHandler,0,17699,0x10a0ad000,164,DebugBreak0
code-creation,BytecodeHandler,0,17706,0x10a0ad0c0,104,DebugBreak1
code-creation,BytecodeHandler,0,17712,0x10a0ad140,104,DebugBreak2
code-creation,BytecodeHandler,0,17719,0x10a0ad1c0,104,DebugBreak3
code-creation,BytecodeHandler,0,17725,0x10a0ad240,104,DebugBreak4
code-creation,BytecodeHandler,0,17731,0x10a0ad2c0,104,DebugBreak5
code-creation,BytecodeHandler,0,17738,0x10a0ad340,104,DebugBreak6
code-creation,BytecodeHandler,0,17744,0x10a0ad3c0,32,Ldar
code-creation,BytecodeHandler,0,17750,0x10a0ad400,56,LdaZero
code-creation,BytecodeHandler,0,17756,0x10a0ad440,64,LdaSmi
code-creation,BytecodeHandler,0,17763,0x10a0ad4c0,64,LdaUndefined
code-creation,BytecodeHandler,0,17769,0x10a0ad540,64,LdaNull
code-creation,BytecodeHandler,0,17775,0x10a0ad5c0,64,LdaTheHole
code-creation,BytecodeHandler,0,17781,0x10a0ad640,24,LdaTrue
code-creation,BytecodeHandler,0,17788,0x10a0ad680,24,LdaFalse
code-creation,BytecodeHandler,0,17794,0x10a0ad6c0,64,LdaConstant
code-creation,BytecodeHandler,0,17800,0x10a0ad740,144,LdaContextSlot
code-creation,BytecodeHandler,0,17807,0x10a0ad800,144,LdaImmutableContextSlot
code-creation,BytecodeHandler,0,17814,0x10a0ad8c0,72,LdaCurrentContextSlot
code-creation,BytecodeHandler,0,17821,0x10a0ad940,72,LdaImmutableCurrentContextSlot
code-creation,BytecodeHandler,0,17828,0x10a0ad9c0,32,Star
code-creation,BytecodeHandler,0,17834,0x10a0ada00,48,Mov
code-creation,BytecodeHandler,0,17840,0x10a0ada40,40,PushContext
code-creation,BytecodeHandler,0,17846,0x10a0ada80,36,PopContext
code-creation,BytecodeHandler,0,17853,0x10a0adac0,56,TestReferenceEqual
code-creation,BytecodeHandler,0,17860,0x10a0adb00,60,TestUndetectable
code-creation,BytecodeHandler,0,17866,0x10a0adb40,44,TestNull
code-creation,BytecodeHandler,0,17872,0x10a0adb80,44,TestUndefined
code-creation,BytecodeHandler,0,17879,0x10a0adbc0,368,TestTypeOf
code-creation,BytecodeHandler,0,17885,0x10a0add40,5376,LdaGlobal
code-creation,BytecodeHandler,0,17892,0x10a0af280,4176,LdaGlobalInsideTypeof
code-creation,BytecodeHandler,0,17898,0x10a0b0300,160,StaGlobal
code-creation,BytecodeHandler,0,17905,0x10a0b03c0,180,StaContextSlot
code-creation,BytecodeHandler,0,17911,0x10a0b0480,108,StaCurrentContextSlot
code-creation,BytecodeHandler,0,17918,0x10a0b0500,124,LdaLookupSlot
code-creation,BytecodeHandler,0,17924,0x10a0b0580,292,LdaLookupContextSlot
code-creation,BytecodeHandler,0,17931,0x10a0b06c0,4540,LdaLookupGlobalSlot
code-creation,BytecodeHandler,0,17938,0x10a0b1880,124,LdaLookupSlotInsideTypeof
tick,0x7ff8092cbace,17950,0,0x0,6
code-creation,BytecodeHandler,0,17968,0x10a0b1900,292,LdaLookupContextSlotInsideTypeof
code-creation,BytecodeHandler,0,17978,0x10a0b1a40,4432,LdaLookupGlobalSlotInsideTypeof
code-creation,BytecodeHandler,0,17984,0x10a0b2bc0,220,StaLookupSlot
code-creation,BytecodeHandler,0,17989,0x10a0b2cc0,4924,GetNamedProperty
code-creation,BytecodeHandler,0,18001,0x10a0b4000,184,GetNamedPropertyFromSuper
code-creation,BytecodeHandler,0,18007,0x10a0b40c0,200,GetKeyedProperty
code-creation,BytecodeHandler,0,18012,0x10a0b41c0,192,LdaModuleVariable
code-creation,BytecodeHandler,0,18017,0x10a0b42c0,308,StaModuleVariable
code-creation,BytecodeHandler,0,18021,0x10a0b4400,176,SetNamedProperty
code-creation,BytecodeHandler,0,18026,0x10a0b44c0,176,DefineNamedOwnProperty
code-creation,BytecodeHandler,0,18031,0x10a0b4580,168,SetKeyedProperty
code-creation,BytecodeHandler,0,18036,0x10a0b4640,184,DefineKeyedOwnProperty
code-creation,BytecodeHandler,0,18041,0x10a0b4700,168,StaInArrayLiteral
code-creation,BytecodeHandler,0,18046,0x10a0b47c0,200,DefineKeyedOwnPropertyInLiteral
code-creation,BytecodeHandler,0,18051,0x10a0b48c0,1448,Add
code-creation,BytecodeHandler,0,18056,0x10a0b4e80,1420,Sub
code-creation,BytecodeHandler,0,18060,0x10a0b5440,1540,Mul
code-creation,BytecodeHandler,0,18064,0x10a0b5a80,1604,Div
code-creation,BytecodeHandler,0,18068,0x10a0b6100,1552,Mod
code-creation,BytecodeHandler,0,18072,0x10a0b6740,924,Exp
code-creation,BytecodeHandler,0,18076,0x10a0b6b00,1940,BitwiseOr
code-creation,BytecodeHandler,0,18081,0x10a0b72c0,1940,BitwiseXor
code-creation,BytecodeHandler,0,18085,0x10a0b7a80,1940,BitwiseAnd
code-creation,BytecodeHandler,0,18089,0x10a0b8240,1364,ShiftLeft
code-creation,BytecodeHandler,0,18094,0x10a0b87c0,1364,ShiftRight
code-creation,BytecodeHandler,0,18098,0x10a0b8d40,1424,ShiftRightLogical
code-creation,BytecodeHandler,0,18103,0x10a0b9300,1332,AddSmi
code-creation,BytecodeHandler,0,18107,0x10a0b9840,1308,SubSmi
code-creation,BytecodeHandler,0,18112,0x10a0b9d80,1384,MulSmi
code-creation,BytecodeHandler,0,18116,0x10a0ba300,1516,DivSmi
code-creation,BytecodeHandler,0,18120,0x10a0ba900,1380,ModSmi
code-creation,BytecodeHandler,0,18124,0x10a0bae80,812,ExpSmi
code-creation,BytecodeHandler,0,18129,0x10a0bb1c0,560,BitwiseOrSmi
code-creation,BytecodeHandler,0,18133,0x10a0bb400,560,BitwiseXorSmi
code-creation,BytecodeHandler,0,18138,0x10a0bb640,560,BitwiseAndSmi
tick,0x7ff8092cbace,18153,0,0x0,6
code-creation,BytecodeHandler,0,18163,0x10a0bb880,584,ShiftLeftSmi
code-creation,BytecodeHandler,0,18173,0x10a0bbb00,568,ShiftRightSmi
code-creation,BytecodeHandler,0,18178,0x10a0bbd40,856,ShiftRightLogicalSmi
code-creation,BytecodeHandler,0,18183,0x10a0bc0c0,740,Inc
code-creation,BytecodeHandler,0,18189,0x10a0bc3c0,736,Dec
code-creation,BytecodeHandler,0,18193,0x10a0bc6c0,724,Negate
code-creation,BytecodeHandler,0,18197,0x10a0bc9c0,592,BitwiseNot
code-creation,BytecodeHandler,0,18202,0x10a0bcc40,124,ToBooleanLogicalNot
code-creation,BytecodeHandler,0,18207,0x10a0bccc0,44,LogicalNot
code-creation,BytecodeHandler,0,18211,0x10a0bcd00,204,TypeOf
code-creation,BytecodeHandler,0,18215,0x10a0bce00,124,DeletePropertyStrict
code-creation,BytecodeHandler,0,18220,0x10a0bce80,116,DeletePropertySloppy
code-creation,BytecodeHandler,0,18225,0x10a0bcf00,40,GetSuperConstructor
code-creation,BytecodeHandler,0,18230,0x10a0bcf40,380,FindNonDefaultConstructorOrConstruct
code-creation,BytecodeHandler,0,18236,0x10a0bd0c0,1104,CallAnyReceiver
code-creation,BytecodeHandler,0,18241,0x10a0bd540,1104,CallProperty
code-creation,BytecodeHandler,0,18245,0x10a0bd9c0,1032,CallProperty0
code-creation,BytecodeHandler,0,18250,0x10a0bde00,1044,CallProperty1
code-creation,BytecodeHandler,0,18254,0x10a0be240,1056,CallProperty2
code-creation,BytecodeHandler,0,18259,0x10a0be680,1004,CallUndefinedReceiver
code-creation,BytecodeHandler,0,18264,0x10a0bea80,1032,CallUndefinedReceiver0
code-creation,BytecodeHandler,0,18269,0x10a0beec0,1048,CallUndefinedReceiver1
code-creation,BytecodeHandler,0,18274,0x10a0bf300,1064,CallUndefinedReceiver2
code-creation,BytecodeHandler,0,18279,0x10a0bf740,1104,CallWithSpread
code-creation,BytecodeHandler,0,18283,0x10a0bfbc0,128,CallRuntime
code-creation,BytecodeHandler,0,18288,0x10a0bfc80,152,CallRuntimeForPair
code-creation,BytecodeHandler,0,18293,0x10a0bfd40,80,CallJSRuntime
code-creation,BytecodeHandler,0,18297,0x10a0bfdc0,1312,InvokeIntrinsic
code-creation,BytecodeHandler,0,18309,0x10a0c0300,1072,Construct
code-creation,BytecodeHandler,0,18314,0x10a0c0740,496,ConstructWithSpread
code-creation,BytecodeHandler,0,18319,0x10a0c0940,2224,TestEqual
code-creation,BytecodeHandler,0,18323,0x10a0c1200,1328,TestEqualStrict
code-creation,BytecodeHandler,0,18328,0x10a0c1740,1840,TestLessThan
code-creation,BytecodeHandler,0,18333,0x10a0c1e80,1840,TestGreaterThan
code-creation,BytecodeHandler,0,18337,0x10a0c25c0,1840,TestLessThanOrEqual
code-creation,BytecodeHandler,0,18342,0x10a0c2d00,1840,TestGreaterThanOrEqual
code-creation,BytecodeHandler,0,18347,0x10a0c3440,880,TestInstanceOf
code-creation,BytecodeHandler,0,18352,0x10a0c37c0,156,TestIn
code-creation,BytecodeHandler,0,18356,0x10a0c3880,92,ToName
code-creation,BytecodeHandler,0,18360,0x10a0c3900,212,ToNumber
code-creation,BytecodeHandler,0,18365,0x10a0c3a00,236,ToNumeric
code-creation,BytecodeHandler,0,18369,0x10a0c3b00,116,ToObject
code-creation,BytecodeHandler,0,18373,0x10a0c3b80,124,ToString
code-creation,BytecodeHandler,0,18378,0x10a0c3c00,124,ToBoolean
code-creation,BytecodeHandler,0,18382,0x10a0c3c80,396,CreateRegExpLiteral
code-creation,BytecodeHandler,0,18387,0x10a0c3e40,1652,CreateArrayLiteral
code-creation,BytecodeHandler,0,18392,0x10a0c44c0,92,CreateArrayFromIterable
code-creation,BytecodeHandler,0,18397,0x10a0c4540,776,CreateEmptyArrayLiteral
code-creation,BytecodeHandler,0,18402,0x10a0c4880,2648,CreateObjectLiteral
code-creation,BytecodeHandler,0,18407,0x10a0c5300,328,CreateEmptyObjectLiteral
code-creation,BytecodeHandler,0,18412,0x10a0c5480,172,CloneObject
code-creation,BytecodeHandler,0,18417,0x10a0c5540,204,GetTemplateObject
code-creation,BytecodeHandler,0,18421,0x10a0c5640,332,CreateClosure
code-creation,BytecodeHandler,0,18426,0x10a0c57c0,116,CreateBlockContext
code-creation,BytecodeHandler,0,18431,0x10a0c5840,132,CreateCatchContext
code-creation,BytecodeHandler,0,18436,0x10a0c5900,348,CreateFunctionContext
code-creation,BytecodeHandler,0,18441,0x10a0c5a80,348,CreateEvalContext
code-creation,BytecodeHandler,0,18445,0x10a0c5c00,132,CreateWithContext
code-creation,BytecodeHandler,0,18450,0x10a0c5cc0,1680,CreateMappedArguments
code-creation,BytecodeHandler,0,18455,0x10a0c6380,572,CreateUnmappedArguments
code-creation,BytecodeHandler,0,18460,0x10a0c65c0,680,CreateRestParameter
code-creation,BytecodeHandler,0,18466,0x10a0c6880,1140,JumpLoop
code-creation,BytecodeHandler,0,18471,0x10a0c6d00,24,Jump
code-creation,BytecodeHandler,0,18476,0x10a0c6d40,32,JumpConstant
code-creation,BytecodeHandler,0,18481,0x10a0c6d80,56,JumpIfNullConstant
code-creation,BytecodeHandler,0,18486,0x10a0c6dc0,56,JumpIfNotNullConstant
code-creation,BytecodeHandler,0,18491,0x10a0c6e00,56,JumpIfUndefinedConstant
code-creation,BytecodeHandler,0,18496,0x10a0c6e40,56,JumpIfNotUndefinedConstant
code-creation,BytecodeHandler,0,18502,0x10a0c6e80,64,JumpIfUndefinedOrNullConstant
code-creation,BytecodeHandler,0,18508,0x10a0c6f00,56,JumpIfTrueConstant
code-creation,BytecodeHandler,0,18513,0x10a0c6f40,56,JumpIfFalseConstant
code-creation,BytecodeHandler,0,18518,0x10a0c6f80,68,JumpIfJSReceiverConstant
code-creation,BytecodeHandler,0,18523,0x10a0c7000,136,JumpIfToBooleanTrueConstant
code-creation,BytecodeHandler,0,18528,0x10a0c70c0,136,JumpIfToBooleanFalseConstant
code-creation,BytecodeHandler,0,18534,0x10a0c7180,124,JumpIfToBooleanTrue
code-creation,BytecodeHandler,0,18539,0x10a0c7200,124,JumpIfToBooleanFalse
code-creation,BytecodeHandler,0,18544,0x10a0c7280,48,JumpIfTrue
code-creation,BytecodeHandler,0,18549,0x10a0c72c0,48,JumpIfFalse
code-creation,BytecodeHandler,0,18553,0x10a0c7300,48,JumpIfNull
code-creation,BytecodeHandler,0,18558,0x10a0c7340,48,JumpIfNotNull
code-creation,BytecodeHandler,0,18563,0x10a0c7380,48,JumpIfUndefined
code-creation,BytecodeHandler,0,18568,0x10a0c73c0,48,JumpIfNotUndefined
code-creation,BytecodeHandler,0,18573,0x10a0c7400,56,JumpIfUndefinedOrNull
code-creation,BytecodeHandler,0,18578,0x10a0c7440,56,JumpIfJSReceiver
code-creation,BytecodeHandler,0,18583,0x10a0c7480,84,SwitchOnSmiNoFeedback
code-creation,BytecodeHandler,0,18596,0x10a0c7500,476,ForInEnumerate
code-creation,BytecodeHandler,0,18601,0x10a0c7700,240,ForInPrepare
code-creation,BytecodeHandler,0,18605,0x10a0c7800,64,ForInContinue
code-creation,BytecodeHandler,0,18610,0x10a0c7880,252,ForInNext
code-creation,BytecodeHandler,0,18615,0x10a0c7980,48,ForInStep
code-creation,BytecodeHandler,0,18619,0x10a0c79c0,36,SetPendingMessage
code-creation,BytecodeHandler,0,18624,0x10a0c7a00,116,Throw
code-creation,BytecodeHandler,0,18629,0x10a0c7a80,116,ReThrow
code-creation,BytecodeHandler,0,18633,0x10a0c7b00,112,Return
code-creation,BytecodeHandler,0,18638,0x10a0c7b80,188,ThrowReferenceErrorIfHole
code-creation,BytecodeHandler,0,18643,0x10a0c7c40,136,ThrowSuperNotCalledIfHole
code-creation,BytecodeHandler,0,18648,0x10a0c7d00,136,ThrowSuperAlreadyCalledIfNotHole
code-creation,BytecodeHandler,0,18654,0x10a0c7dc0,156,ThrowIfNotSuperConstructor
code-creation,BytecodeHandler,0,18659,0x10a0c7e80,104,SwitchOnGeneratorState
code-creation,BytecodeHandler,0,18665,0x10a0c7f00,528,SuspendGenerator
code-creation,BytecodeHandler,0,18669,0x10a0c8140,152,ResumeGenerator
code-creation,BytecodeHandler,0,18674,0x10a0c8200,164,GetIterator
code-creation,BytecodeHandler,0,18679,0x10a0c82c0,104,Debugger
code-creation,BytecodeHandler,0,18683,0x10a0c8340,124,IncBlockCounter
code-creation,BytecodeHandler,0,18688,0x10a0c83c0,56,Abort
code-creation,BytecodeHandler,0,18693,0x10a0c8400,32,Star0
code-creation,BytecodeHandler,0,18697,0x10a0c8440,60,Illegal
code-creation,BytecodeHandler,0,18702,0x10a0c8480,108,DebugBreak1.Wide
code-creation,BytecodeHandler,0,18707,0x10a0c8500,108,DebugBreak2.Wide
code-creation,BytecodeHandler,0,18712,0x10a0c8580,108,DebugBreak3.Wide
code-creation,BytecodeHandler,0,18717,0x10a0c8600,108,DebugBreak4.Wide
code-creation,BytecodeHandler,0,18722,0x10a0c8680,108,DebugBreak5.Wide
code-creation,BytecodeHandler,0,18727,0x10a0c8700,108,DebugBreak6.Wide
code-creation,BytecodeHandler,0,18732,0x10a0c8780,32,Ldar.Wide
code-creation,BytecodeHandler,0,18737,0x10a0c87c0,32,LdaSmi.Wide
code-creation,BytecodeHandler,0,18742,0x10a0c8800,32,LdaConstant.Wide
code-creation,BytecodeHandler,0,18747,0x10a0c8840,116,LdaContextSlot.Wide
code-creation,BytecodeHandler,0,18752,0x10a0c88c0,116,LdaImmutableContextSlot.Wide
code-creation,BytecodeHandler,0,18758,0x10a0c8940,44,LdaCurrentContextSlot.Wide
code-creation,BytecodeHandler,0,18767,0x10a0c8980,44,LdaImmutableCurrentContextSlot.Wide
code-creation,BytecodeHandler,0,18773,0x10a0c89c0,32,Star.Wide
code-creation,BytecodeHandler,0,18778,0x10a0c8a00,48,Mov.Wide
code-creation,BytecodeHandler,0,18782,0x10a0c8a40,40,PushContext.Wide
code-creation,BytecodeHandler,0,18787,0x10a0c8a80,36,PopContext.Wide
code-creation,BytecodeHandler,0,18792,0x10a0c8ac0,56,TestReferenceEqual.Wide
code-creation,BytecodeHandler,0,18797,0x10a0c8b00,4324,LdaGlobal.Wide
code-creation,BytecodeHandler,0,18802,0x10a0c9c00,4244,LdaGlobalInsideTypeof.Wide
code-creation,BytecodeHandler,0,18807,0x10a0cacc0,164,StaGlobal.Wide
code-creation,BytecodeHandler,0,18812,0x10a0cad80,180,StaContextSlot.Wide
code-creation,BytecodeHandler,0,18817,0x10a0cae40,108,StaCurrentContextSlot.Wide
code-creation,BytecodeHandler,0,18822,0x10a0caec0,128,LdaLookupSlot.Wide
code-creation,BytecodeHandler,0,18827,0x10a0caf80,296,LdaLookupContextSlot.Wide
code-creation,BytecodeHandler,0,18832,0x10a0cb0c0,4560,LdaLookupGlobalSlot.Wide
code-creation,BytecodeHandler,0,18838,0x10a0cc2c0,128,LdaLookupSlotInsideTypeof.Wide
code-creation,BytecodeHandler,0,18843,0x10a0cc380,296,LdaLookupContextSlotInsideTypeof.Wide
code-creation,BytecodeHandler,0,18849,0x10a0cc4c0,4444,LdaLookupGlobalSlotInsideTypeof.Wide
code-creation,BytecodeHandler,0,18855,0x10a0cd640,220,StaLookupSlot.Wide
code-creation,BytecodeHandler,0,18860,0x10a0cd740,4956,GetNamedProperty.Wide
code-creation,BytecodeHandler,0,18865,0x10a0ceac0,192,GetNamedPropertyFromSuper.Wide
code-creation,BytecodeHandler,0,18870,0x10a0cebc0,156,GetKeyedProperty.Wide
code-creation,BytecodeHandler,0,18875,0x10a0cec80,192,LdaModuleVariable.Wide
code-creation,BytecodeHandler,0,18880,0x10a0ced80,312,StaModuleVariable.Wide
code-creation,BytecodeHandler,0,18892,0x10a0ceec0,180,SetNamedProperty.Wide
code-creation,BytecodeHandler,0,18898,0x10a0cef80,180,DefineNamedOwnProperty.Wide
code-creation,BytecodeHandler,0,18903,0x10a0cf040,172,SetKeyedProperty.Wide
code-creation,BytecodeHandler,0,18908,0x10a0cf100,188,DefineKeyedOwnProperty.Wide
code-creation,BytecodeHandler,0,18914,0x10a0cf1c0,172,StaInArrayLiteral.Wide
code-creation,BytecodeHandler,0,18919,0x10a0cf280,204,DefineKeyedOwnPropertyInLiteral.Wide
code-creation,BytecodeHandler,0,18925,0x10a0cf380,1420,Add.Wide
code-creation,BytecodeHandler,0,18929,0x10a0cf940,1392,Sub.Wide
code-creation,BytecodeHandler,0,18933,0x10a0cfec0,1512,Mul.Wide
code-creation,BytecodeHandler,0,18938,0x10a0d04c0,1616,Div.Wide
code-creation,BytecodeHandler,0,18942,0x10a0d0b40,1564,Mod.Wide
code-creation,BytecodeHandler,0,18947,0x10a0d1180,948,Exp.Wide
code-creation,BytecodeHandler,0,18951,0x10a0d1540,2024,BitwiseOr.Wide
code-creation,BytecodeHandler,0,18956,0x10a0d1d40,2024,BitwiseXor.Wide
code-creation,BytecodeHandler,0,18960,0x10a0d2540,2024,BitwiseAnd.Wide
code-creation,BytecodeHandler,0,18965,0x10a0d2d40,1504,ShiftLeft.Wide
code-creation,BytecodeHandler,0,18970,0x10a0d3340,1504,ShiftRight.Wide
code-creation,BytecodeHandler,0,18974,0x10a0d3940,1564,ShiftRightLogical.Wide
code-creation,BytecodeHandler,0,18979,0x10a0d3f80,1312,AddSmi.Wide
code-creation,BytecodeHandler,0,18984,0x10a0d44c0,1284,SubSmi.Wide
code-creation,BytecodeHandler,0,18989,0x10a0d4a00,1396,MulSmi.Wide
code-creation,BytecodeHandler,0,18993,0x10a0d4f80,1532,DivSmi.Wide
code-creation,BytecodeHandler,0,18998,0x10a0d5580,1396,ModSmi.Wide
code-creation,BytecodeHandler,0,19002,0x10a0d5b00,808,ExpSmi.Wide
code-creation,BytecodeHandler,0,19007,0x10a0d5e40,572,BitwiseOrSmi.Wide
code-creation,BytecodeHandler,0,19012,0x10a0d6080,572,BitwiseXorSmi.Wide
code-creation,BytecodeHandler,0,19016,0x10a0d62c0,572,BitwiseAndSmi.Wide
code-creation,BytecodeHandler,0,19021,0x10a0d6500,592,ShiftLeftSmi.Wide
code-creation,BytecodeHandler,0,19026,0x10a0d6780,580,ShiftRightSmi.Wide
code-creation,BytecodeHandler,0,19031,0x10a0d6a00,868,ShiftRightLogicalSmi.Wide
code-creation,BytecodeHandler,0,19036,0x10a0d6d80,712,Inc.Wide
code-creation,BytecodeHandler,0,19040,0x10a0d7080,712,Dec.Wide
code-creation,BytecodeHandler,0,19045,0x10a0d7380,736,Negate.Wide
code-creation,BytecodeHandler,0,19049,0x10a0d7680,612,BitwiseNot.Wide
code-creation,BytecodeHandler,0,19054,0x10a0d7900,128,DeletePropertyStrict.Wide
code-creation,BytecodeHandler,0,19059,0x10a0d79c0,120,DeletePropertySloppy.Wide
code-creation,BytecodeHandler,0,19065,0x10a0d7a40,40,GetSuperConstructor.Wide
code-creation,BytecodeHandler,0,19070,0x10a0d7a80,384,FindNonDefaultConstructorOrConstruct.Wide
code-creation,BytecodeHandler,0,19076,0x10a0d7c40,1104,CallAnyReceiver.Wide
code-creation,BytecodeHandler,0,19081,0x10a0d80c0,1104,CallProperty.Wide
code-creation,BytecodeHandler,0,19086,0x10a0d8540,1032,CallProperty0.Wide
code-creation,BytecodeHandler,0,19091,0x10a0d8980,1044,CallProperty1.Wide
code-creation,BytecodeHandler,0,19096,0x10a0d8dc0,1056,CallProperty2.Wide
code-creation,BytecodeHandler,0,19101,0x10a0d9200,1004,CallUndefinedReceiver.Wide
code-creation,BytecodeHandler,0,19106,0x10a0d9600,1032,CallUndefinedReceiver0.Wide
code-creation,BytecodeHandler,0,19111,0x10a0d9a40,1048,CallUndefinedReceiver1.Wide
code-creation,BytecodeHandler,0,19117,0x10a0d9e80,1064,CallUndefinedReceiver2.Wide
code-creation,BytecodeHandler,0,19122,0x10a0da2c0,1104,CallWithSpread.Wide
code-creation,BytecodeHandler,0,19127,0x10a0da740,132,CallRuntime.Wide
code-creation,BytecodeHandler,0,19132,0x10a0da800,160,CallRuntimeForPair.Wide
code-creation,BytecodeHandler,0,19137,0x10a0da8c0,84,CallJSRuntime.Wide
code-creation,BytecodeHandler,0,19142,0x10a0da940,1376,InvokeIntrinsic.Wide
code-creation,BytecodeHandler,0,19147,0x10a0daec0,1024,Construct.Wide
code-creation,BytecodeHandler,0,19152,0x10a0db300,444,ConstructWithSpread.Wide
code-creation,BytecodeHandler,0,19157,0x10a0db4c0,2256,TestEqual.Wide
code-creation,BytecodeHandler,0,19162,0x10a0dbdc0,1336,TestEqualStrict.Wide
code-creation,BytecodeHandler,0,19173,0x10a0dc300,1816,TestLessThan.Wide
code-creation,BytecodeHandler,0,19178,0x10a0dca40,1816,TestGreaterThan.Wide
code-creation,BytecodeHandler,0,19183,0x10a0dd180,1816,TestLessThanOrEqual.Wide
code-creation,BytecodeHandler,0,19189,0x10a0dd8c0,1816,TestGreaterThanOrEqual.Wide
code-creation,BytecodeHandler,0,19194,0x10a0de000,884,TestInstanceOf.Wide
code-creation,BytecodeHandler,0,19199,0x10a0de380,156,TestIn.Wide
code-creation,BytecodeHandler,0,19204,0x10a0de440,216,ToNumber.Wide
code-creation,BytecodeHandler,0,19208,0x10a0de540,240,ToNumeric.Wide
code-creation,BytecodeHandler,0,19213,0x10a0de640,120,ToObject.Wide
code-creation,BytecodeHandler,0,19218,0x10a0de6c0,400,CreateRegExpLiteral.Wide
code-creation,BytecodeHandler,0,19223,0x10a0de880,1580,CreateArrayLiteral.Wide
code-creation,BytecodeHandler,0,19228,0x10a0deec0,776,CreateEmptyArrayLiteral.Wide
code-creation,BytecodeHandler,0,19234,0x10a0df200,2572,CreateObjectLiteral.Wide
code-creation,BytecodeHandler,0,19239,0x10a0dfc40,176,CloneObject.Wide
code-creation,BytecodeHandler,0,19244,0x10a0dfd00,164,GetTemplateObject.Wide
code-creation,BytecodeHandler,0,19249,0x10a0dfdc0,332,CreateClosure.Wide
code-creation,BytecodeHandler,0,19254,0x10a0dff40,120,CreateBlockContext.Wide
code-creation,BytecodeHandler,0,19259,0x10a0dffc0,136,CreateCatchContext.Wide
code-creation,BytecodeHandler,0,19264,0x10a0e0080,348,CreateFunctionContext.Wide
code-creation,BytecodeHandler,0,19270,0x10a0e0200,348,CreateEvalContext.Wide
code-creation,BytecodeHandler,0,19275,0x10a0e0380,136,CreateWithContext.Wide
code-creation,BytecodeHandler,0,19280,0x10a0e0440,1180,JumpLoop.Wide
code-creation,BytecodeHandler,0,19285,0x10a0e0900,24,Jump.Wide
code-creation,BytecodeHandler,0,19289,0x10a0e0940,32,JumpConstant.Wide
code-creation,BytecodeHandler,0,19294,0x10a0e0980,56,JumpIfNullConstant.Wide
code-creation,BytecodeHandler,0,19299,0x10a0e09c0,56,JumpIfNotNullConstant.Wide
code-creation,BytecodeHandler,0,19304,0x10a0e0a00,56,JumpIfUndefinedConstant.Wide
code-creation,BytecodeHandler,0,19310,0x10a0e0a40,56,JumpIfNotUndefinedConstant.Wide
code-creation,BytecodeHandler,0,19315,0x10a0e0a80,64,JumpIfUndefinedOrNullConstant.Wide
code-creation,BytecodeHandler,0,19321,0x10a0e0b00,56,JumpIfTrueConstant.Wide
code-creation,BytecodeHandler,0,19327,0x10a0e0b40,56,JumpIfFalseConstant.Wide
code-creation,BytecodeHandler,0,19332,0x10a0e0b80,68,JumpIfJSReceiverConstant.Wide
code-creation,BytecodeHandler,0,19337,0x10a0e0c00,136,JumpIfToBooleanTrueConstant.Wide
code-creation,BytecodeHandler,0,19343,0x10a0e0cc0,136,JumpIfToBooleanFalseConstant.Wide
code-creation,BytecodeHandler,0,19349,0x10a0e0d80,124,JumpIfToBooleanTrue.Wide
code-creation,BytecodeHandler,0,19354,0x10a0e0e00,124,JumpIfToBooleanFalse.Wide
code-creation,BytecodeHandler,0,19359,0x10a0e0e80,48,JumpIfTrue.Wide
code-creation,BytecodeHandler,0,19364,0x10a0e0ec0,48,JumpIfFalse.Wide
code-creation,BytecodeHandler,0,19369,0x10a0e0f00,48,JumpIfNull.Wide
code-creation,BytecodeHandler,0,19373,0x10a0e0f40,48,JumpIfNotNull.Wide
code-creation,BytecodeHandler,0,19378,0x10a0e0f80,48,JumpIfUndefined.Wide
code-creation,BytecodeHandler,0,19383,0x10a0e0fc0,48,JumpIfNotUndefined.Wide
code-creation,BytecodeHandler,0,19389,0x10a0e1000,56,JumpIfUndefinedOrNull.Wide
code-creation,BytecodeHandler,0,19394,0x10a0e1040,56,JumpIfJSReceiver.Wide
code-creation,BytecodeHandler,0,19412,0x10a0e1080,84,SwitchOnSmiNoFeedback.Wide
code-creation,BytecodeHandler,0,19420,0x10a0e1100,480,ForInEnumerate.Wide
code-creation,BytecodeHandler,0,19426,0x10a0e1300,240,ForInPrepare.Wide
code-creation,BytecodeHandler,0,19433,0x10a0e1400,64,ForInContinue.Wide
code-creation,BytecodeHandler,0,19440,0x10a0e1480,256,ForInNext.Wide
code-creation,BytecodeHandler,0,19447,0x10a0e15c0,48,ForInStep.Wide
code-creation,BytecodeHandler,0,19454,0x10a0e1600,160,ThrowReferenceErrorIfHole.Wide
code-creation,BytecodeHandler,0,19461,0x10a0e16c0,160,ThrowIfNotSuperConstructor.Wide
code-creation,BytecodeHandler,0,19468,0x10a0e1780,104,SwitchOnGeneratorState.Wide
code-creation,BytecodeHandler,0,19483,0x10a0e1800,528,SuspendGenerator.Wide
code-creation,BytecodeHandler,0,19490,0x10a0e1a40,152,ResumeGenerator.Wide
code-creation,BytecodeHandler,0,19497,0x10a0e1b00,168,GetIterator.Wide
code-creation,BytecodeHandler,0,19504,0x10a0e1bc0,128,IncBlockCounter.Wide
code-creation,BytecodeHandler,0,19511,0x10a0e1c80,56,Abort.Wide
code-creation,BytecodeHandler,0,19517,0x10a0e1cc0,108,DebugBreak1.ExtraWide
code-creation,BytecodeHandler,0,19524,0x10a0e1d40,108,DebugBreak2.ExtraWide
code-creation,BytecodeHandler,0,19531,0x10a0e1dc0,108,DebugBreak3.ExtraWide
code-creation,BytecodeHandler,0,19538,0x10a0e1e40,108,DebugBreak4.ExtraWide
code-creation,BytecodeHandler,0,19545,0x10a0e1ec0,108,DebugBreak5.ExtraWide
code-creation,BytecodeHandler,0,19550,0x10a0e1f40,108,DebugBreak6.ExtraWide
code-creation,BytecodeHandler,0,19557,0x10a0e1fc0,32,Ldar.ExtraWide
code-creation,BytecodeHandler,0,19563,0x10a0e2000,28,LdaSmi.ExtraWide
code-creation,BytecodeHandler,0,19570,0x10a0e2040,32,LdaConstant.ExtraWide
code-creation,BytecodeHandler,0,19577,0x10a0e2080,116,LdaContextSlot.ExtraWide
code-creation,BytecodeHandler,0,19584,0x10a0e2100,116,LdaImmutableContextSlot.ExtraWide
code-creation,BytecodeHandler,0,19592,0x10a0e2180,44,LdaCurrentContextSlot.ExtraWide
code-creation,BytecodeHandler,0,19600,0x10a0e21c0,44,LdaImmutableCurrentContextSlot.ExtraWide
code-creation,BytecodeHandler,0,19607,0x10a0e2200,32,Star.ExtraWide
code-creation,BytecodeHandler,0,19614,0x10a0e2240,44,Mov.ExtraWide
code-creation,BytecodeHandler,0,19621,0x10a0e2280,40,PushContext.ExtraWide
code-creation,BytecodeHandler,0,19627,0x10a0e22c0,36,PopContext.ExtraWide
code-creation,BytecodeHandler,0,19634,0x10a0e2300,52,TestReferenceEqual.ExtraWide
code-creation,BytecodeHandler,0,19642,0x10a0e2340,4316,LdaGlobal.ExtraWide
code-creation,BytecodeHandler,0,19648,0x10a0e3440,4236,LdaGlobalInsideTypeof.ExtraWide
code-creation,BytecodeHandler,0,19657,0x10a0e4500,164,StaGlobal.ExtraWide
code-creation,BytecodeHandler,0,19663,0x10a0e45c0,180,StaContextSlot.ExtraWide
tick,0x10989d31d,19673,0,0x0,6
code-creation,BytecodeHandler,0,19691,0x10a0e4680,104,StaCurrentContextSlot.ExtraWide
code-creation,BytecodeHandler,0,19701,0x10a0e4700,128,LdaLookupSlot.ExtraWide
code-creation,BytecodeHandler,0,19708,0x10a0e47c0,296,LdaLookupContextSlot.ExtraWide
code-creation,BytecodeHandler,0,19713,0x10a0e4900,4548,LdaLookupGlobalSlot.ExtraWide
code-creation,BytecodeHandler,0,19719,0x10a0e5b00,128,LdaLookupSlotInsideTypeof.ExtraWide
code-creation,BytecodeHandler,0,19725,0x10a0e5bc0,296,LdaLookupContextSlotInsideTypeof.ExtraWide
code-creation,BytecodeHandler,0,19732,0x10a0e5d00,4432,LdaLookupGlobalSlotInsideTypeof.ExtraWide
code-creation,BytecodeHandler,0,19738,0x10a0e6e80,220,StaLookupSlot.ExtraWide
code-creation,BytecodeHandler,0,19744,0x10a0e6f80,4944,GetNamedProperty.ExtraWide
code-creation,BytecodeHandler,0,19749,0x10a0e8300,188,GetNamedPropertyFromSuper.ExtraWide
code-creation,BytecodeHandler,0,19755,0x10a0e83c0,156,GetKeyedProperty.ExtraWide
code-creation,BytecodeHandler,0,19760,0x10a0e8480,192,LdaModuleVariable.ExtraWide
code-creation,BytecodeHandler,0,19766,0x10a0e8580,312,StaModuleVariable.ExtraWide
code-creation,BytecodeHandler,0,19771,0x10a0e86c0,176,SetNamedProperty.ExtraWide
code-creation,BytecodeHandler,0,19776,0x10a0e8780,176,DefineNamedOwnProperty.ExtraWide
code-creation,BytecodeHandler,0,19782,0x10a0e8840,168,SetKeyedProperty.ExtraWide
code-creation,BytecodeHandler,0,19787,0x10a0e8900,184,DefineKeyedOwnProperty.ExtraWide
code-creation,BytecodeHandler,0,19793,0x10a0e89c0,168,StaInArrayLiteral.ExtraWide
code-creation,BytecodeHandler,0,19799,0x10a0e8a80,200,DefineKeyedOwnPropertyInLiteral.ExtraWide
code-creation,BytecodeHandler,0,19805,0x10a0e8b80,1416,Add.ExtraWide
code-creation,BytecodeHandler,0,19810,0x10a0e9140,1388,Sub.ExtraWide
code-creation,BytecodeHandler,0,19814,0x10a0e96c0,1508,Mul.ExtraWide
code-creation,BytecodeHandler,0,19819,0x10a0e9cc0,1612,Div.ExtraWide
code-creation,BytecodeHandler,0,19824,0x10a0ea340,1560,Mod.ExtraWide
code-creation,BytecodeHandler,0,19828,0x10a0ea980,944,Exp.ExtraWide
code-creation,BytecodeHandler,0,19843,0x10a0ead40,2020,BitwiseOr.ExtraWide
code-creation,BytecodeHandler,0,19849,0x10a0eb540,2020,BitwiseXor.ExtraWide
code-creation,BytecodeHandler,0,19854,0x10a0ebd40,2020,BitwiseAnd.ExtraWide
code-creation,BytecodeHandler,0,19859,0x10a0ec540,1500,ShiftLeft.ExtraWide
code-creation,BytecodeHandler,0,19864,0x10a0ecb40,1500,ShiftRight.ExtraWide
code-creation,BytecodeHandler,0,19869,0x10a0ed140,1556,ShiftRightLogical.ExtraWide
code-creation,BytecodeHandler,0,19875,0x10a0ed780,1304,AddSmi.ExtraWide
code-creation,BytecodeHandler,0,19879,0x10a0edcc0,1280,SubSmi.ExtraWide
code-creation,BytecodeHandler,0,19884,0x10a0ee200,1392,MulSmi.ExtraWide
code-creation,BytecodeHandler,0,19889,0x10a0ee780,1528,DivSmi.ExtraWide
code-creation,BytecodeHandler,0,19894,0x10a0eed80,1392,ModSmi.ExtraWide
code-creation,BytecodeHandler,0,19898,0x10a0ef300,808,ExpSmi.ExtraWide
code-creation,BytecodeHandler,0,19903,0x10a0ef640,572,BitwiseOrSmi.ExtraWide
code-creation,BytecodeHandler,0,19908,0x10a0ef880,572,BitwiseXorSmi.ExtraWide
code-creation,BytecodeHandler,0,19914,0x10a0efac0,572,BitwiseAndSmi.ExtraWide
code-creation,BytecodeHandler,0,19919,0x10a0efd00,592,ShiftLeftSmi.ExtraWide
code-creation,BytecodeHandler,0,19924,0x10a0eff80,580,ShiftRightSmi.ExtraWide
code-creation,BytecodeHandler,0,19929,0x10a0f0200,864,ShiftRightLogicalSmi.ExtraWide
code-creation,BytecodeHandler,0,19935,0x10a0f0580,712,Inc.ExtraWide
code-creation,BytecodeHandler,0,19939,0x10a0f0880,712,Dec.ExtraWide
code-creation,BytecodeHandler,0,19944,0x10a0f0b80,736,Negate.ExtraWide
code-creation,BytecodeHandler,0,19949,0x10a0f0e80,612,BitwiseNot.ExtraWide
code-creation,BytecodeHandler,0,19954,0x10a0f1100,124,DeletePropertyStrict.ExtraWide
code-creation,BytecodeHandler,0,19959,0x10a0f1180,116,DeletePropertySloppy.ExtraWide
code-creation,BytecodeHandler,0,19965,0x10a0f1200,40,GetSuperConstructor.ExtraWide
code-creation,BytecodeHandler,0,19970,0x10a0f1240,380,FindNonDefaultConstructorOrConstruct.ExtraWide
code-creation,BytecodeHandler,0,19977,0x10a0f13c0,1100,CallAnyReceiver.ExtraWide
code-creation,BytecodeHandler,0,19982,0x10a0f1840,1100,CallProperty.ExtraWide
code-creation,BytecodeHandler,0,19987,0x10a0f1cc0,1028,CallProperty0.ExtraWide
code-creation,BytecodeHandler,0,19992,0x10a0f2100,1040,CallProperty1.ExtraWide
code-creation,BytecodeHandler,0,19997,0x10a0f2540,1052,CallProperty2.ExtraWide
code-creation,BytecodeHandler,0,20003,0x10a0f2980,1004,CallUndefinedReceiver.ExtraWide
code-creation,BytecodeHandler,0,20008,0x10a0f2d80,1032,CallUndefinedReceiver0.ExtraWide
code-creation,BytecodeHandler,0,20014,0x10a0f31c0,1048,CallUndefinedReceiver1.ExtraWide
code-creation,BytecodeHandler,0,20019,0x10a0f3600,1060,CallUndefinedReceiver2.ExtraWide
code-creation,BytecodeHandler,0,20025,0x10a0f3a40,1100,CallWithSpread.ExtraWide
code-creation,BytecodeHandler,0,20030,0x10a0f3ec0,128,CallRuntime.ExtraWide
code-creation,BytecodeHandler,0,20035,0x10a0f3f80,156,CallRuntimeForPair.ExtraWide
code-creation,BytecodeHandler,0,20041,0x10a0f4040,80,CallJSRuntime.ExtraWide
code-creation,BytecodeHandler,0,20046,0x10a0f40c0,1376,InvokeIntrinsic.ExtraWide
code-creation,BytecodeHandler,0,20051,0x10a0f4640,1024,Construct.ExtraWide
code-creation,BytecodeHandler,0,20056,0x10a0f4a80,440,ConstructWithSpread.ExtraWide
code-creation,BytecodeHandler,0,20062,0x10a0f4c40,2256,TestEqual.ExtraWide
code-creation,BytecodeHandler,0,20067,0x10a0f5540,1336,TestEqualStrict.ExtraWide
code-creation,BytecodeHandler,0,20072,0x10a0f5a80,1816,TestLessThan.ExtraWide
code-creation,BytecodeHandler,0,20077,0x10a0f61c0,1816,TestGreaterThan.ExtraWide
code-creation,BytecodeHandler,0,20082,0x10a0f6900,1816,TestLessThanOrEqual.ExtraWide
code-creation,BytecodeHandler,0,20088,0x10a0f7040,1816,TestGreaterThanOrEqual.ExtraWide
code-creation,BytecodeHandler,0,20093,0x10a0f7780,884,TestInstanceOf.ExtraWide
code-creation,BytecodeHandler,0,20099,0x10a0f7b00,156,TestIn.ExtraWide
code-creation,BytecodeHandler,0,20103,0x10a0f7bc0,216,ToNumber.ExtraWide
code-creation,BytecodeHandler,0,20109,0x10a0f7cc0,240,ToNumeric.ExtraWide
code-creation,BytecodeHandler,0,20125,0x10a0f7dc0,116,ToObject.ExtraWide
code-creation,BytecodeHandler,0,20131,0x10a0f7e40,396,CreateRegExpLiteral.ExtraWide
code-creation,BytecodeHandler,0,20136,0x10a0f8000,1576,CreateArrayLiteral.ExtraWide
code-creation,BytecodeHandler,0,20142,0x10a0f8640,776,CreateEmptyArrayLiteral.ExtraWide
code-creation,BytecodeHandler,0,20148,0x10a0f8980,2508,CreateObjectLiteral.ExtraWide
code-creation,BytecodeHandler,0,20153,0x10a0f9380,172,CloneObject.ExtraWide
code-creation,BytecodeHandler,0,20158,0x10a0f9440,164,GetTemplateObject.ExtraWide
code-creation,BytecodeHandler,0,20164,0x10a0f9500,328,CreateClosure.ExtraWide
code-creation,BytecodeHandler,0,20169,0x10a0f9680,120,CreateBlockContext.ExtraWide
code-creation,BytecodeHandler,0,20174,0x10a0f9700,132,CreateCatchContext.ExtraWide
code-creation,BytecodeHandler,0,20180,0x10a0f97c0,348,CreateFunctionContext.ExtraWide
code-creation,BytecodeHandler,0,20185,0x10a0f9940,348,CreateEvalContext.ExtraWide
code-creation,BytecodeHandler,0,20191,0x10a0f9ac0,132,CreateWithContext.ExtraWide
code-creation,BytecodeHandler,0,20196,0x10a0f9b80,1176,JumpLoop.ExtraWide
code-creation,BytecodeHandler,0,20201,0x10a0fa040,20,Jump.ExtraWide
code-creation,BytecodeHandler,0,20206,0x10a0fa080,32,JumpConstant.ExtraWide
code-creation,BytecodeHandler,0,20211,0x10a0fa0c0,56,JumpIfNullConstant.ExtraWide
code-creation,BytecodeHandler,0,20217,0x10a0fa100,56,JumpIfNotNullConstant.ExtraWide
code-creation,BytecodeHandler,0,20222,0x10a0fa140,56,JumpIfUndefinedConstant.ExtraWide
code-creation,BytecodeHandler,0,20228,0x10a0fa180,56,JumpIfNotUndefinedConstant.ExtraWide
code-creation,BytecodeHandler,0,20234,0x10a0fa1c0,64,JumpIfUndefinedOrNullConstant.ExtraWide
code-creation,BytecodeHandler,0,20240,0x10a0fa240,56,JumpIfTrueConstant.ExtraWide
code-creation,BytecodeHandler,0,20245,0x10a0fa280,56,JumpIfFalseConstant.ExtraWide
code-creation,BytecodeHandler,0,20251,0x10a0fa2c0,68,JumpIfJSReceiverConstant.ExtraWide
code-creation,BytecodeHandler,0,20257,0x10a0fa340,136,JumpIfToBooleanTrueConstant.ExtraWide
code-creation,BytecodeHandler,0,20263,0x10a0fa400,136,JumpIfToBooleanFalseConstant.ExtraWide
code-creation,BytecodeHandler,0,20269,0x10a0fa4c0,124,JumpIfToBooleanTrue.ExtraWide
code-creation,BytecodeHandler,0,20274,0x10a0fa540,124,JumpIfToBooleanFalse.ExtraWide
code-creation,BytecodeHandler,0,20279,0x10a0fa5c0,44,JumpIfTrue.ExtraWide
code-creation,BytecodeHandler,0,20284,0x10a0fa600,44,JumpIfFalse.ExtraWide
code-creation,BytecodeHandler,0,20290,0x10a0fa640,44,JumpIfNull.ExtraWide
code-creation,BytecodeHandler,0,20295,0x10a0fa680,44,JumpIfNotNull.ExtraWide
code-creation,BytecodeHandler,0,20300,0x10a0fa6c0,44,JumpIfUndefined.ExtraWide
code-creation,BytecodeHandler,0,20305,0x10a0fa700,44,JumpIfNotUndefined.ExtraWide
code-creation,BytecodeHandler,0,20311,0x10a0fa740,56,JumpIfUndefinedOrNull.ExtraWide
code-creation,BytecodeHandler,0,20316,0x10a0fa780,56,JumpIfJSReceiver.ExtraWide
code-creation,BytecodeHandler,0,20321,0x10a0fa7c0,80,SwitchOnSmiNoFeedback.ExtraWide
code-creation,BytecodeHandler,0,20327,0x10a0fa840,480,ForInEnumerate.ExtraWide
code-creation,BytecodeHandler,0,20332,0x10a0faa40,240,ForInPrepare.ExtraWide
code-creation,BytecodeHandler,0,20337,0x10a0fab40,64,ForInContinue.ExtraWide
code-creation,BytecodeHandler,0,20342,0x10a0fabc0,252,ForInNext.ExtraWide
code-creation,BytecodeHandler,0,20347,0x10a0facc0,44,ForInStep.ExtraWide
code-creation,BytecodeHandler,0,20352,0x10a0fad00,160,ThrowReferenceErrorIfHole.ExtraWide
code-creation,BytecodeHandler,0,20358,0x10a0fadc0,160,ThrowIfNotSuperConstructor.ExtraWide
code-creation,BytecodeHandler,0,20364,0x10a0fae80,100,SwitchOnGeneratorState.ExtraWide
code-creation,BytecodeHandler,0,20370,0x10a0faf00,528,SuspendGenerator.ExtraWide
code-creation,BytecodeHandler,0,20375,0x10a0fb140,152,ResumeGenerator.ExtraWide
code-creation,BytecodeHandler,0,20381,0x10a0fb200,164,GetIterator.ExtraWide
code-creation,BytecodeHandler,0,20386,0x10a0fb2c0,124,IncBlockCounter.ExtraWide
code-creation,BytecodeHandler,0,20391,0x10a0fb340,56,Abort.ExtraWide
tick,0x109700ee0,20663,0,0x0,6
new,MemoryChunk,0x72cb0c0000,262144
new,MemoryChunk,0x72ce900000,262144
tick,0x109bdee65,21716,0,0x0,5
new,MemoryChunk,0x723a740000,262144
new,MemoryChunk,0x7258600000,262144
new,MemoryChunk,0x723b700000,262144
tick,0x7ff8092cad32,23000,0,0x0,1
tick,0x10973c1db,24045,0,0x0,5
tick,0x7ff8092cb5ce,25084,0,0x0,6
code-creation,Eval,10,25597,0x723b73f89c,5, node:internal/main/run_main_module:1:1,0x723b73f748,~
script-source,80,node:internal/main/run_main_module,'use strict';\n\nconst { RegExpPrototypeExec } = primordials;\n\nconst {\n  prepareMainThreadExecution\x2C\n  markBootstrapComplete\x2C\n} = require('internal/process/pre_execution');\nconst { getOptionValue } = require('internal/options');\n\nconst mainEntry = prepareMainThreadExecution(true);\n\nmarkBootstrapComplete();\n\n// Necessary to reset RegExp statics before user code runs.\nRegExpPrototypeExec(/^/\x2C '');\n\nif (getOptionValue('--experimental-default-type') === 'module') {\n  require('internal/modules/run_main').executeUserEntryPoint(mainEntry);\n} else {\n  /**\n   * To support legacy monkey-patching of `Module.runMain`\x2C we call `runMain` here to have the CommonJS loader begin\n   * the execution of the main entry point\x2C even if the ESM loader immediately takes over because the main entry is an\n   * ES module or one of the other opt-in conditions (such as the use of `--import`) are met. Users can monkey-patch\n   * before the main entry point is loaded by doing so via scripts loaded through `--require`. This monkey-patchability\n   * is undesirable and is removed in `--experimental-default-type=module` mode.\n   */\n  require('internal/modules/cjs/loader').Module.runMain(mainEntry);\n}\n
code-source-info,0x723b73f89c,80,0,1182,C0O0C4O1182,,
code-creation,JS,10,25695,0x723b73f98c,120, node:internal/main/run_main_module:1:1,0x723b73f810,~
code-source-info,0x723b73f98c,80,0,1182,C0O23C5O128C8O128C13O71C18O101C23O198C26O198C31O179C36O246C38O246C43O281C46O367C55O367C60O398C63O402C70O448C75O466C78O466C83O502C88O503C95O1114C98O1114C103O1152C108O1159C113O1160C119O1181,,
new,MemoryChunk,0x72b2100000,262144
code-creation,JS,10,26059,0x723b73feec,45,prepareMainThreadExecution node:internal/process/pre_execution:54:36,0x72e2eb9a18,~
script-source,67,node:internal/process/pre_execution,'use strict';\n\nconst {\n  ArrayPrototypeForEach\x2C\n  Date\x2C\n  DatePrototypeGetDate\x2C\n  DatePrototypeGetFullYear\x2C\n  DatePrototypeGetHours\x2C\n  DatePrototypeGetMinutes\x2C\n  DatePrototypeGetMonth\x2C\n  DatePrototypeGetSeconds\x2C\n  NumberParseInt\x2C\n  ObjectDefineProperties\x2C\n  ObjectDefineProperty\x2C\n  ObjectGetOwnPropertyDescriptor\x2C\n  SafeMap\x2C\n  String\x2C\n  StringPrototypeStartsWith\x2C\n  Symbol\x2C\n  SymbolAsyncDispose\x2C\n  SymbolDispose\x2C\n  globalThis\x2C\n} = primordials;\n\nconst {\n  getOptionValue\x2C\n  refreshOptions\x2C\n  getEmbedderOptions\x2C\n} = require('internal/options');\nconst { reconnectZeroFillToggle } = require('internal/buffer');\nconst {\n  defineOperation\x2C\n  exposeInterface\x2C\n  exposeLazyInterfaces\x2C\n  defineReplaceableLazyAttribute\x2C\n  setupCoverageHooks\x2C\n} = require('internal/util');\n\nconst {\n  ERR_INVALID_THIS\x2C\n  ERR_MANIFEST_ASSERT_INTEGRITY\x2C\n  ERR_NO_CRYPTO\x2C\n  ERR_MISSING_OPTION\x2C\n  ERR_ACCESS_DENIED\x2C\n} = require('internal/errors').codes;\nconst assert = require('internal/assert');\nconst {\n  namespace: {\n    addSerializeCallback\x2C\n    isBuildingSnapshot\x2C\n  }\x2C\n} = require('internal/v8/startup_snapshot');\n\nfunction prepareMainThreadExecution(expandArgv1 = false\x2C initializeModules = true) {\n  return prepareExecution({\n    expandArgv1\x2C\n    initializeModules\x2C\n    isMainThread: true\x2C\n  });\n}\n\nfunction prepareWorkerThreadExecution() {\n  prepareExecution({\n    expandArgv1: false\x2C\n    initializeModules: false\x2C  // Will need to initialize it after policy setup\n    isMainThread: false\x2C\n  });\n}\n\nfunction prepareShadowRealmExecution() {\n  const { registerRealm } = require('internal/modules/esm/utils');\n  // Patch the process object with legacy properties and normalizations.\n  // Do not expand argv1 as it is not available in ShadowRealm.\n  patchProcessObject(false);\n  setupDebugEnv();\n\n  // Disable custom loaders in ShadowRealm.\n  setupUserModules(true);\n  registerRealm(globalThis\x2C {\n    __proto__: null\x2C\n    importModuleDynamically: (specifier\x2C _referrer\x2C attributes) => {\n      // The handler for `ShadowRealm.prototype.importValue`.\n      const { esmLoader } = require('internal/process/esm_loader');\n      // `parentURL` is not set in the case of a ShadowRealm top-level import.\n      return esmLoader.import(specifier\x2C undefined\x2C attributes);\n    }\x2C\n  });\n}\n\nfunction prepareExecution(options) {\n  const { expandArgv1\x2C initializeModules\x2C isMainThread } = options;\n\n  refreshRuntimeOptions();\n  reconnectZeroFillToggle();\n\n  // Patch the process object and get the resolved main entry point.\n  const mainEntry = patchProcessObject(expandArgv1);\n  setupTraceCategoryState();\n  setupInspectorHooks();\n  setupNavigator();\n  setupWarningHandler();\n  setupUndici();\n  setupWebCrypto();\n  setupCustomEvent();\n  setupCodeCoverage();\n  setupDebugEnv();\n  // Process initial diagnostic reporting configuration\x2C if present.\n  initializeReport();\n\n  // Load permission system API\n  initializePermission();\n\n  initializeSourceMapsHandlers();\n  initializeDeprecations();\n\n  require('internal/dns/utils').initializeDns();\n\n  setupSymbolDisposePolyfill();\n\n  if (isMainThread) {\n    assert(internalBinding('worker').isMainThread);\n    // Worker threads will get the manifest in the message handler.\n    const policy = readPolicyFromDisk();\n    if (policy) {\n      require('internal/process/policy')\n        .setup(policy.manifestSrc\x2C policy.manifestURL);\n    }\n\n    // Print stack trace on `SIGINT` if option `--trace-sigint` presents.\n    setupStacktracePrinterOnSigint();\n    initializeReportSignalHandlers();  // Main-thread-only.\n    initializeHeapSnapshotSignalHandlers();\n    // If the process is spawned with env NODE_CHANNEL_FD\x2C it's probably\n    // spawned by our child_process module\x2C then initialize IPC.\n    // This attaches some internal event listeners and creates:\n    // process.send()\x2C process.channel\x2C process.connected\x2C\n    // process.disconnect().\n    setupChildProcessIpcChannel();\n    // If this is a worker in cluster mode\x2C start up the communication\n    // channel. This needs to be done before any user code gets executed\n    // (including preload modules).\n    initializeClusterIPC();\n\n    // TODO(joyeecheung): do this for worker threads as well.\n    require('internal/v8/startup_snapshot').runDeserializeCallbacks();\n  } else {\n    assert(!internalBinding('worker').isMainThread);\n    // The setup should be called in LOAD_SCRIPT message handler.\n    assert(!initializeModules);\n  }\n\n  if (initializeModules) {\n    setupUserModules();\n  }\n\n  return mainEntry;\n}\n\nfunction setupSymbolDisposePolyfill() {\n  // TODO(MoLow): Remove this polyfill once Symbol.dispose and Symbol.asyncDispose are available in V8.\n  // eslint-disable-next-line node-core/prefer-primordials\n  if (typeof Symbol.dispose !== 'symbol') {\n    ObjectDefineProperty(Symbol\x2C 'dispose'\x2C {\n      __proto__: null\x2C\n      configurable: false\x2C\n      enumerable: false\x2C\n      value: SymbolDispose\x2C\n      writable: false\x2C\n    });\n  }\n\n  // eslint-disable-next-line node-core/prefer-primordials\n  if (typeof Symbol.asyncDispose !== 'symbol') {\n    ObjectDefineProperty(Symbol\x2C 'asyncDispose'\x2C {\n      __proto__: null\x2C\n      configurable: false\x2C\n      enumerable: false\x2C\n      value: SymbolAsyncDispose\x2C\n      writable: false\x2C\n    });\n  }\n}\n\nfunction setupUserModules(forceDefaultLoader = false) {\n  initializeCJSLoader();\n  initializeESMLoader(forceDefaultLoader);\n  const CJSLoader = require('internal/modules/cjs/loader');\n  assert(!CJSLoader.hasLoadedAnyUserCJSModule);\n  // Do not enable preload modules if custom loaders are disabled.\n  // For example\x2C loader workers are responsible for doing this themselves.\n  // And preload modules are not supported in ShadowRealm as well.\n  if (!forceDefaultLoader) {\n    loadPreloadModules();\n  }\n  // Need to be done after --require setup.\n  initializeFrozenIntrinsics();\n}\n\nfunction refreshRuntimeOptions() {\n  refreshOptions();\n}\n\n/**\n * Patch the process object with legacy properties and normalizations.\n * Replace `process.argv[0]` with `process.execPath`\x2C preserving the original `argv[0]` value as `process.argv0`.\n * Replace `process.argv[1]` with the resolved absolute file path of the entry point\x2C if found.\n * @param {boolean} expandArgv1 - Whether to replace `process.argv[1]` with the resolved absolute file path of\n * the main entry point.\n */\nfunction patchProcessObject(expandArgv1) {\n  const binding = internalBinding('process_methods');\n  binding.patchProcessObject(process);\n\n  require('internal/process/per_thread').refreshHrtimeBuffer();\n\n  // Since we replace process.argv[0] below\x2C preserve the original value in case the user needs it.\n  ObjectDefineProperty(process\x2C 'argv0'\x2C {\n    __proto__: null\x2C\n    enumerable: true\x2C\n    // Only set it to true during snapshot building.\n    configurable: isBuildingSnapshot()\x2C\n    value: process.argv[0]\x2C\n  });\n\n  process.exitCode = undefined;\n  process._exiting = false;\n  process.argv[0] = process.execPath;\n\n  /** @type {string} */\n  let mainEntry;\n  // If requested\x2C update process.argv[1] to replace whatever the user provided with the resolved absolute file path of\n  // the entry point.\n  if (expandArgv1 && process.argv[1] &&\n      !StringPrototypeStartsWith(process.argv[1]\x2C '-')) {\n    // Expand process.argv[1] into a full path.\n    const path = require('path');\n    try {\n      mainEntry = path.resolve(process.argv[1]);\n      process.argv[1] = mainEntry;\n    } catch {\n      // Continue regardless of error.\n    }\n  }\n\n  // We need to initialize the global console here again with process.stdout\n  // and friends for snapshot deserialization.\n  const globalConsole = require('internal/console/global');\n  const { initializeGlobalConsole } = require('internal/console/constructor');\n  initializeGlobalConsole(globalConsole);\n\n  // TODO(joyeecheung): most of these should be deprecated and removed\x2C\n  // except some that we need to be able to mutate during run time.\n  addReadOnlyProcessAlias('_eval'\x2C '--eval');\n  addReadOnlyProcessAlias('_print_eval'\x2C '--print');\n  addReadOnlyProcessAlias('_syntax_check_only'\x2C '--check');\n  addReadOnlyProcessAlias('_forceRepl'\x2C '--interactive');\n  addReadOnlyProcessAlias('_preload_modules'\x2C '--require');\n  addReadOnlyProcessAlias('noDeprecation'\x2C '--no-deprecation');\n  addReadOnlyProcessAlias('noProcessWarnings'\x2C '--no-warnings');\n  addReadOnlyProcessAlias('traceProcessWarnings'\x2C '--trace-warnings');\n  addReadOnlyProcessAlias('throwDeprecation'\x2C '--throw-deprecation');\n  addReadOnlyProcessAlias('profProcess'\x2C '--prof-process');\n  addReadOnlyProcessAlias('traceDeprecation'\x2C '--trace-deprecation');\n  addReadOnlyProcessAlias('_breakFirstLine'\x2C '--inspect-brk'\x2C false);\n  addReadOnlyProcessAlias('_breakNodeFirstLine'\x2C '--inspect-brk-node'\x2C false);\n\n  return mainEntry;\n}\n\nfunction addReadOnlyProcessAlias(name\x2C option\x2C enumerable = true) {\n  const value = getOptionValue(option);\n  if (value) {\n    ObjectDefineProperty(process\x2C name\x2C {\n      __proto__: null\x2C\n      writable: false\x2C\n      configurable: true\x2C\n      enumerable\x2C\n      value\x2C\n    });\n  }\n}\n\nfunction setupWarningHandler() {\n  const {\n    onWarning\x2C\n    resetForSerialization\x2C\n  } = require('internal/process/warning');\n  if (getOptionValue('--warnings') &&\n    process.env.NODE_NO_WARNINGS !== '1') {\n    process.on('warning'\x2C onWarning);\n\n    // The code above would add the listener back during deserialization\x2C\n    // if applicable.\n    if (isBuildingSnapshot()) {\n      addSerializeCallback(() => {\n        process.removeListener('warning'\x2C onWarning);\n        resetForSerialization();\n      });\n    }\n  }\n}\n\n// https://fetch.spec.whatwg.org/\n// https://websockets.spec.whatwg.org/\nfunction setupUndici() {\n  if (getEmbedderOptions().noBrowserGlobals) {\n    return;\n  }\n\n  let undici;\n  function lazyUndici() {\n    if (undici) {\n      return undici;\n    }\n\n    undici = require('internal/deps/undici/undici');\n    return undici;\n  }\n\n  function lazyInterface(name) {\n    return {\n      configurable: true\x2C\n      enumerable: false\x2C\n      get() {\n        return lazyUndici()[name];\n      }\x2C\n      set(value) {\n        exposeInterface(globalThis\x2C name\x2C value);\n      }\x2C\n    };\n  }\n\n  if (!getOptionValue('--no-experimental-fetch')) {\n    // Fetch is meant to return a Promise\x2C but not be async.\n    function fetch(input\x2C init = undefined) {\n      return lazyUndici().fetch(input\x2C init);\n    }\n\n    defineOperation(globalThis\x2C 'fetch'\x2C fetch);\n\n    ObjectDefineProperties(globalThis\x2C {\n      FormData: lazyInterface('FormData')\x2C\n      Headers: lazyInterface('Headers')\x2C\n      Request: lazyInterface('Request')\x2C\n      Response: lazyInterface('Response')\x2C\n    });\n\n    // The WebAssembly Web API: https://webassembly.github.io/spec/web-api\n    internalBinding('wasm_web_api').setImplementation((streamState\x2C source) => {\n      require('internal/wasm_web_api').wasmStreamingCallback(streamState\x2C source);\n    });\n  }\n\n  if (getOptionValue('--experimental-websocket')) {\n    ObjectDefineProperties(globalThis\x2C {\n      WebSocket: lazyInterface('WebSocket')\x2C\n    });\n  }\n}\n\n// TODO(aduh95): move this to internal/bootstrap/web/* when the CLI flag is\n//               removed.\nfunction setupNavigator() {\n  if (getEmbedderOptions().noBrowserGlobals ||\n      getOptionValue('--no-experimental-global-navigator')) {\n    return;\n  }\n\n  // https://html.spec.whatwg.org/multipage/system-state.html#the-navigator-object\n  exposeLazyInterfaces(globalThis\x2C 'internal/navigator'\x2C ['Navigator']);\n  defineReplaceableLazyAttribute(globalThis\x2C 'internal/navigator'\x2C ['navigator']\x2C false);\n}\n\n// TODO(aduh95): move this to internal/bootstrap/web/* when the CLI flag is\n//               removed.\nfunction setupWebCrypto() {\n  if (getEmbedderOptions().noBrowserGlobals ||\n      getOptionValue('--no-experimental-global-webcrypto')) {\n    return;\n  }\n\n  if (internalBinding('config').hasOpenSSL) {\n    defineReplaceableLazyAttribute(\n      globalThis\x2C\n      'internal/crypto/webcrypto'\x2C\n      ['crypto']\x2C\n      false\x2C\n      function cryptoThisCheck() {\n        if (this !== globalThis && this != null)\n          throw new ERR_INVALID_THIS(\n            'nullish or must be the global object');\n      }\x2C\n    );\n    exposeLazyInterfaces(\n      globalThis\x2C 'internal/crypto/webcrypto'\x2C\n      ['Crypto'\x2C 'CryptoKey'\x2C 'SubtleCrypto']\x2C\n    );\n  } else {\n    ObjectDefineProperty(globalThis\x2C 'crypto'\x2C\n                         { __proto__: null\x2C ...ObjectGetOwnPropertyDescriptor({\n                           get crypto() {\n                             throw new ERR_NO_CRYPTO();\n                           }\x2C\n                         }\x2C 'crypto') });\n\n  }\n}\n\nfunction setupCodeCoverage() {\n  // Resolve the coverage directory to an absolute path\x2C and\n  // overwrite process.env so that the original path gets passed\n  // to child processes even when they switch cwd. Don't do anything if the\n  // --experimental-test-coverage flag is present\x2C as the test runner will\n  // handle coverage.\n  if (process.env.NODE_V8_COVERAGE &&\n      !getOptionValue('--experimental-test-coverage')) {\n    process.env.NODE_V8_COVERAGE =\n      setupCoverageHooks(process.env.NODE_V8_COVERAGE);\n  }\n}\n\n// TODO(daeyeon): move this to internal/bootstrap/web/* when the CLI flag is\n//                removed.\nfunction setupCustomEvent() {\n  if (getEmbedderOptions().noBrowserGlobals ||\n      getOptionValue('--no-experimental-global-customevent')) {\n    return;\n  }\n  const { CustomEvent } = require('internal/event_target');\n  exposeInterface(globalThis\x2C 'CustomEvent'\x2C CustomEvent);\n}\n\nfunction setupStacktracePrinterOnSigint() {\n  if (!getOptionValue('--trace-sigint')) {\n    return;\n  }\n  const { SigintWatchdog } = require('internal/watchdog');\n\n  const watchdog = new SigintWatchdog();\n  watchdog.start();\n}\n\nfunction initializeReport() {\n  ObjectDefineProperty(process\x2C 'report'\x2C {\n    __proto__: null\x2C\n    enumerable: true\x2C\n    configurable: true\x2C\n    get() {\n      const { report } = require('internal/process/report');\n      return report;\n    }\x2C\n  });\n}\n\nfunction setupDebugEnv() {\n  require('internal/util/debuglog').initializeDebugEnv(process.env.NODE_DEBUG);\n  if (getOptionValue('--expose-internals')) {\n    require('internal/bootstrap/realm').BuiltinModule.exposeInternals();\n  }\n}\n\n// This has to be called after initializeReport() is called\nfunction initializeReportSignalHandlers() {\n  if (getOptionValue('--report-on-signal')) {\n    const { addSignalHandler } = require('internal/process/report');\n    addSignalHandler();\n  }\n}\n\nfunction initializeHeapSnapshotSignalHandlers() {\n  const signal = getOptionValue('--heapsnapshot-signal');\n  const diagnosticDir = getOptionValue('--diagnostic-dir');\n\n  if (!signal)\n    return;\n\n  require('internal/validators').validateSignalName(signal);\n  const { writeHeapSnapshot } = require('v8');\n\n  function doWriteHeapSnapshot() {\n    const heapSnapshotFilename = getHeapSnapshotFilename(diagnosticDir);\n    writeHeapSnapshot(heapSnapshotFilename);\n  }\n  process.on(signal\x2C doWriteHeapSnapshot);\n\n  // The code above would add the listener back during deserialization\x2C\n  // if applicable.\n  if (isBuildingSnapshot()) {\n    addSerializeCallback(() => {\n      process.removeListener(signal\x2C doWriteHeapSnapshot);\n    });\n  }\n}\n\nfunction setupTraceCategoryState() {\n  const { isTraceCategoryEnabled } = internalBinding('trace_events');\n  const { toggleTraceCategoryState } = require('internal/process/per_thread');\n  toggleTraceCategoryState(isTraceCategoryEnabled('node.async_hooks'));\n}\n\nfunction setupInspectorHooks() {\n  // If Debugger.setAsyncCallStackDepth is sent during bootstrap\x2C\n  // we cannot immediately call into JS to enable the hooks\x2C which could\n  // interrupt the JS execution of bootstrap. So instead we save the\n  // notification in the inspector agent if it's sent in the middle of\n  // bootstrap\x2C and process the notification later here.\n  if (internalBinding('config').hasInspector) {\n    const {\n      enable\x2C\n      disable\x2C\n    } = require('internal/inspector_async_hook');\n    internalBinding('inspector').registerAsyncHook(enable\x2C disable);\n  }\n}\n\n// In general deprecations are initialized wherever the APIs are implemented\x2C\n// this is used to deprecate APIs implemented in C++ where the deprecation\n// utilities are not easily accessible.\nfunction initializeDeprecations() {\n  const { deprecate } = require('internal/util');\n  const pendingDeprecation = getOptionValue('--pending-deprecation');\n\n  // DEP0103: access to `process.binding('util').isX` type checkers\n  // TODO(addaleax): Turn into a full runtime deprecation.\n  const utilBinding = internalBinding('util');\n  const types = require('internal/util/types');\n  for (const name of [\n    'isArrayBuffer'\x2C\n    'isArrayBufferView'\x2C\n    'isAsyncFunction'\x2C\n    'isDataView'\x2C\n    'isDate'\x2C\n    'isExternal'\x2C\n    'isMap'\x2C\n    'isMapIterator'\x2C\n    'isNativeError'\x2C\n    'isPromise'\x2C\n    'isRegExp'\x2C\n    'isSet'\x2C\n    'isSetIterator'\x2C\n    'isTypedArray'\x2C\n    'isUint8Array'\x2C\n    'isAnyArrayBuffer'\x2C\n  ]) {\n    utilBinding[name] = pendingDeprecation ?\n      deprecate(types[name]\x2C\n                'Accessing native typechecking bindings of Node ' +\n                'directly is deprecated. ' +\n                `Please use \\`util.types.${name}\\` instead.`\x2C\n                'DEP0103') :\n      types[name];\n  }\n\n  // TODO(joyeecheung): this is a legacy property exposed to process.\n  // Now that we use the config binding to carry this information\x2C remove\n  // it from the process. We may consider exposing it properly in\n  // process.features.\n  const { noBrowserGlobals } = internalBinding('config');\n  if (noBrowserGlobals) {\n    ObjectDefineProperty(process\x2C '_noBrowserGlobals'\x2C {\n      __proto__: null\x2C\n      writable: false\x2C\n      enumerable: true\x2C\n      configurable: true\x2C\n      value: noBrowserGlobals\x2C\n    });\n  }\n\n  if (pendingDeprecation) {\n    process.binding = deprecate(process.binding\x2C\n                                'process.binding() is deprecated. ' +\n                                'Please use public APIs instead.'\x2C 'DEP0111');\n\n    process._tickCallback = deprecate(process._tickCallback\x2C\n                                      'process._tickCallback() is deprecated'\x2C\n                                      'DEP0134');\n  }\n}\n\nfunction setupChildProcessIpcChannel() {\n  if (process.env.NODE_CHANNEL_FD) {\n    const assert = require('internal/assert');\n\n    const fd = NumberParseInt(process.env.NODE_CHANNEL_FD\x2C 10);\n    assert(fd >= 0);\n\n    // Make sure it's not accidentally inherited by child processes.\n    delete process.env.NODE_CHANNEL_FD;\n\n    const serializationMode =\n      process.env.NODE_CHANNEL_SERIALIZATION_MODE || 'json';\n    delete process.env.NODE_CHANNEL_SERIALIZATION_MODE;\n\n    require('child_process')._forkChild(fd\x2C serializationMode);\n    assert(process.send);\n  }\n}\n\nfunction initializeClusterIPC() {\n  if (process.argv[1] && process.env.NODE_UNIQUE_ID) {\n    const cluster = require('cluster');\n    cluster._setupWorker();\n    // Make sure it's not accidentally inherited by child processes.\n    delete process.env.NODE_UNIQUE_ID;\n  }\n}\n\nfunction initializePermission() {\n  const experimentalPermission = getOptionValue('--experimental-permission');\n  if (experimentalPermission) {\n    process.binding = function binding(_module) {\n      throw new ERR_ACCESS_DENIED('process.binding');\n    };\n    process.emitWarning('Permission is an experimental feature'\x2C\n                        'ExperimentalWarning');\n    const { has\x2C deny } = require('internal/process/permission');\n    const warnFlags = [\n      '--allow-addons'\x2C\n      '--allow-child-process'\x2C\n      '--allow-worker'\x2C\n    ];\n    for (const flag of warnFlags) {\n      if (getOptionValue(flag)) {\n        process.emitWarning(\n          `The flag ${flag} must be used with extreme caution. ` +\n        'It could invalidate the permission model.'\x2C 'SecurityWarning');\n      }\n    }\n    const warnCommaFlags = [\n      '--allow-fs-read'\x2C\n      '--allow-fs-write'\x2C\n    ];\n    for (const flag of warnCommaFlags) {\n      const value = getOptionValue(flag);\n      if (value.length === 1 && value[0].includes('\x2C')) {\n        process.emitWarning(\n          `The ${flag} CLI flag has changed. ` +\n        'Passing a comma-separated list of paths is no longer valid. ' +\n        'Documentation can be found at ' +\n        'https://nodejs.org/api/permissions.html#file-system-permissions'\x2C\n          'Warning'\x2C\n        );\n      }\n    }\n\n    ObjectDefineProperty(process\x2C 'permission'\x2C {\n      __proto__: null\x2C\n      enumerable: true\x2C\n      configurable: false\x2C\n      value: {\n        has\x2C\n        deny\x2C\n      }\x2C\n    });\n  } else {\n    const availablePermissionFlags = [\n      '--allow-fs-read'\x2C\n      '--allow-fs-write'\x2C\n      '--allow-addons'\x2C\n      '--allow-child-process'\x2C\n      '--allow-worker'\x2C\n    ];\n    ArrayPrototypeForEach(availablePermissionFlags\x2C (flag) => {\n      const value = getOptionValue(flag);\n      if (value.length) {\n        throw new ERR_MISSING_OPTION('--experimental-permission');\n      }\n    });\n  }\n}\n\nfunction readPolicyFromDisk() {\n  const experimentalPolicy = getOptionValue('--experimental-policy');\n  if (experimentalPolicy) {\n    process.emitWarning('Policies are experimental.'\x2C\n                        'ExperimentalWarning');\n    const { pathToFileURL\x2C URL } = require('internal/url');\n    // URL here as it is slightly different parsing\n    // no bare specifiers for now\n    let manifestURL;\n    if (require('path').isAbsolute(experimentalPolicy)) {\n      manifestURL = pathToFileURL(experimentalPolicy);\n    } else {\n      const cwdURL = pathToFileURL(process.cwd());\n      cwdURL.pathname += '/';\n      manifestURL = new URL(experimentalPolicy\x2C cwdURL);\n    }\n    const fs = require('fs');\n    const src = fs.readFileSync(manifestURL\x2C 'utf8');\n    const experimentalPolicyIntegrity = getOptionValue('--policy-integrity');\n    if (experimentalPolicyIntegrity) {\n      const SRI = require('internal/policy/sri');\n      const { createHash\x2C timingSafeEqual } = require('crypto');\n      const realIntegrities = new SafeMap();\n      const integrityEntries = SRI.parse(experimentalPolicyIntegrity);\n      let foundMatch = false;\n      for (let i = 0; i < integrityEntries.length; i++) {\n        const {\n          algorithm\x2C\n          value: expected\x2C\n        } = integrityEntries[i];\n        const hash = createHash(algorithm);\n        hash.update(src);\n        const digest = hash.digest();\n        if (digest.length === expected.length &&\n          timingSafeEqual(digest\x2C expected)) {\n          foundMatch = true;\n          break;\n        }\n        realIntegrities.set(algorithm\x2C digest.toString('base64'));\n      }\n      if (!foundMatch) {\n        throw new ERR_MANIFEST_ASSERT_INTEGRITY(manifestURL\x2C realIntegrities);\n      }\n    }\n    return {\n      manifestSrc: src\x2C manifestURL: manifestURL.href\x2C\n    };\n  }\n}\n\nfunction initializeCJSLoader() {\n  const { initializeCJS } = require('internal/modules/cjs/loader');\n  initializeCJS();\n}\n\nfunction initializeESMLoader(forceDefaultLoader) {\n  const { initializeESM } = require('internal/modules/esm/utils');\n  initializeESM(forceDefaultLoader);\n\n  // Patch the vm module when --experimental-vm-modules is on.\n  // Please update the comments in vm.js when this block changes.\n  if (getOptionValue('--experimental-vm-modules')) {\n    const {\n      Module\x2C SourceTextModule\x2C SyntheticModule\x2C\n    } = require('internal/vm/module');\n    const vm = require('vm');\n    vm.Module = Module;\n    vm.SourceTextModule = SourceTextModule;\n    vm.SyntheticModule = SyntheticModule;\n  }\n}\n\nfunction initializeSourceMapsHandlers() {\n  const {\n    setSourceMapsEnabled\x2C\n  } = require('internal/source_map/source_map_cache');\n  setSourceMapsEnabled(getOptionValue('--enable-source-maps'));\n}\n\nfunction initializeFrozenIntrinsics() {\n  if (getOptionValue('--frozen-intrinsics')) {\n    process.emitWarning('The --frozen-intrinsics flag is experimental'\x2C\n                        'ExperimentalWarning');\n    require('internal/freeze_intrinsics')();\n  }\n}\n\nfunction loadPreloadModules() {\n  // For user code\x2C we preload modules if `-r` is passed\n  const preloadModules = getOptionValue('--require');\n  if (preloadModules && preloadModules.length > 0) {\n    const {\n      Module: {\n        _preloadModules\x2C\n      }\x2C\n    } = require('internal/modules/cjs/loader');\n    _preloadModules(preloadModules);\n  }\n}\n\nfunction markBootstrapComplete() {\n  internalBinding('performance').markBootstrapComplete();\n}\n\n// Sequence number for diagnostic filenames\nlet sequenceNumOfheapSnapshot = 0;\n\n// To generate the HeapSnapshotFilename while using custom diagnosticDir\nfunction getHeapSnapshotFilename(diagnosticDir) {\n  if (!diagnosticDir) return undefined;\n\n  const date = new Date();\n\n  const year = DatePrototypeGetFullYear(date);\n  const month = String(DatePrototypeGetMonth(date) + 1).padStart(2\x2C '0');\n  const day = String(DatePrototypeGetDate(date)).padStart(2\x2C '0');\n  const hours = String(DatePrototypeGetHours(date)).padStart(2\x2C '0');\n  const minutes = String(DatePrototypeGetMinutes(date)).padStart(2\x2C '0');\n  const seconds = String(DatePrototypeGetSeconds(date)).padStart(2\x2C '0');\n\n  const dateString = `${year}${month}${day}`;\n  const timeString = `${hours}${minutes}${seconds}`;\n  const pid = process.pid;\n  const threadId = internalBinding('worker').threadId;\n  const fileSequence = (++sequenceNumOfheapSnapshot).toString().padStart(3\x2C '0');\n\n  return `${diagnosticDir}/Heap.${dateString}.${timeString}.${pid}.${threadId}.${fileSequence}.heapsnapshot`;\n}\n\nmodule.exports = {\n  setupUserModules\x2C\n  prepareMainThreadExecution\x2C\n  prepareWorkerThreadExecution\x2C\n  prepareShadowRealmExecution\x2C\n  markBootstrapComplete\x2C\n  loadPreloadModules\x2C\n  initializeFrozenIntrinsics\x2C\n};\n
code-source-info,0x723b73feec,67,1126,1275,C20O1178C30O1208C36O1225C40O1185C44O1273,,
tick,0x109c18e83,27519,0,0x0,3,0x109ba30d0,0x723b73f9b2
tick,0x7ff809333ad4,27610,0,0x0,3,0x109ba30d0,0x723b73ff14,0x723b73f9b2
code-creation,JS,10,27630,0x72b2102dc4,313,prepareExecution node:internal/process/pre_execution:90:26,0x72e2eb9fc8,~
code-source-info,0x72b2102dc
code-creation,JS,10,27726,0x72b21030bc,10,refreshRuntimeOptions node:internal/process/pre_execution:199:31,0x72e2eba0d0,~
code-source-info,0x72b21030bc,67,5815,5841,C0O5822C5O5822C9O5840,,
code-creation,JS,10,27763,0x72b21031a4,22,refreshOptions node:internal/options:39:24,0x72e2e83598,~
script-source,17,node:internal/options,'use strict';\n\nconst {\n  getCLIOptions\x2C\n  getEmbedderOptions: getEmbedderOptionsFromBinding\x2C\n} = internalBinding('options');\n\nlet warnOnAllowUnauthorized = true;\n\nlet optionsMap;\nlet aliasesMap;\nlet embedderOptions;\n\n// getCLIOptions() would serialize the option values from C++ land.\n// It would error if the values are queried before bootstrap is\n// complete so that we don't accidentally include runtime-dependent\n// states into a runtime-independent snapshot.\nfunction getCLIOptionsFromBinding() {\n  if (!optionsMap) {\n    ({ options: optionsMap } = getCLIOptions());\n  }\n  return optionsMap;\n}\n\nfunction getAliasesFromBinding() {\n  if (!aliasesMap) {\n    ({ aliases: aliasesMap } = getCLIOptions());\n  }\n  return aliasesMap;\n}\n\nfunction getEmbedderOptions() {\n  if (!embedderOptions) {\n    embedderOptions = getEmbedderOptionsFromBinding();\n  }\n  return embedderOptions;\n}\n\nfunction refreshOptions() {\n  optionsMap = undefined;\n  aliasesMap = undefined;\n}\n\nfunction getOptionValue(optionName) {\n  const options = getCLIOptionsFromBinding();\n  if (optionName.startsWith('--no-')) {\n    const option = options.get('--' + optionName.slice(5));\n    return option && !option.value;\n  }\n  return options.get(optionName)?.value;\n}\n\nfunction getAllowUnauthorized() {\n  const allowUnauthorized = process.env.NODE_TLS_REJECT_UNAUTHORIZED === '0';\n\n  if (allowUnauthorized && warnOnAllowUnauthorized) {\n    warnOnAllowUnauthorized = false;\n    process.emitWarning(\n      'Setting the NODE_TLS_REJECT_UNAUTHORIZED ' +\n      'environment variable to \\'0\\' makes TLS connections ' +\n      'and HTTPS requests insecure by disabling ' +\n      'certificate verification.');\n  }\n  return allowUnauthorized;\n}\n\nmodule.exports = {\n  get options() {\n    return getCLIOptionsFromBinding();\n  }\x2C\n  get aliases() {\n    return getAliasesFromBinding();\n  }\x2C\n  getOptionValue\x2C\n  getAllowUnauthorized\x2C\n  getEmbedderOptions\x2C\n  refreshOptions\x2C\n};\n
code-source-info,0x72b21031a4,17,902,960,C0O909C4O920C10O935C14O946C21O959,,
code-creation,JS,10,27954,0x72b210350c,19,reconnectZeroFillToggle node:internal/buffer:1083:33,0x72e2e95178,~
script-source,25,node:internal/buffer,'use strict';\n\nconst {\n  BigInt\x2C\n  Float32Array\x2C\n  Float64Array\x2C\n  MathFloor\x2C\n  Number\x2C\n  Uint8Array\x2C\n} = primordials;\n\nconst {\n  ERR_BUFFER_OUT_OF_BOUNDS\x2C\n  ERR_INVALID_ARG_TYPE\x2C\n  ERR_OUT_OF_RANGE\x2C\n} = require('internal/errors').codes;\nconst { validateNumber } = require('internal/validators');\nconst {\n  asciiSlice\x2C\n  base64Slice\x2C\n  base64urlSlice\x2C\n  latin1Slice\x2C\n  hexSlice\x2C\n  ucs2Slice\x2C\n  utf8Slice\x2C\n  asciiWrite\x2C\n  base64Write\x2C\n  base64urlWrite\x2C\n  latin1Write\x2C\n  hexWrite\x2C\n  ucs2Write\x2C\n  utf8Write\x2C\n  getZeroFillToggle\x2C\n} = internalBinding('buffer');\n\nconst {\n  privateSymbols: {\n    untransferable_object_private_symbol\x2C\n  }\x2C\n} = internalBinding('util');\n\n// Temporary buffers to convert numbers.\nconst float32Array = new Float32Array(1);\nconst uInt8Float32Array = new Uint8Array(float32Array.buffer);\nconst float64Array = new Float64Array(1);\nconst uInt8Float64Array = new Uint8Array(float64Array.buffer);\n\n// Check endianness.\nfloat32Array[0] = -1; // 0xBF800000\n// Either it is [0\x2C 0\x2C 128\x2C 191] or [191\x2C 128\x2C 0\x2C 0]. It is not possible to\n// check this with `os.endianness()` because that is determined at compile time.\nconst bigEndian = uInt8Float32Array[3] === 0;\n\nfunction checkBounds(buf\x2C offset\x2C byteLength) {\n  validateNumber(offset\x2C 'offset');\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined)\n    boundsError(offset\x2C buf.length - (byteLength + 1));\n}\n\nfunction checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C byteLength) {\n  if (value > max || value < min) {\n    const n = typeof min === 'bigint' ? 'n' : '';\n    let range;\n    if (byteLength > 3) {\n      if (min === 0 || min === 0n) {\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`;\n      } else {\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and ` +\n                `< 2${n} ** ${(byteLength + 1) * 8 - 1}${n}`;\n      }\n    } else {\n      range = `>= ${min}${n} and <= ${max}${n}`;\n    }\n    throw new ERR_OUT_OF_RANGE('value'\x2C range\x2C value);\n  }\n  checkBounds(buf\x2C offset\x2C byteLength);\n}\n\nfunction boundsError(value\x2C length\x2C type) {\n  if (MathFloor(value) !== value) {\n    validateNumber(value\x2C type);\n    throw new ERR_OUT_OF_RANGE(type || 'offset'\x2C 'an integer'\x2C value);\n  }\n\n  if (length < 0)\n    throw new ERR_BUFFER_OUT_OF_BOUNDS();\n\n  throw new ERR_OUT_OF_RANGE(type || 'offset'\x2C\n                             `>= ${type ? 1 : 0} and <= ${length}`\x2C\n                             value);\n}\n\n// Read integers.\nfunction readBigUInt64LE(offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = this[offset];\n  const last = this[offset + 7];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C this.length - 8);\n\n  const lo = first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24;\n\n  const hi = this[++offset] +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    last * 2 ** 24;\n\n  return BigInt(lo) + (BigInt(hi) << 32n);\n}\n\nfunction readBigUInt64BE(offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = this[offset];\n  const last = this[offset + 7];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C this.length - 8);\n\n  const hi = first * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset];\n\n  const lo = this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last;\n\n  return (BigInt(hi) << 32n) + BigInt(lo);\n}\n\nfunction readBigInt64LE(offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = this[offset];\n  const last = this[offset + 7];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C this.length - 8);\n\n  const val = this[offset + 4] +\n    this[offset + 5] * 2 ** 8 +\n    this[offset + 6] * 2 ** 16 +\n    (last << 24); // Overflow\n  return (BigInt(val) << 32n) +\n    BigInt(first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24);\n}\n\nfunction readBigInt64BE(offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = this[offset];\n  const last = this[offset + 7];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C this.length - 8);\n\n  const val = (first << 24) + // Overflow\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset];\n  return (BigInt(val) << 32n) +\n    BigInt(this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last);\n}\n\nfunction readUIntLE(offset\x2C byteLength) {\n  if (offset === undefined)\n    throw new ERR_INVALID_ARG_TYPE('offset'\x2C 'number'\x2C offset);\n  if (byteLength === 6)\n    return readUInt48LE(this\x2C offset);\n  if (byteLength === 5)\n    return readUInt40LE(this\x2C offset);\n  if (byteLength === 3)\n    return readUInt24LE(this\x2C offset);\n  if (byteLength === 4)\n    return this.readUInt32LE(offset);\n  if (byteLength === 2)\n    return this.readUInt16LE(offset);\n  if (byteLength === 1)\n    return this.readUInt8(offset);\n\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\n}\n\nfunction readUInt48LE(buf\x2C offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = buf[offset];\n  const last = buf[offset + 5];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C buf.length - 6);\n\n  return first +\n    buf[++offset] * 2 ** 8 +\n    buf[++offset] * 2 ** 16 +\n    buf[++offset] * 2 ** 24 +\n    (buf[++offset] + last * 2 ** 8) * 2 ** 32;\n}\n\nfunction readUInt40LE(buf\x2C offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = buf[offset];\n  const last = buf[offset + 4];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C buf.length - 5);\n\n  return first +\n    buf[++offset] * 2 ** 8 +\n    buf[++offset] * 2 ** 16 +\n    buf[++offset] * 2 ** 24 +\n    last * 2 ** 32;\n}\n\nfunction readUInt32LE(offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = this[offset];\n  const last = this[offset + 3];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C this.length - 4);\n\n  return first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    last * 2 ** 24;\n}\n\nfunction readUInt24LE(buf\x2C offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = buf[offset];\n  const last = buf[offset + 2];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C buf.length - 3);\n\n  return first + buf[++offset] * 2 ** 8 + last * 2 ** 16;\n}\n\nfunction readUInt16LE(offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = this[offset];\n  const last = this[offset + 1];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C this.length - 2);\n\n  return first + last * 2 ** 8;\n}\n\nfunction readUInt8(offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const val = this[offset];\n  if (val === undefined)\n    boundsError(offset\x2C this.length - 1);\n\n  return val;\n}\n\nfunction readUIntBE(offset\x2C byteLength) {\n  if (offset === undefined)\n    throw new ERR_INVALID_ARG_TYPE('offset'\x2C 'number'\x2C offset);\n  if (byteLength === 6)\n    return readUInt48BE(this\x2C offset);\n  if (byteLength === 5)\n    return readUInt40BE(this\x2C offset);\n  if (byteLength === 3)\n    return readUInt24BE(this\x2C offset);\n  if (byteLength === 4)\n    return this.readUInt32BE(offset);\n  if (byteLength === 2)\n    return this.readUInt16BE(offset);\n  if (byteLength === 1)\n    return this.readUInt8(offset);\n\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\n}\n\nfunction readUInt48BE(buf\x2C offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = buf[offset];\n  const last = buf[offset + 5];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C buf.length - 6);\n\n  return (first * 2 ** 8 + buf[++offset]) * 2 ** 32 +\n    buf[++offset] * 2 ** 24 +\n    buf[++offset] * 2 ** 16 +\n    buf[++offset] * 2 ** 8 +\n    last;\n}\n\nfunction readUInt40BE(buf\x2C offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = buf[offset];\n  const last = buf[offset + 4];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C buf.length - 5);\n\n  return first * 2 ** 32 +\n    buf[++offset] * 2 ** 24 +\n    buf[++offset] * 2 ** 16 +\n    buf[++offset] * 2 ** 8 +\n    last;\n}\n\nfunction readUInt32BE(offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = this[offset];\n  const last = this[offset + 3];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C this.length - 4);\n\n  return first * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last;\n}\n\nfunction readUInt24BE(buf\x2C offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = buf[offset];\n  const last = buf[offset + 2];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C buf.length - 3);\n\n  return first * 2 ** 16 + buf[++offset] * 2 ** 8 + last;\n}\n\nfunction readUInt16BE(offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = this[offset];\n  const last = this[offset + 1];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C this.length - 2);\n\n  return first * 2 ** 8 + last;\n}\n\nfunction readIntLE(offset\x2C byteLength) {\n  if (offset === undefined)\n    throw new ERR_INVALID_ARG_TYPE('offset'\x2C 'number'\x2C offset);\n  if (byteLength === 6)\n    return readInt48LE(this\x2C offset);\n  if (byteLength === 5)\n    return readInt40LE(this\x2C offset);\n  if (byteLength === 3)\n    return readInt24LE(this\x2C offset);\n  if (byteLength === 4)\n    return this.readInt32LE(offset);\n  if (byteLength === 2)\n    return this.readInt16LE(offset);\n  if (byteLength === 1)\n    return this.readInt8(offset);\n\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\n}\n\nfunction readInt48LE(buf\x2C offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = buf[offset];\n  const last = buf[offset + 5];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C buf.length - 6);\n\n  const val = buf[offset + 4] + last * 2 ** 8;\n  return (val | (val & 2 ** 15) * 0x1fffe) * 2 ** 32 +\n    first +\n    buf[++offset] * 2 ** 8 +\n    buf[++offset] * 2 ** 16 +\n    buf[++offset] * 2 ** 24;\n}\n\nfunction readInt40LE(buf\x2C offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = buf[offset];\n  const last = buf[offset + 4];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C buf.length - 5);\n\n  return (last | (last & 2 ** 7) * 0x1fffffe) * 2 ** 32 +\n    first +\n    buf[++offset] * 2 ** 8 +\n    buf[++offset] * 2 ** 16 +\n    buf[++offset] * 2 ** 24;\n}\n\nfunction readInt32LE(offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = this[offset];\n  const last = this[offset + 3];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C this.length - 4);\n\n  return first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    (last << 24); // Overflow\n}\n\nfunction readInt24LE(buf\x2C offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = buf[offset];\n  const last = buf[offset + 2];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C buf.length - 3);\n\n  const val = first + buf[++offset] * 2 ** 8 + last * 2 ** 16;\n  return val | (val & 2 ** 23) * 0x1fe;\n}\n\nfunction readInt16LE(offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = this[offset];\n  const last = this[offset + 1];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C this.length - 2);\n\n  const val = first + last * 2 ** 8;\n  return val | (val & 2 ** 15) * 0x1fffe;\n}\n\nfunction readInt8(offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const val = this[offset];\n  if (val === undefined)\n    boundsError(offset\x2C this.length - 1);\n\n  return val | (val & 2 ** 7) * 0x1fffffe;\n}\n\nfunction readIntBE(offset\x2C byteLength) {\n  if (offset === undefined)\n    throw new ERR_INVALID_ARG_TYPE('offset'\x2C 'number'\x2C offset);\n  if (byteLength === 6)\n    return readInt48BE(this\x2C offset);\n  if (byteLength === 5)\n    return readInt40BE(this\x2C offset);\n  if (byteLength === 3)\n    return readInt24BE(this\x2C offset);\n  if (byteLength === 4)\n    return this.readInt32BE(offset);\n  if (byteLength === 2)\n    return this.readInt16BE(offset);\n  if (byteLength === 1)\n    return this.readInt8(offset);\n\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\n}\n\nfunction readInt48BE(buf\x2C offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = buf[offset];\n  const last = buf[offset + 5];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C buf.length - 6);\n\n  const val = buf[++offset] + first * 2 ** 8;\n  return (val | (val & 2 ** 15) * 0x1fffe) * 2 ** 32 +\n    buf[++offset] * 2 ** 24 +\n    buf[++offset] * 2 ** 16 +\n    buf[++offset] * 2 ** 8 +\n    last;\n}\n\nfunction readInt40BE(buf\x2C offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = buf[offset];\n  const last = buf[offset + 4];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C buf.length - 5);\n\n  return (first | (first & 2 ** 7) * 0x1fffffe) * 2 ** 32 +\n    buf[++offset] * 2 ** 24 +\n    buf[++offset] * 2 ** 16 +\n    buf[++offset] * 2 ** 8 +\n    last;\n}\n\nfunction readInt32BE(offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = this[offset];\n  const last = this[offset + 3];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C this.length - 4);\n\n  return (first << 24) + // Overflow\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last;\n}\n\nfunction readInt24BE(buf\x2C offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = buf[offset];\n  const last = buf[offset + 2];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C buf.length - 3);\n\n  const val = first * 2 ** 16 + buf[++offset] * 2 ** 8 + last;\n  return val | (val & 2 ** 23) * 0x1fe;\n}\n\nfunction readInt16BE(offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = this[offset];\n  const last = this[offset + 1];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C this.length - 2);\n\n  const val = first * 2 ** 8 + last;\n  return val | (val & 2 ** 15) * 0x1fffe;\n}\n\n// Read floats\nfunction readFloatBackwards(offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = this[offset];\n  const last = this[offset + 3];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C this.length - 4);\n\n  uInt8Float32Array[3] = first;\n  uInt8Float32Array[2] = this[++offset];\n  uInt8Float32Array[1] = this[++offset];\n  uInt8Float32Array[0] = last;\n  return float32Array[0];\n}\n\nfunction readFloatForwards(offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = this[offset];\n  const last = this[offset + 3];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C this.length - 4);\n\n  uInt8Float32Array[0] = first;\n  uInt8Float32Array[1] = this[++offset];\n  uInt8Float32Array[2] = this[++offset];\n  uInt8Float32Array[3] = last;\n  return float32Array[0];\n}\n\nfunction readDoubleBackwards(offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = this[offset];\n  const last = this[offset + 7];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C this.length - 8);\n\n  uInt8Float64Array[7] = first;\n  uInt8Float64Array[6] = this[++offset];\n  uInt8Float64Array[5] = this[++offset];\n  uInt8Float64Array[4] = this[++offset];\n  uInt8Float64Array[3] = this[++offset];\n  uInt8Float64Array[2] = this[++offset];\n  uInt8Float64Array[1] = this[++offset];\n  uInt8Float64Array[0] = last;\n  return float64Array[0];\n}\n\nfunction readDoubleForwards(offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = this[offset];\n  const last = this[offset + 7];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C this.length - 8);\n\n  uInt8Float64Array[0] = first;\n  uInt8Float64Array[1] = this[++offset];\n  uInt8Float64Array[2] = this[++offset];\n  uInt8Float64Array[3] = this[++offset];\n  uInt8Float64Array[4] = this[++offset];\n  uInt8Float64Array[5] = this[++offset];\n  uInt8Float64Array[6] = this[++offset];\n  uInt8Float64Array[7] = last;\n  return float64Array[0];\n}\n\n// Write integers.\nfunction writeBigU_Int64LE(buf\x2C value\x2C offset\x2C min\x2C max) {\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 7);\n\n  let lo = Number(value & 0xffffffffn);\n  buf[offset++] = lo;\n  lo = lo >> 8;\n  buf[offset++] = lo;\n  lo = lo >> 8;\n  buf[offset++] = lo;\n  lo = lo >> 8;\n  buf[offset++] = lo;\n  let hi = Number(value >> 32n & 0xffffffffn);\n  buf[offset++] = hi;\n  hi = hi >> 8;\n  buf[offset++] = hi;\n  hi = hi >> 8;\n  buf[offset++] = hi;\n  hi = hi >> 8;\n  buf[offset++] = hi;\n  return offset;\n}\n\nfunction writeBigUInt64LE(value\x2C offset = 0) {\n  return writeBigU_Int64LE(this\x2C value\x2C offset\x2C 0n\x2C 0xffffffffffffffffn);\n}\n\nfunction writeBigU_Int64BE(buf\x2C value\x2C offset\x2C min\x2C max) {\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 7);\n\n  let lo = Number(value & 0xffffffffn);\n  buf[offset + 7] = lo;\n  lo = lo >> 8;\n  buf[offset + 6] = lo;\n  lo = lo >> 8;\n  buf[offset + 5] = lo;\n  lo = lo >> 8;\n  buf[offset + 4] = lo;\n  let hi = Number(value >> 32n & 0xffffffffn);\n  buf[offset + 3] = hi;\n  hi = hi >> 8;\n  buf[offset + 2] = hi;\n  hi = hi >> 8;\n  buf[offset + 1] = hi;\n  hi = hi >> 8;\n  buf[offset] = hi;\n  return offset + 8;\n}\n\nfunction writeBigUInt64BE(value\x2C offset = 0) {\n  return writeBigU_Int64BE(this\x2C value\x2C offset\x2C 0n\x2C 0xffffffffffffffffn);\n}\n\nfunction writeBigInt64LE(value\x2C offset = 0) {\n  return writeBigU_Int64LE(\n    this\x2C value\x2C offset\x2C -0x8000000000000000n\x2C 0x7fffffffffffffffn);\n}\n\nfunction writeBigInt64BE(value\x2C offset = 0) {\n  return writeBigU_Int64BE(\n    this\x2C value\x2C offset\x2C -0x8000000000000000n\x2C 0x7fffffffffffffffn);\n}\n\nfunction writeUIntLE(value\x2C offset\x2C byteLength) {\n  if (byteLength === 6)\n    return writeU_Int48LE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffffffff);\n  if (byteLength === 5)\n    return writeU_Int40LE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffffff);\n  if (byteLength === 3)\n    return writeU_Int24LE(this\x2C value\x2C offset\x2C 0\x2C 0xffffff);\n  if (byteLength === 4)\n    return writeU_Int32LE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffff);\n  if (byteLength === 2)\n    return writeU_Int16LE(this\x2C value\x2C offset\x2C 0\x2C 0xffff);\n  if (byteLength === 1)\n    return writeU_Int8(this\x2C value\x2C offset\x2C 0\x2C 0xff);\n\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\n}\n\nfunction writeU_Int48LE(buf\x2C value\x2C offset\x2C min\x2C max) {\n  value = +value;\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 5);\n\n  const newVal = MathFloor(value * 2 ** -32);\n  buf[offset++] = value;\n  value = value >>> 8;\n  buf[offset++] = value;\n  value = value >>> 8;\n  buf[offset++] = value;\n  value = value >>> 8;\n  buf[offset++] = value;\n  buf[offset++] = newVal;\n  buf[offset++] = (newVal >>> 8);\n  return offset;\n}\n\nfunction writeU_Int40LE(buf\x2C value\x2C offset\x2C min\x2C max) {\n  value = +value;\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 4);\n\n  const newVal = value;\n  buf[offset++] = value;\n  value = value >>> 8;\n  buf[offset++] = value;\n  value = value >>> 8;\n  buf[offset++] = value;\n  value = value >>> 8;\n  buf[offset++] = value;\n  buf[offset++] = MathFloor(newVal * 2 ** -32);\n  return offset;\n}\n\nfunction writeU_Int32LE(buf\x2C value\x2C offset\x2C min\x2C max) {\n  value = +value;\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 3);\n\n  buf[offset++] = value;\n  value = value >>> 8;\n  buf[offset++] = value;\n  value = value >>> 8;\n  buf[offset++] = value;\n  value = value >>> 8;\n  buf[offset++] = value;\n  return offset;\n}\n\nfunction writeUInt32LE(value\x2C offset = 0) {\n  return writeU_Int32LE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffff);\n}\n\nfunction writeU_Int24LE(buf\x2C value\x2C offset\x2C min\x2C max) {\n  value = +value;\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 2);\n\n  buf[offset++] = value;\n  value = value >>> 8;\n  buf[offset++] = value;\n  value = value >>> 8;\n  buf[offset++] = value;\n  return offset;\n}\n\nfunction writeU_Int16LE(buf\x2C value\x2C offset\x2C min\x2C max) {\n  value = +value;\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 1);\n\n  buf[offset++] = value;\n  buf[offset++] = (value >>> 8);\n  return offset;\n}\n\nfunction writeUInt16LE(value\x2C offset = 0) {\n  return writeU_Int16LE(this\x2C value\x2C offset\x2C 0\x2C 0xffff);\n}\n\nfunction writeU_Int8(buf\x2C value\x2C offset\x2C min\x2C max) {\n  value = +value;\n  // `checkInt()` can not be used here because it checks two entries.\n  validateNumber(offset\x2C 'offset');\n  if (value > max || value < min) {\n    throw new ERR_OUT_OF_RANGE('value'\x2C `>= ${min} and <= ${max}`\x2C value);\n  }\n  if (buf[offset] === undefined)\n    boundsError(offset\x2C buf.length - 1);\n\n  buf[offset] = value;\n  return offset + 1;\n}\n\nfunction writeUInt8(value\x2C offset = 0) {\n  return writeU_Int8(this\x2C value\x2C offset\x2C 0\x2C 0xff);\n}\n\nfunction writeUIntBE(value\x2C offset\x2C byteLength) {\n  if (byteLength === 6)\n    return writeU_Int48BE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffffffff);\n  if (byteLength === 5)\n    return writeU_Int40BE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffffff);\n  if (byteLength === 3)\n    return writeU_Int24BE(this\x2C value\x2C offset\x2C 0\x2C 0xffffff);\n  if (byteLength === 4)\n    return writeU_Int32BE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffff);\n  if (byteLength === 2)\n    return writeU_Int16BE(this\x2C value\x2C offset\x2C 0\x2C 0xffff);\n  if (byteLength === 1)\n    return writeU_Int8(this\x2C value\x2C offset\x2C 0\x2C 0xff);\n\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\n}\n\nfunction writeU_Int48BE(buf\x2C value\x2C offset\x2C min\x2C max) {\n  value = +value;\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 5);\n\n  const newVal = MathFloor(value * 2 ** -32);\n  buf[offset++] = (newVal >>> 8);\n  buf[offset++] = newVal;\n  buf[offset + 3] = value;\n  value = value >>> 8;\n  buf[offset + 2] = value;\n  value = value >>> 8;\n  buf[offset + 1] = value;\n  value = value >>> 8;\n  buf[offset] = value;\n  return offset + 4;\n}\n\nfunction writeU_Int40BE(buf\x2C value\x2C offset\x2C min\x2C max) {\n  value = +value;\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 4);\n\n  buf[offset++] = MathFloor(value * 2 ** -32);\n  buf[offset + 3] = value;\n  value = value >>> 8;\n  buf[offset + 2] = value;\n  value = value >>> 8;\n  buf[offset + 1] = value;\n  value = value >>> 8;\n  buf[offset] = value;\n  return offset + 4;\n}\n\nfunction writeU_Int32BE(buf\x2C value\x2C offset\x2C min\x2C max) {\n  value = +value;\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 3);\n\n  buf[offset + 3] = value;\n  value = value >>> 8;\n  buf[offset + 2] = value;\n  value = value >>> 8;\n  buf[offset + 1] = value;\n  value = value >>> 8;\n  buf[offset] = value;\n  return offset + 4;\n}\n\nfunction writeUInt32BE(value\x2C offset = 0) {\n  return writeU_Int32BE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffff);\n}\n\nfunction writeU_Int24BE(buf\x2C value\x2C offset\x2C min\x2C max) {\n  value = +value;\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 2);\n\n  buf[offset + 2] = value;\n  value = value >>> 8;\n  buf[offset + 1] = value;\n  value = value >>> 8;\n  buf[offset] = value;\n  return offset + 3;\n}\n\nfunction writeU_Int16BE(buf\x2C value\x2C offset\x2C min\x2C max) {\n  value = +value;\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 1);\n\n  buf[offset++] = (value >>> 8);\n  buf[offset++] = value;\n  return offset;\n}\n\nfunction writeUInt16BE(value\x2C offset = 0) {\n  return writeU_Int16BE(this\x2C value\x2C offset\x2C 0\x2C 0xffff);\n}\n\nfunction writeIntLE(value\x2C offset\x2C byteLength) {\n  if (byteLength === 6)\n    return writeU_Int48LE(this\x2C value\x2C offset\x2C -0x800000000000\x2C 0x7fffffffffff);\n  if (byteLength === 5)\n    return writeU_Int40LE(this\x2C value\x2C offset\x2C -0x8000000000\x2C 0x7fffffffff);\n  if (byteLength === 3)\n    return writeU_Int24LE(this\x2C value\x2C offset\x2C -0x800000\x2C 0x7fffff);\n  if (byteLength === 4)\n    return writeU_Int32LE(this\x2C value\x2C offset\x2C -0x80000000\x2C 0x7fffffff);\n  if (byteLength === 2)\n    return writeU_Int16LE(this\x2C value\x2C offset\x2C -0x8000\x2C 0x7fff);\n  if (byteLength === 1)\n    return writeU_Int8(this\x2C value\x2C offset\x2C -0x80\x2C 0x7f);\n\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\n}\n\nfunction writeInt32LE(value\x2C offset = 0) {\n  return writeU_Int32LE(this\x2C value\x2C offset\x2C -0x80000000\x2C 0x7fffffff);\n}\n\nfunction writeInt16LE(value\x2C offset = 0) {\n  return writeU_Int16LE(this\x2C value\x2C offset\x2C -0x8000\x2C 0x7fff);\n}\n\nfunction writeInt8(value\x2C offset = 0) {\n  return writeU_Int8(this\x2C value\x2C offset\x2C -0x80\x2C 0x7f);\n}\n\nfunction writeIntBE(value\x2C offset\x2C byteLength) {\n  if (byteLength === 6)\n    return writeU_Int48BE(this\x2C value\x2C offset\x2C -0x800000000000\x2C 0x7fffffffffff);\n  if (byteLength === 5)\n    return writeU_Int40BE(this\x2C value\x2C offset\x2C -0x8000000000\x2C 0x7fffffffff);\n  if (byteLength === 3)\n    return writeU_Int24BE(this\x2C value\x2C offset\x2C -0x800000\x2C 0x7fffff);\n  if (byteLength === 4)\n    return writeU_Int32BE(this\x2C value\x2C offset\x2C -0x80000000\x2C 0x7fffffff);\n  if (byteLength === 2)\n    return writeU_Int16BE(this\x2C value\x2C offset\x2C -0x8000\x2C 0x7fff);\n  if (byteLength === 1)\n    return writeU_Int8(this\x2C value\x2C offset\x2C -0x80\x2C 0x7f);\n\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\n}\n\nfunction writeInt32BE(value\x2C offset = 0) {\n  return writeU_Int32BE(this\x2C value\x2C offset\x2C -0x80000000\x2C 0x7fffffff);\n}\n\nfunction writeInt16BE(value\x2C offset = 0) {\n  return writeU_Int16BE(this\x2C value\x2C offset\x2C -0x8000\x2C 0x7fff);\n}\n\n// Write floats.\nfunction writeDoubleForwards(val\x2C offset = 0) {\n  val = +val;\n  checkBounds(this\x2C offset\x2C 7);\n\n  float64Array[0] = val;\n  this[offset++] = uInt8Float64Array[0];\n  this[offset++] = uInt8Float64Array[1];\n  this[offset++] = uInt8Float64Array[2];\n  this[offset++] = uInt8Float64Array[3];\n  this[offset++] = uInt8Float64Array[4];\n  this[offset++] = uInt8Float64Array[5];\n  this[offset++] = uInt8Float64Array[6];\n  this[offset++] = uInt8Float64Array[7];\n  return offset;\n}\n\nfunction writeDoubleBackwards(val\x2C offset = 0) {\n  val = +val;\n  checkBounds(this\x2C offset\x2C 7);\n\n  float64Array[0] = val;\n  this[offset++] = uInt8Float64Array[7];\n  this[offset++] = uInt8Float64Array[6];\n  this[offset++] = uInt8Float64Array[5];\n  this[offset++] = uInt8Float64Array[4];\n  this[offset++] = uInt8Float64Array[3];\n  this[offset++] = uInt8Float64Array[2];\n  this[offset++] = uInt8Float64Array[1];\n  this[offset++] = uInt8Float64Array[0];\n  return offset;\n}\n\nfunction writeFloatForwards(val\x2C offset = 0) {\n  val = +val;\n  checkBounds(this\x2C offset\x2C 3);\n\n  float32Array[0] = val;\n  this[offset++] = uInt8Float32Array[0];\n  this[offset++] = uInt8Float32Array[1];\n  this[offset++] = uInt8Float32Array[2];\n  this[offset++] = uInt8Float32Array[3];\n  return offset;\n}\n\nfunction writeFloatBackwards(val\x2C offset = 0) {\n  val = +val;\n  checkBounds(this\x2C offset\x2C 3);\n\n  float32Array[0] = val;\n  this[offset++] = uInt8Float32Array[3];\n  this[offset++] = uInt8Float32Array[2];\n  this[offset++] = uInt8Float32Array[1];\n  this[offset++] = uInt8Float32Array[0];\n  return offset;\n}\n\nclass FastBuffer extends Uint8Array {\n  // Using an explicit constructor here is necessary to avoid relying on\n  // `Array.prototype[Symbol.iterator]`\x2C which can be mutated by users.\n  // eslint-disable-next-line no-useless-constructor\n  constructor(bufferOrLength\x2C byteOffset\x2C length) {\n    super(bufferOrLength\x2C byteOffset\x2C length);\n  }\n}\n\nfunction addBufferPrototypeMethods(proto) {\n  proto.readBigUInt64LE = readBigUInt64LE;\n  proto.readBigUInt64BE = readBigUInt64BE;\n  proto.readBigUint64LE = readBigUInt64LE;\n  proto.readBigUint64BE = readBigUInt64BE;\n  proto.readBigInt64LE = readBigInt64LE;\n  proto.readBigInt64BE = readBigInt64BE;\n  proto.writeBigUInt64LE = writeBigUInt64LE;\n  proto.writeBigUInt64BE = writeBigUInt64BE;\n  proto.writeBigUint64LE = writeBigUInt64LE;\n  proto.writeBigUint64BE = writeBigUInt64BE;\n  proto.writeBigInt64LE = writeBigInt64LE;\n  proto.writeBigInt64BE = writeBigInt64BE;\n\n  proto.readUIntLE = readUIntLE;\n  proto.readUInt32LE = readUInt32LE;\n  proto.readUInt16LE = readUInt16LE;\n  proto.readUInt8 = readUInt8;\n  proto.readUIntBE = readUIntBE;\n  proto.readUInt32BE = readUInt32BE;\n  proto.readUInt16BE = readUInt16BE;\n  proto.readUintLE = readUIntLE;\n  proto.readUint32LE = readUInt32LE;\n  proto.readUint16LE = readUInt16LE;\n  proto.readUint8 = readUInt8;\n  proto.readUintBE = readUIntBE;\n  proto.readUint32BE = readUInt32BE;\n  proto.readUint16BE = readUInt16BE;\n  proto.readIntLE = readIntLE;\n  proto.readInt32LE = readInt32LE;\n  proto.readInt16LE = readInt16LE;\n  proto.readInt8 = readInt8;\n  proto.readIntBE = readIntBE;\n  proto.readInt32BE = readInt32BE;\n  proto.readInt16BE = readInt16BE;\n\n  proto.writeUIntLE = writeUIntLE;\n  proto.writeUInt32LE = writeUInt32LE;\n  proto.writeUInt16LE = writeUInt16LE;\n  proto.writeUInt8 = writeUInt8;\n  proto.writeUIntBE = writeUIntBE;\n  proto.writeUInt32BE = writeUInt32BE;\n  proto.writeUInt16BE = writeUInt16BE;\n  proto.writeUintLE = writeUIntLE;\n  proto.writeUint32LE = writeUInt32LE;\n  proto.writeUint16LE = writeUInt16LE;\n  proto.writeUint8 = writeUInt8;\n  proto.writeUintBE = writeUIntBE;\n  proto.writeUint32BE = writeUInt32BE;\n  proto.writeUint16BE = writeUInt16BE;\n  proto.writeIntLE = writeIntLE;\n  proto.writeInt32LE = writeInt32LE;\n  proto.writeInt16LE = writeInt16LE;\n  proto.writeInt8 = writeInt8;\n  proto.writeIntBE = writeIntBE;\n  proto.writeInt32BE = writeInt32BE;\n  proto.writeInt16BE = writeInt16BE;\n\n  proto.readFloatLE = bigEndian ? readFloatBackwards : readFloatForwards;\n  proto.readFloatBE = bigEndian ? readFloatForwards : readFloatBackwards;\n  proto.readDoubleLE = bigEndian ? readDoubleBackwards : readDoubleForwards;\n  proto.readDoubleBE = bigEndian ? readDoubleForwards : readDoubleBackwards;\n  proto.writeFloatLE = bigEndian ? writeFloatBackwards : writeFloatForwards;\n  proto.writeFloatBE = bigEndian ? writeFloatForwards : writeFloatBackwards;\n  proto.writeDoubleLE = bigEndian ? writeDoubleBackwards : writeDoubleForwards;\n  proto.writeDoubleBE = bigEndian ? writeDoubleForwards : writeDoubleBackwards;\n\n  proto.asciiSlice = asciiSlice;\n  proto.base64Slice = base64Slice;\n  proto.base64urlSlice = base64urlSlice;\n  proto.latin1Slice = latin1Slice;\n  proto.hexSlice = hexSlice;\n  proto.ucs2Slice = ucs2Slice;\n  proto.utf8Slice = utf8Slice;\n  proto.asciiWrite = asciiWrite;\n  proto.base64Write = base64Write;\n  proto.base64urlWrite = base64urlWrite;\n  proto.latin1Write = latin1Write;\n  proto.hexWrite = hexWrite;\n  proto.ucs2Write = ucs2Write;\n  proto.utf8Write = utf8Write;\n}\n\n// This would better be placed in internal/worker/io.js\x2C but that doesn't work\n// because Buffer needs this and that would introduce a cyclic dependency.\nfunction markAsUntransferable(obj) {\n  if ((typeof obj !== 'object' && typeof obj !== 'function') || obj === null)\n    return;  // This object is a primitive and therefore already untransferable.\n  obj[untransferable_object_private_symbol] = true;\n}\n\n// This simply checks if the object is marked as untransferable and doesn't\n// check whether we are able to transfer it.\nfunction isMarkedAsUntransferable(obj) {\n  if (obj == null)\n    return false;\n  // Private symbols are not inherited.\n  return obj[untransferable_object_private_symbol] !== undefined;\n}\n\n// A toggle used to access the zero fill setting of the array buffer allocator\n// in C++.\n// |zeroFill| can be undefined when running inside an isolate where we\n// do not own the ArrayBuffer allocator.  Zero fill is always on in that case.\nlet zeroFill = getZeroFillToggle();\nfunction createUnsafeBuffer(size) {\n  zeroFill[0] = 0;\n  try {\n    return new FastBuffer(size);\n  } finally {\n    zeroFill[0] = 1;\n  }\n}\n\n// The connection between the JS land zero fill toggle and the\n// C++ one in the NodeArrayBufferAllocator gets lost if the toggle\n// is deserialized from the snapshot\x2C because V8 owns the underlying\n// memory of this toggle. This resets the connection.\nfunction reconnectZeroFillToggle() {\n  zeroFill = getZeroFillToggle();\n}\n\nmodule.exports = {\n  FastBuffer\x2C\n  addBufferPrototypeMethods\x2C\n  markAsUntransferable\x2C\n  isMarkedAsUntransferable\x2C\n  createUnsafeBuffer\x2C\n  readUInt16BE\x2C\n  readUInt32BE\x2C\n  reconnectZeroFillToggle\x2C\n};\n
code-source-info,0x72b210350c,25,31022,31062,C0O31029C5O31040C11O31038C18O31061,,
tick,0x1092fe310,29706,0,0x0,3,0x109ba30d0,0x72b2102dde,0x723b73ff14,0x723b73f9b2
code-creation,JS,10,29794,0x72b2105e4c,462,patchProcessObject node:internal/process/pre_execution:210:28,0x72e2eba128,~
code-source-info,0x72b2105e4c
code-creation,JS,10,29987,0x72b2106444,132,set node:internal/bootstrap/node:116:8,0x722077a740,~
script-source,12,node:internal/bootstrap/node,// Hello\x2C and welcome to hacking node.js!\n//\n// This file is invoked by `Realm::BootstrapRealm()` in `src/node_realm.cc`\x2C\n// and is responsible for setting up Node.js core before main scripts\n// under `lib/internal/main/` are executed.\n//\n// By default\x2C Node.js binaries come with an embedded V8 startup snapshot\n// that is generated at build-time with a `node_mksnapshot` executable.\n// The snapshot generation code can be found in `SnapshotBuilder::Generate()`\n// from `src/node_snapshotable.cc`.\n// This snapshot captures the V8 heap initialized by scripts under\n// `lib/internal/bootstrap/`\x2C including this file. When initializing the main\n// thread\x2C Node.js deserializes the heap from the snapshot\x2C instead of actually\n// running this script and others in `lib/internal/bootstrap/`. To disable this\n// behavior\x2C pass `--no-node-snapshot` when starting the process so that\n// Node.js actually runs this script to initialize the heap.\n//\n// This script is expected not to perform any asynchronous operations itself\n// when being executed - those should be done in either\n// `lib/internal/process/pre_execution.js` or in main scripts. It should not\n// query any run-time states (e.g. command line arguments\x2C environment\n// variables) when being executed - functions in this script that are invoked\n// at a later time can\x2C however\x2C query those states lazily.\n// The majority of the code here focuses on setting up the global object and\n// the process object in a synchronous\x2C environment-independent manner.\n//\n// Scripts run before this file:\n// - `lib/internal/per_context/primordials.js`: this saves copies of JavaScript\n//   builtins that won't be affected by user land monkey-patching for internal\n//   modules to use.\n// - `lib/internal/per_context/domexception.js`: implementation of the\n//   `DOMException` class.\n// - `lib/internal/per_context/messageport.js`: JS-side components of the\n//   `MessagePort` implementation.\n// - `lib/internal/bootstrap/realm.js`: this sets up internal binding and\n//   module loaders\x2C including `process.binding()`\x2C `process._linkedBinding()`\x2C\n//   `internalBinding()` and `BuiltinModule`\x2C and per-realm internal states\n//   and bindings\x2C including `prepare_stack_trace_callback`.\n//\n// The initialization done in this script is included in both the main thread\n// and the worker threads. After this\x2C further initialization is done based\n// on the configuration of the Node.js instance by executing the scripts in\n// `lib/internal/bootstrap/switches/`.\n//\n// Then\x2C depending on how the Node.js instance is launched\x2C one of the main\n// scripts in `lib/internal/main` will be selected by C++ to start the actual\n// execution. They may run additional setups exported by\n// `lib/internal/process/pre_execution.js` depending on the run-time states.\n\n'use strict';\n\n// This file is compiled as if it's wrapped in a function with arguments\n// passed by `BuiltinLoader::CompileAndCall()`.\n/* global process\x2C require\x2C internalBinding\x2C primordials */\n\nconst {\n  FunctionPrototypeCall\x2C\n  JSONParse\x2C\n  Number\x2C\n  NumberIsNaN\x2C\n  ObjectDefineProperty\x2C\n  ObjectGetPrototypeOf\x2C\n  ObjectSetPrototypeOf\x2C\n  ObjectFreeze\x2C\n  SymbolToStringTag\x2C\n  globalThis\x2C\n} = primordials;\nconst config = internalBinding('config');\nconst internalTimers = require('internal/timers');\nconst {\n  defineOperation\x2C\n  deprecate\x2C\n} = require('internal/util');\nconst {\n  validateInteger\x2C\n} = require('internal/validators');\nconst {\n  constants: {\n    kExitCode\x2C\n    kExiting\x2C\n    kHasExitCode\x2C\n  }\x2C\n  privateSymbols: {\n    exit_info_private_symbol\x2C\n  }\x2C\n} = internalBinding('util');\n\nsetupProcessObject();\n\nsetupGlobalProxy();\nsetupBuffer();\n\nprocess.domain = null;\n\n// process._exiting and process.exitCode\n{\n  const fields = process[exit_info_private_symbol];\n  ObjectDefineProperty(process\x2C '_exiting'\x2C {\n    __proto__: null\x2C\n    get() {\n      return fields[kExiting] === 1;\n    }\x2C\n    set(value) {\n      fields[kExiting] = value ? 1 : 0;\n    }\x2C\n    enumerable: true\x2C\n    configurable: true\x2C\n  });\n\n  let exitCode;\n  ObjectDefineProperty(process\x2C 'exitCode'\x2C {\n    __proto__: null\x2C\n    get() {\n      return exitCode;\n    }\x2C\n    set(code) {\n      if (code !== null && code !== undefined) {\n        let value = code;\n        if (typeof code === 'string' && code !== '' &&\n          NumberIsNaN((value = Number(code)))) {\n          value = code;\n        }\n        validateInteger(value\x2C 'code');\n        fields[kExitCode] = value;\n        fields[kHasExitCode] = 1;\n      } else {\n        fields[kHasExitCode] = 0;\n      }\n      exitCode = code;\n    }\x2C\n    enumerable: true\x2C\n    configurable: false\x2C\n  });\n}\nprocess._exiting = false;\n\n// process.config is serialized config.gypi\nconst binding = internalBinding('builtins');\n\nconst processConfig = JSONParse(binding.config\x2C (_key\x2C value) => {\n  // The `reviver` argument of the JSONParse method will visit all the values of\n  // the parsed config\x2C including the "root" object\x2C so there is no need to\n  // explicitly freeze the config outside of this method\n  return ObjectFreeze(value);\n});\n\nObjectDefineProperty(process\x2C 'config'\x2C {\n  __proto__: null\x2C\n  enumerable: true\x2C\n  configurable: true\x2C\n  value: processConfig\x2C\n});\n\nrequire('internal/worker/js_transferable').setup();\n\n// Bootstrappers for all threads\x2C including worker threads and main thread\nconst perThreadSetup = require('internal/process/per_thread');\nconst rawMethods = internalBinding('process_methods');\n\n// Set up methods on the process object for all threads\n{\n  process.dlopen = rawMethods.dlopen;\n  process.uptime = rawMethods.uptime;\n\n  // TODO(joyeecheung): either remove them or make them public\n  process._getActiveRequests = rawMethods._getActiveRequests;\n  process._getActiveHandles = rawMethods._getActiveHandles;\n  process.getActiveResourcesInfo = rawMethods.getActiveResourcesInfo;\n\n  // TODO(joyeecheung): remove these\n  process.reallyExit = rawMethods.reallyExit;\n  process._kill = rawMethods._kill;\n\n  const wrapped = perThreadSetup.wrapProcessMethods(rawMethods);\n  process._rawDebug = wrapped._rawDebug;\n  process.cpuUsage = wrapped.cpuUsage;\n  process.resourceUsage = wrapped.resourceUsage;\n  process.memoryUsage = wrapped.memoryUsage;\n  process.constrainedMemory = rawMethods.constrainedMemory;\n  process.kill = wrapped.kill;\n  process.exit = wrapped.exit;\n\n  process.hrtime = perThreadSetup.hrtime;\n  process.hrtime.bigint = perThreadSetup.hrtimeBigInt;\n\n  process.openStdin = function() {\n    process.stdin.resume();\n    return process.stdin;\n  };\n}\n\nconst credentials = internalBinding('credentials');\nif (credentials.implementsPosixCredentials) {\n  process.getuid = credentials.getuid;\n  process.geteuid = credentials.geteuid;\n  process.getgid = credentials.getgid;\n  process.getegid = credentials.getegid;\n  process.getgroups = credentials.getgroups;\n}\n\n// Setup the callbacks that node::AsyncWrap will call when there are hooks to\n// process. They use the same functions as the JS embedder API. These callbacks\n// are setup immediately to prevent async_wrap.setupHooks() from being hijacked\n// and the cost of doing so is negligible.\nconst { nativeHooks } = require('internal/async_hooks');\ninternalBinding('async_wrap').setupHooks(nativeHooks);\n\nconst {\n  setupTaskQueue\x2C\n} = require('internal/process/task_queues');\nconst timers = require('timers');\n// Non-standard extensions:\ndefineOperation(globalThis\x2C 'clearImmediate'\x2C timers.clearImmediate);\ndefineOperation(globalThis\x2C 'setImmediate'\x2C timers.setImmediate);\n\n// Set the per-Environment callback that will be called\n// when the TrackingTraceStateObserver updates trace state.\n// Note that when NODE_USE_V8_PLATFORM is true\x2C the observer is\n// attached to the per-process TracingController.\nconst { setTraceCategoryStateUpdateHandler } = internalBinding('trace_events');\nsetTraceCategoryStateUpdateHandler(perThreadSetup.toggleTraceCategoryState);\n\n// process.allowedNodeEnvironmentFlags\nObjectDefineProperty(process\x2C 'allowedNodeEnvironmentFlags'\x2C {\n  __proto__: null\x2C\n  get() {\n    const flags = perThreadSetup.buildAllowedFlags();\n    process.allowedNodeEnvironmentFlags = flags;\n    return process.allowedNodeEnvironmentFlags;\n  }\x2C\n  // If the user tries to set this to another value\x2C override\n  // this completely to that value.\n  set(value) {\n    ObjectDefineProperty(this\x2C 'allowedNodeEnvironmentFlags'\x2C {\n      __proto__: null\x2C\n      value\x2C\n      configurable: true\x2C\n      enumerable: true\x2C\n      writable: true\x2C\n    });\n  }\x2C\n  enumerable: true\x2C\n  configurable: true\x2C\n});\n\n// process.assert\nprocess.assert = deprecate(\n  perThreadSetup.assert\x2C\n  'process.assert() is deprecated. Please use the `assert` module instead.'\x2C\n  'DEP0100');\n\n// TODO(joyeecheung): this property has not been well-maintained\x2C should we\n// deprecate it in favor of a better API?\nconst { isDebugBuild\x2C hasOpenSSL\x2C hasInspector } = config;\nconst features = {\n  inspector: hasInspector\x2C\n  debug: isDebugBuild\x2C\n  uv: true\x2C\n  ipv6: true\x2C  // TODO(bnoordhuis) ping libuv\n  tls_alpn: hasOpenSSL\x2C\n  tls_sni: hasOpenSSL\x2C\n  tls_ocsp: hasOpenSSL\x2C\n  tls: hasOpenSSL\x2C\n  // This needs to be dynamic because --no-node-snapshot disables the\n  // code cache even if the binary is built with embedded code cache.\n  get cached_builtins() {\n    return binding.hasCachedBuiltins();\n  }\x2C\n};\n\nObjectDefineProperty(process\x2C 'features'\x2C {\n  __proto__: null\x2C\n  enumerable: true\x2C\n  writable: false\x2C\n  configurable: false\x2C\n  value: features\x2C\n});\n\n{\n  const {\n    onGlobalUncaughtException\x2C\n    setUncaughtExceptionCaptureCallback\x2C\n    hasUncaughtExceptionCaptureCallback\x2C\n  } = require('internal/process/execution');\n\n  // For legacy reasons this is still called `_fatalException`\x2C even\n  // though it is now a global uncaught exception handler.\n  // The C++ land node::errors::TriggerUncaughtException grabs it\n  // from the process object because it has been monkey-patchable.\n  // TODO(joyeecheung): investigate whether process._fatalException\n  // can be deprecated.\n  process._fatalException = onGlobalUncaughtException;\n  process.setUncaughtExceptionCaptureCallback =\n    setUncaughtExceptionCaptureCallback;\n  process.hasUncaughtExceptionCaptureCallback =\n    hasUncaughtExceptionCaptureCallback;\n}\n\nconst { emitWarning } = require('internal/process/warning');\nprocess.emitWarning = emitWarning;\n\n// We initialize the tick callbacks and the timer callbacks last during\n// bootstrap to make sure that any operation done before this are synchronous.\n// If any ticks or timers are scheduled before this they are unlikely to work.\n{\n  const { nextTick\x2C runNextTicks } = setupTaskQueue();\n  process.nextTick = nextTick;\n  // Used to emulate a tick manually in the JS land.\n  // A better name for this function would be `runNextTicks` but\n  // it has been exposed to the process object so we keep this legacy name\n  // TODO(joyeecheung): either remove it or make it public\n  process._tickCallback = runNextTicks;\n\n  const { setupTimers } = internalBinding('timers');\n  const {\n    processImmediate\x2C\n    processTimers\x2C\n  } = internalTimers.getTimerCallbacks(runNextTicks);\n  // Sets two per-Environment callbacks that will be run from libuv:\n  // - processImmediate will be run in the callback of the per-Environment\n  //   check handle.\n  // - processTimers will be run in the callback of the per-Environment timer.\n  setupTimers(processImmediate\x2C processTimers);\n  // Note: only after this point are the timers effective\n}\n\n{\n  const {\n    getSourceMapsEnabled\x2C\n    setSourceMapsEnabled\x2C\n    maybeCacheGeneratedSourceMap\x2C\n  } = require('internal/source_map/source_map_cache');\n  const {\n    setMaybeCacheGeneratedSourceMap\x2C\n  } = internalBinding('errors');\n\n  ObjectDefineProperty(process\x2C 'sourceMapsEnabled'\x2C {\n    __proto__: null\x2C\n    enumerable: true\x2C\n    configurable: true\x2C\n    get() {\n      return getSourceMapsEnabled();\n    }\x2C\n  });\n  process.setSourceMapsEnabled = setSourceMapsEnabled;\n  // The C++ land calls back to maybeCacheGeneratedSourceMap()\n  // when code is generated by user with eval() or new Function()\n  // to cache the source maps from the evaluated code\x2C if any.\n  setMaybeCacheGeneratedSourceMap(maybeCacheGeneratedSourceMap);\n}\n\nfunction setupProcessObject() {\n  const EventEmitter = require('events');\n  const origProcProto = ObjectGetPrototypeOf(process);\n  ObjectSetPrototypeOf(origProcProto\x2C EventEmitter.prototype);\n  FunctionPrototypeCall(EventEmitter\x2C process);\n  ObjectDefineProperty(process\x2C SymbolToStringTag\x2C {\n    __proto__: null\x2C\n    enumerable: false\x2C\n    writable: true\x2C\n    configurable: false\x2C\n    value: 'process'\x2C\n  });\n\n  // Create global.process as getters so that we have a\n  // deprecation path for these in ES Modules.\n  // See https://github.com/nodejs/node/pull/26334.\n  let _process = process;\n  ObjectDefineProperty(globalThis\x2C 'process'\x2C {\n    __proto__: null\x2C\n    get() {\n      return _process;\n    }\x2C\n    set(value) {\n      _process = value;\n    }\x2C\n    enumerable: false\x2C\n    configurable: true\x2C\n  });\n}\n\nfunction setupGlobalProxy() {\n  ObjectDefineProperty(globalThis\x2C SymbolToStringTag\x2C {\n    __proto__: null\x2C\n    value: 'global'\x2C\n    writable: false\x2C\n    enumerable: false\x2C\n    configurable: true\x2C\n  });\n  globalThis.global = globalThis;\n}\n\nfunction setupBuffer() {\n  const {\n    Buffer\x2C\n  } = require('buffer');\n  const bufferBinding = internalBinding('buffer');\n\n  // Only after this point can C++ use Buffer::New()\n  bufferBinding.setBufferPrototype(Buffer.prototype);\n  delete bufferBinding.setBufferPrototype;\n\n  // Create global.Buffer as getters so that we have a\n  // deprecation path for these in ES Modules.\n  // See https://github.com/nodejs/node/pull/26334.\n  let _Buffer = Buffer;\n  ObjectDefineProperty(globalThis\x2C 'Buffer'\x2C {\n    __proto__: null\x2C\n    get() {\n      return _Buffer;\n    }\x2C\n    set(value) {\n      _Buffer = value;\n    }\x2C\n    enumerable: false\x2C\n    configurable: true\x2C\n  });\n}\n
code-source-info,0x72b2106444,12,4131,4547,C0O4146C8O4209C11O4223C19O4260C28O4280C35O4301C38O4301C43O4280C49O4329C54O4361C64O4361C69O4401C78O4408C83O4419C87O4436C94O4443C99O4457C105O4485C114O4492C118O4506C122O4525C124O4534C131O4546,,
tick,0x7ff8093038b3,30833,0,0x0,3,0x109ba30d0,0x72b2105ead,0x72b2102de4,0x723b73ff14,0x723b73f9b2
code-creation,JS,10,30990,0x72b2107394,189,resolve node:path:1095:10,0x72e2e9b030,~
script-source,34,node:path,// Copyright Joyent\x2C Inc. and other Node contributors.\n//\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\n// copy of this software and associated documentation files (the\n// "Software")\x2C to deal in the Software without restriction\x2C including\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\n// persons to whom the Software is furnished to do so\x2C subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nconst {\n  FunctionPrototypeBind\x2C\n  StringPrototypeCharCodeAt\x2C\n  StringPrototypeIndexOf\x2C\n  StringPrototypeLastIndexOf\x2C\n  StringPrototypeReplace\x2C\n  StringPrototypeSlice\x2C\n  StringPrototypeToLowerCase\x2C\n} = primordials;\n\nconst {\n  CHAR_UPPERCASE_A\x2C\n  CHAR_LOWERCASE_A\x2C\n  CHAR_UPPERCASE_Z\x2C\n  CHAR_LOWERCASE_Z\x2C\n  CHAR_DOT\x2C\n  CHAR_FORWARD_SLASH\x2C\n  CHAR_BACKWARD_SLASH\x2C\n  CHAR_COLON\x2C\n  CHAR_QUESTION_MARK\x2C\n} = require('internal/constants');\nconst {\n  validateObject\x2C\n  validateString\x2C\n} = require('internal/validators');\n\nconst platformIsWin32 = (process.platform === 'win32');\n\nfunction isPathSeparator(code) {\n  return code === CHAR_FORWARD_SLASH || code === CHAR_BACKWARD_SLASH;\n}\n\nfunction isPosixPathSeparator(code) {\n  return code === CHAR_FORWARD_SLASH;\n}\n\nfunction isWindowsDeviceRoot(code) {\n  return (code >= CHAR_UPPERCASE_A && code <= CHAR_UPPERCASE_Z) ||\n         (code >= CHAR_LOWERCASE_A && code <= CHAR_LOWERCASE_Z);\n}\n\n// Resolves . and .. elements in a path with directory names\nfunction normalizeString(path\x2C allowAboveRoot\x2C separator\x2C isPathSeparator) {\n  let res = '';\n  let lastSegmentLength = 0;\n  let lastSlash = -1;\n  let dots = 0;\n  let code = 0;\n  for (let i = 0; i <= path.length; ++i) {\n    if (i < path.length)\n      code = StringPrototypeCharCodeAt(path\x2C i);\n    else if (isPathSeparator(code))\n      break;\n    else\n      code = CHAR_FORWARD_SLASH;\n\n    if (isPathSeparator(code)) {\n      if (lastSlash === i - 1 || dots === 1) {\n        // NOOP\n      } else if (dots === 2) {\n        if (res.length < 2 || lastSegmentLength !== 2 ||\n            StringPrototypeCharCodeAt(res\x2C res.length - 1) !== CHAR_DOT ||\n            StringPrototypeCharCodeAt(res\x2C res.length - 2) !== CHAR_DOT) {\n          if (res.length > 2) {\n            const lastSlashIndex = StringPrototypeLastIndexOf(res\x2C separator);\n            if (lastSlashIndex === -1) {\n              res = '';\n              lastSegmentLength = 0;\n            } else {\n              res = StringPrototypeSlice(res\x2C 0\x2C lastSlashIndex);\n              lastSegmentLength =\n                res.length - 1 - StringPrototypeLastIndexOf(res\x2C separator);\n            }\n            lastSlash = i;\n            dots = 0;\n            continue;\n          } else if (res.length !== 0) {\n            res = '';\n            lastSegmentLength = 0;\n            lastSlash = i;\n            dots = 0;\n            continue;\n          }\n        }\n        if (allowAboveRoot) {\n          res += res.length > 0 ? `${separator}..` : '..';\n          lastSegmentLength = 2;\n        }\n      } else {\n        if (res.length > 0)\n          res += `${separator}${StringPrototypeSlice(path\x2C lastSlash + 1\x2C i)}`;\n        else\n          res = StringPrototypeSlice(path\x2C lastSlash + 1\x2C i);\n        lastSegmentLength = i - lastSlash - 1;\n      }\n      lastSlash = i;\n      dots = 0;\n    } else if (code === CHAR_DOT && dots !== -1) {\n      ++dots;\n    } else {\n      dots = -1;\n    }\n  }\n  return res;\n}\n\nfunction formatExt(ext) {\n  return ext ? `${ext[0] === '.' ? '' : '.'}${ext}` : '';\n}\n\n/**\n * @param {string} sep\n * @param {{\n *  dir?: string;\n *  root?: string;\n *  base?: string;\n *  name?: string;\n *  ext?: string;\n *  }} pathObject\n * @returns {string}\n */\nfunction _format(sep\x2C pathObject) {\n  validateObject(pathObject\x2C 'pathObject');\n  const dir = pathObject.dir || pathObject.root;\n  const base = pathObject.base ||\n    `${pathObject.name || ''}${formatExt(pathObject.ext)}`;\n  if (!dir) {\n    return base;\n  }\n  return dir === pathObject.root ? `${dir}${base}` : `${dir}${sep}${base}`;\n}\n\nconst win32 = {\n  /**\n   * path.resolve([from ...]\x2C to)\n   * @param {...string} args\n   * @returns {string}\n   */\n  resolve(...args) {\n    let resolvedDevice = '';\n    let resolvedTail = '';\n    let resolvedAbsolute = false;\n\n    for (let i = args.length - 1; i >= -1; i--) {\n      let path;\n      if (i >= 0) {\n        path = args[i];\n        validateString(path\x2C `paths[${i}]`);\n\n        // Skip empty entries\n        if (path.length === 0) {\n          continue;\n        }\n      } else if (resolvedDevice.length === 0) {\n        path = process.cwd();\n      } else {\n        // Windows has the concept of drive-specific current working\n        // directories. If we've resolved a drive letter but not yet an\n        // absolute path\x2C get cwd for that drive\x2C or the process cwd if\n        // the drive cwd is not available. We're sure the device is not\n        // a UNC path at this points\x2C because UNC paths are always absolute.\n        path = process.env[`=${resolvedDevice}`] || process.cwd();\n\n        // Verify that a cwd was found and that it actually points\n        // to our drive. If not\x2C default to the drive's root.\n        if (path === undefined ||\n            (StringPrototypeToLowerCase(StringPrototypeSlice(path\x2C 0\x2C 2)) !==\n            StringPrototypeToLowerCase(resolvedDevice) &&\n            StringPrototypeCharCodeAt(path\x2C 2) === CHAR_BACKWARD_SLASH)) {\n          path = `${resolvedDevice}\\\\`;\n        }\n      }\n\n      const len = path.length;\n      let rootEnd = 0;\n      let device = '';\n      let isAbsolute = false;\n      const code = StringPrototypeCharCodeAt(path\x2C 0);\n\n      // Try to match a root\n      if (len === 1) {\n        if (isPathSeparator(code)) {\n          // `path` contains just a path separator\n          rootEnd = 1;\n          isAbsolute = true;\n        }\n      } else if (isPathSeparator(code)) {\n        // Possible UNC root\n\n        // If we started with a separator\x2C we know we at least have an\n        // absolute path of some kind (UNC or otherwise)\n        isAbsolute = true;\n\n        if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C 1))) {\n          // Matched double path separator at beginning\n          let j = 2;\n          let last = j;\n          // Match 1 or more non-path separators\n          while (j < len &&\n                 !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\n            j++;\n          }\n          if (j < len && j !== last) {\n            const firstPart = StringPrototypeSlice(path\x2C last\x2C j);\n            // Matched!\n            last = j;\n            // Match 1 or more path separators\n            while (j < len &&\n                   isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\n              j++;\n            }\n            if (j < len && j !== last) {\n              // Matched!\n              last = j;\n              // Match 1 or more non-path separators\n              while (j < len &&\n                     !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\n                j++;\n              }\n              if (j === len || j !== last) {\n                // We matched a UNC root\n                device =\n                  `\\\\\\\\${firstPart}\\\\${StringPrototypeSlice(path\x2C last\x2C j)}`;\n                rootEnd = j;\n              }\n            }\n          }\n        } else {\n          rootEnd = 1;\n        }\n      } else if (isWindowsDeviceRoot(code) &&\n                  StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON) {\n        // Possible device root\n        device = StringPrototypeSlice(path\x2C 0\x2C 2);\n        rootEnd = 2;\n        if (len > 2 && isPathSeparator(StringPrototypeCharCodeAt(path\x2C 2))) {\n          // Treat separator following drive name as an absolute path\n          // indicator\n          isAbsolute = true;\n          rootEnd = 3;\n        }\n      }\n\n      if (device.length > 0) {\n        if (resolvedDevice.length > 0) {\n          if (StringPrototypeToLowerCase(device) !==\n              StringPrototypeToLowerCase(resolvedDevice))\n            // This path points to another device so it is not applicable\n            continue;\n        } else {\n          resolvedDevice = device;\n        }\n      }\n\n      if (resolvedAbsolute) {\n        if (resolvedDevice.length > 0)\n          break;\n      } else {\n        resolvedTail =\n          `${StringPrototypeSlice(path\x2C rootEnd)}\\\\${resolvedTail}`;\n        resolvedAbsolute = isAbsolute;\n        if (isAbsolute && resolvedDevice.length > 0) {\n          break;\n        }\n      }\n    }\n\n    // At this point the path should be resolved to a full absolute path\x2C\n    // but handle relative paths to be safe (might happen when process.cwd()\n    // fails)\n\n    // Normalize the tail path\n    resolvedTail = normalizeString(resolvedTail\x2C !resolvedAbsolute\x2C '\\\\'\x2C\n                                   isPathSeparator);\n\n    return resolvedAbsolute ?\n      `${resolvedDevice}\\\\${resolvedTail}` :\n      `${resolvedDevice}${resolvedTail}` || '.';\n  }\x2C\n\n  /**\n   * @param {string} path\n   * @returns {string}\n   */\n  normalize(path) {\n    validateString(path\x2C 'path');\n    const len = path.length;\n    if (len === 0)\n      return '.';\n    let rootEnd = 0;\n    let device;\n    let isAbsolute = false;\n    const code = StringPrototypeCharCodeAt(path\x2C 0);\n\n    // Try to match a root\n    if (len === 1) {\n      // `path` contains just a single char\x2C exit early to avoid\n      // unnecessary work\n      return isPosixPathSeparator(code) ? '\\\\' : path;\n    }\n    if (isPathSeparator(code)) {\n      // Possible UNC root\n\n      // If we started with a separator\x2C we know we at least have an absolute\n      // path of some kind (UNC or otherwise)\n      isAbsolute = true;\n\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C 1))) {\n        // Matched double path separator at beginning\n        let j = 2;\n        let last = j;\n        // Match 1 or more non-path separators\n        while (j < len &&\n               !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\n          j++;\n        }\n        if (j < len && j !== last) {\n          const firstPart = StringPrototypeSlice(path\x2C last\x2C j);\n          // Matched!\n          last = j;\n          // Match 1 or more path separators\n          while (j < len &&\n                 isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\n            j++;\n          }\n          if (j < len && j !== last) {\n            // Matched!\n            last = j;\n            // Match 1 or more non-path separators\n            while (j < len &&\n                   !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\n              j++;\n            }\n            if (j === len) {\n              // We matched a UNC root only\n              // Return the normalized version of the UNC root since there\n              // is nothing left to process\n              return `\\\\\\\\${firstPart}\\\\${StringPrototypeSlice(path\x2C last)}\\\\`;\n            }\n            if (j !== last) {\n              // We matched a UNC root with leftovers\n              device =\n                `\\\\\\\\${firstPart}\\\\${StringPrototypeSlice(path\x2C last\x2C j)}`;\n              rootEnd = j;\n            }\n          }\n        }\n      } else {\n        rootEnd = 1;\n      }\n    } else if (isWindowsDeviceRoot(code) &&\n               StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON) {\n      // Possible device root\n      device = StringPrototypeSlice(path\x2C 0\x2C 2);\n      rootEnd = 2;\n      if (len > 2 && isPathSeparator(StringPrototypeCharCodeAt(path\x2C 2))) {\n        // Treat separator following drive name as an absolute path\n        // indicator\n        isAbsolute = true;\n        rootEnd = 3;\n      }\n    }\n\n    let tail = rootEnd < len ?\n      normalizeString(StringPrototypeSlice(path\x2C rootEnd)\x2C\n                      !isAbsolute\x2C '\\\\'\x2C isPathSeparator) :\n      '';\n    if (tail.length === 0 && !isAbsolute)\n      tail = '.';\n    if (tail.length > 0 &&\n        isPathSeparator(StringPrototypeCharCodeAt(path\x2C len - 1)))\n      tail += '\\\\';\n    if (device === undefined) {\n      return isAbsolute ? `\\\\${tail}` : tail;\n    }\n    return isAbsolute ? `${device}\\\\${tail}` : `${device}${tail}`;\n  }\x2C\n\n  /**\n   * @param {string} path\n   * @returns {boolean}\n   */\n  isAbsolute(path) {\n    validateString(path\x2C 'path');\n    const len = path.length;\n    if (len === 0)\n      return false;\n\n    const code = StringPrototypeCharCodeAt(path\x2C 0);\n    return isPathSeparator(code) ||\n      // Possible device root\n      (len > 2 &&\n      isWindowsDeviceRoot(code) &&\n      StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON &&\n      isPathSeparator(StringPrototypeCharCodeAt(path\x2C 2)));\n  }\x2C\n\n  /**\n   * @param {...string} args\n   * @returns {string}\n   */\n  join(...args) {\n    if (args.length === 0)\n      return '.';\n\n    let joined;\n    let firstPart;\n    for (let i = 0; i < args.length; ++i) {\n      const arg = args[i];\n      validateString(arg\x2C 'path');\n      if (arg.length > 0) {\n        if (joined === undefined)\n          joined = firstPart = arg;\n        else\n          joined += `\\\\${arg}`;\n      }\n    }\n\n    if (joined === undefined)\n      return '.';\n\n    // Make sure that the joined path doesn't start with two slashes\x2C because\n    // normalize() will mistake it for a UNC path then.\n    //\n    // This step is skipped when it is very clear that the user actually\n    // intended to point at a UNC path. This is assumed when the first\n    // non-empty string arguments starts with exactly two slashes followed by\n    // at least one more non-slash character.\n    //\n    // Note that for normalize() to treat a path as a UNC path it needs to\n    // have at least 2 components\x2C so we don't filter for that here.\n    // This means that the user can use join to construct UNC paths from\n    // a server name and a share name; for example:\n    //   path.join('//server'\x2C 'share') -> '\\\\\\\\server\\\\share\\\\')\n    let needsReplace = true;\n    let slashCount = 0;\n    if (isPathSeparator(StringPrototypeCharCodeAt(firstPart\x2C 0))) {\n      ++slashCount;\n      const firstLen = firstPart.length;\n      if (firstLen > 1 &&\n          isPathSeparator(StringPrototypeCharCodeAt(firstPart\x2C 1))) {\n        ++slashCount;\n        if (firstLen > 2) {\n          if (isPathSeparator(StringPrototypeCharCodeAt(firstPart\x2C 2)))\n            ++slashCount;\n          else {\n            // We matched a UNC path in the first part\n            needsReplace = false;\n          }\n        }\n      }\n    }\n    if (needsReplace) {\n      // Find any more consecutive slashes we need to replace\n      while (slashCount < joined.length &&\n             isPathSeparator(StringPrototypeCharCodeAt(joined\x2C slashCount))) {\n        slashCount++;\n      }\n\n      // Replace the slashes if needed\n      if (slashCount >= 2)\n        joined = `\\\\${StringPrototypeSlice(joined\x2C slashCount)}`;\n    }\n\n    return win32.normalize(joined);\n  }\x2C\n\n  /**\n   * It will solve the relative path from `from` to `to`\x2C for instance\n   * from = 'C:\\\\orandea\\\\test\\\\aaa'\n   * to = 'C:\\\\orandea\\\\impl\\\\bbb'\n   * The output of the function should be: '..\\\\..\\\\impl\\\\bbb'\n   * @param {string} from\n   * @param {string} to\n   * @returns {string}\n   */\n  relative(from\x2C to) {\n    validateString(from\x2C 'from');\n    validateString(to\x2C 'to');\n\n    if (from === to)\n      return '';\n\n    const fromOrig = win32.resolve(from);\n    const toOrig = win32.resolve(to);\n\n    if (fromOrig === toOrig)\n      return '';\n\n    from = StringPrototypeToLowerCase(fromOrig);\n    to = StringPrototypeToLowerCase(toOrig);\n\n    if (from === to)\n      return '';\n\n    // Trim any leading backslashes\n    let fromStart = 0;\n    while (fromStart < from.length &&\n           StringPrototypeCharCodeAt(from\x2C fromStart) === CHAR_BACKWARD_SLASH) {\n      fromStart++;\n    }\n    // Trim trailing backslashes (applicable to UNC paths only)\n    let fromEnd = from.length;\n    while (\n      fromEnd - 1 > fromStart &&\n      StringPrototypeCharCodeAt(from\x2C fromEnd - 1) === CHAR_BACKWARD_SLASH\n    ) {\n      fromEnd--;\n    }\n    const fromLen = fromEnd - fromStart;\n\n    // Trim any leading backslashes\n    let toStart = 0;\n    while (toStart < to.length &&\n           StringPrototypeCharCodeAt(to\x2C toStart) === CHAR_BACKWARD_SLASH) {\n      toStart++;\n    }\n    // Trim trailing backslashes (applicable to UNC paths only)\n    let toEnd = to.length;\n    while (toEnd - 1 > toStart &&\n           StringPrototypeCharCodeAt(to\x2C toEnd - 1) === CHAR_BACKWARD_SLASH) {\n      toEnd--;\n    }\n    const toLen = toEnd - toStart;\n\n    // Compare paths to find the longest common path from root\n    const length = fromLen < toLen ? fromLen : toLen;\n    let lastCommonSep = -1;\n    let i = 0;\n    for (; i < length; i++) {\n      const fromCode = StringPrototypeCharCodeAt(from\x2C fromStart + i);\n      if (fromCode !== StringPrototypeCharCodeAt(to\x2C toStart + i))\n        break;\n      else if (fromCode === CHAR_BACKWARD_SLASH)\n        lastCommonSep = i;\n    }\n\n    // We found a mismatch before the first common path separator was seen\x2C so\n    // return the original `to`.\n    if (i !== length) {\n      if (lastCommonSep === -1)\n        return toOrig;\n    } else {\n      if (toLen > length) {\n        if (StringPrototypeCharCodeAt(to\x2C toStart + i) ===\n            CHAR_BACKWARD_SLASH) {\n          // We get here if `from` is the exact base path for `to`.\n          // For example: from='C:\\\\foo\\\\bar'; to='C:\\\\foo\\\\bar\\\\baz'\n          return StringPrototypeSlice(toOrig\x2C toStart + i + 1);\n        }\n        if (i === 2) {\n          // We get here if `from` is the device root.\n          // For example: from='C:\\\\'; to='C:\\\\foo'\n          return StringPrototypeSlice(toOrig\x2C toStart + i);\n        }\n      }\n      if (fromLen > length) {\n        if (StringPrototypeCharCodeAt(from\x2C fromStart + i) ===\n            CHAR_BACKWARD_SLASH) {\n          // We get here if `to` is the exact base path for `from`.\n          // For example: from='C:\\\\foo\\\\bar'; to='C:\\\\foo'\n          lastCommonSep = i;\n        } else if (i === 2) {\n          // We get here if `to` is the device root.\n          // For example: from='C:\\\\foo\\\\bar'; to='C:\\\\'\n          lastCommonSep = 3;\n        }\n      }\n      if (lastCommonSep === -1)\n        lastCommonSep = 0;\n    }\n\n    let out = '';\n    // Generate the relative path based on the path difference between `to` and\n    // `from`\n    for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n      if (i === fromEnd ||\n          StringPrototypeCharCodeAt(from\x2C i) === CHAR_BACKWARD_SLASH) {\n        out += out.length === 0 ? '..' : '\\\\..';\n      }\n    }\n\n    toStart += lastCommonSep;\n\n    // Lastly\x2C append the rest of the destination (`to`) path that comes after\n    // the common path parts\n    if (out.length > 0)\n      return `${out}${StringPrototypeSlice(toOrig\x2C toStart\x2C toEnd)}`;\n\n    if (StringPrototypeCharCodeAt(toOrig\x2C toStart) === CHAR_BACKWARD_SLASH)\n      ++toStart;\n    return StringPrototypeSlice(toOrig\x2C toStart\x2C toEnd);\n  }\x2C\n\n  /**\n   * @param {string} path\n   * @returns {string}\n   */\n  toNamespacedPath(path) {\n    // Note: this will *probably* throw somewhere.\n    if (typeof path !== 'string' || path.length === 0)\n      return path;\n\n    const resolvedPath = win32.resolve(path);\n\n    if (resolvedPath.length <= 2)\n      return path;\n\n    if (StringPrototypeCharCodeAt(resolvedPath\x2C 0) === CHAR_BACKWARD_SLASH) {\n      // Possible UNC root\n      if (StringPrototypeCharCodeAt(resolvedPath\x2C 1) === CHAR_BACKWARD_SLASH) {\n        const code = StringPrototypeCharCodeAt(resolvedPath\x2C 2);\n        if (code !== CHAR_QUESTION_MARK && code !== CHAR_DOT) {\n          // Matched non-long UNC root\x2C convert the path to a long UNC path\n          return `\\\\\\\\?\\\\UNC\\\\${StringPrototypeSlice(resolvedPath\x2C 2)}`;\n        }\n      }\n    } else if (\n      isWindowsDeviceRoot(StringPrototypeCharCodeAt(resolvedPath\x2C 0)) &&\n      StringPrototypeCharCodeAt(resolvedPath\x2C 1) === CHAR_COLON &&\n      StringPrototypeCharCodeAt(resolvedPath\x2C 2) === CHAR_BACKWARD_SLASH\n    ) {\n      // Matched device root\x2C convert the path to a long UNC path\n      return `\\\\\\\\?\\\\${resolvedPath}`;\n    }\n\n    return path;\n  }\x2C\n\n  /**\n   * @param {string} path\n   * @returns {string}\n   */\n  dirname(path) {\n    validateString(path\x2C 'path');\n    const len = path.length;\n    if (len === 0)\n      return '.';\n    let rootEnd = -1;\n    let offset = 0;\n    const code = StringPrototypeCharCodeAt(path\x2C 0);\n\n    if (len === 1) {\n      // `path` contains just a path separator\x2C exit early to avoid\n      // unnecessary work or a dot.\n      return isPathSeparator(code) ? path : '.';\n    }\n\n    // Try to match a root\n    if (isPathSeparator(code)) {\n      // Possible UNC root\n\n      rootEnd = offset = 1;\n\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C 1))) {\n        // Matched double path separator at beginning\n        let j = 2;\n        let last = j;\n        // Match 1 or more non-path separators\n        while (j < len &&\n               !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\n          j++;\n        }\n        if (j < len && j !== last) {\n          // Matched!\n          last = j;\n          // Match 1 or more path separators\n          while (j < len &&\n                 isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\n            j++;\n          }\n          if (j < len && j !== last) {\n            // Matched!\n            last = j;\n            // Match 1 or more non-path separators\n            while (j < len &&\n                   !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\n              j++;\n            }\n            if (j === len) {\n              // We matched a UNC root only\n              return path;\n            }\n            if (j !== last) {\n              // We matched a UNC root with leftovers\n\n              // Offset by 1 to include the separator after the UNC root to\n              // treat it as a "normal root" on top of a (UNC) root\n              rootEnd = offset = j + 1;\n            }\n          }\n        }\n      }\n    // Possible device root\n    } else if (isWindowsDeviceRoot(code) &&\n               StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON) {\n      rootEnd =\n        len > 2 && isPathSeparator(StringPrototypeCharCodeAt(path\x2C 2)) ? 3 : 2;\n      offset = rootEnd;\n    }\n\n    let end = -1;\n    let matchedSlash = true;\n    for (let i = len - 1; i >= offset; --i) {\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C i))) {\n        if (!matchedSlash) {\n          end = i;\n          break;\n        }\n      } else {\n        // We saw the first non-path separator\n        matchedSlash = false;\n      }\n    }\n\n    if (end === -1) {\n      if (rootEnd === -1)\n        return '.';\n\n      end = rootEnd;\n    }\n    return StringPrototypeSlice(path\x2C 0\x2C end);\n  }\x2C\n\n  /**\n   * @param {string} path\n   * @param {string} [suffix]\n   * @returns {string}\n   */\n  basename(path\x2C suffix) {\n    if (suffix !== undefined)\n      validateString(suffix\x2C 'ext');\n    validateString(path\x2C 'path');\n    let start = 0;\n    let end = -1;\n    let matchedSlash = true;\n\n    // Check for a drive letter prefix so as not to mistake the following\n    // path separator as an extra separator at the end of the path that can be\n    // disregarded\n    if (path.length >= 2 &&\n        isWindowsDeviceRoot(StringPrototypeCharCodeAt(path\x2C 0)) &&\n        StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON) {\n      start = 2;\n    }\n\n    if (suffix !== undefined && suffix.length > 0 && suffix.length <= path.length) {\n      if (suffix === path)\n        return '';\n      let extIdx = suffix.length - 1;\n      let firstNonSlashEnd = -1;\n      for (let i = path.length - 1; i >= start; --i) {\n        const code = StringPrototypeCharCodeAt(path\x2C i);\n        if (isPathSeparator(code)) {\n          // If we reached a path separator that was not part of a set of path\n          // separators at the end of the string\x2C stop now\n          if (!matchedSlash) {\n            start = i + 1;\n            break;\n          }\n        } else {\n          if (firstNonSlashEnd === -1) {\n            // We saw the first non-path separator\x2C remember this index in case\n            // we need it if the extension ends up not matching\n            matchedSlash = false;\n            firstNonSlashEnd = i + 1;\n          }\n          if (extIdx >= 0) {\n            // Try to match the explicit extension\n            if (code === StringPrototypeCharCodeAt(suffix\x2C extIdx)) {\n              if (--extIdx === -1) {\n                // We matched the extension\x2C so mark this as the end of our path\n                // component\n                end = i;\n              }\n            } else {\n              // Extension does not match\x2C so our result is the entire path\n              // component\n              extIdx = -1;\n              end = firstNonSlashEnd;\n            }\n          }\n        }\n      }\n\n      if (start === end)\n        end = firstNonSlashEnd;\n      else if (end === -1)\n        end = path.length;\n      return StringPrototypeSlice(path\x2C start\x2C end);\n    }\n    for (let i = path.length - 1; i >= start; --i) {\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C i))) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string\x2C stop now\n        if (!matchedSlash) {\n          start = i + 1;\n          break;\n        }\n      } else if (end === -1) {\n        // We saw the first non-path separator\x2C mark this as the end of our\n        // path component\n        matchedSlash = false;\n        end = i + 1;\n      }\n    }\n\n    if (end === -1)\n      return '';\n    return StringPrototypeSlice(path\x2C start\x2C end);\n  }\x2C\n\n  /**\n   * @param {string} path\n   * @returns {string}\n   */\n  extname(path) {\n    validateString(path\x2C 'path');\n    let start = 0;\n    let startDot = -1;\n    let startPart = 0;\n    let end = -1;\n    let matchedSlash = true;\n    // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n    let preDotState = 0;\n\n    // Check for a drive letter prefix so as not to mistake the following\n    // path separator as an extra separator at the end of the path that can be\n    // disregarded\n\n    if (path.length >= 2 &&\n        StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON &&\n        isWindowsDeviceRoot(StringPrototypeCharCodeAt(path\x2C 0))) {\n      start = startPart = 2;\n    }\n\n    for (let i = path.length - 1; i >= start; --i) {\n      const code = StringPrototypeCharCodeAt(path\x2C i);\n      if (isPathSeparator(code)) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string\x2C stop now\n        if (!matchedSlash) {\n          startPart = i + 1;\n          break;\n        }\n        continue;\n      }\n      if (end === -1) {\n        // We saw the first non-path separator\x2C mark this as the end of our\n        // extension\n        matchedSlash = false;\n        end = i + 1;\n      }\n      if (code === CHAR_DOT) {\n        // If this is our first dot\x2C mark it as the start of our extension\n        if (startDot === -1)\n          startDot = i;\n        else if (preDotState !== 1)\n          preDotState = 1;\n      } else if (startDot !== -1) {\n        // We saw a non-dot and non-path separator before our dot\x2C so we should\n        // have a good chance at having a non-empty extension\n        preDotState = -1;\n      }\n    }\n\n    if (startDot === -1 ||\n        end === -1 ||\n        // We saw a non-dot character immediately before the dot\n        preDotState === 0 ||\n        // The (right-most) trimmed path component is exactly '..'\n        (preDotState === 1 &&\n         startDot === end - 1 &&\n         startDot === startPart + 1)) {\n      return '';\n    }\n    return StringPrototypeSlice(path\x2C startDot\x2C end);\n  }\x2C\n\n  format: FunctionPrototypeBind(_format\x2C null\x2C '\\\\')\x2C\n\n  /**\n   * @param {string} path\n   * @returns {{\n   *  dir: string;\n   *  root: string;\n   *  base: string;\n   *  name: string;\n   *  ext: string;\n   *  }}\n   */\n  parse(path) {\n    validateString(path\x2C 'path');\n\n    const ret = { root: ''\x2C dir: ''\x2C base: ''\x2C ext: ''\x2C name: '' };\n    if (path.length === 0)\n      return ret;\n\n    const len = path.length;\n    let rootEnd = 0;\n    let code = StringPrototypeCharCodeAt(path\x2C 0);\n\n    if (len === 1) {\n      if (isPathSeparator(code)) {\n        // `path` contains just a path separator\x2C exit early to avoid\n        // unnecessary work\n        ret.root = ret.dir = path;\n        return ret;\n      }\n      ret.base = ret.name = path;\n      return ret;\n    }\n    // Try to match a root\n    if (isPathSeparator(code)) {\n      // Possible UNC root\n\n      rootEnd = 1;\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C 1))) {\n        // Matched double path separator at beginning\n        let j = 2;\n        let last = j;\n        // Match 1 or more non-path separators\n        while (j < len &&\n               !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\n          j++;\n        }\n        if (j < len && j !== last) {\n          // Matched!\n          last = j;\n          // Match 1 or more path separators\n          while (j < len &&\n                 isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\n            j++;\n          }\n          if (j < len && j !== last) {\n            // Matched!\n            last = j;\n            // Match 1 or more non-path separators\n            while (j < len &&\n                   !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\n              j++;\n            }\n            if (j === len) {\n              // We matched a UNC root only\n              rootEnd = j;\n            } else if (j !== last) {\n              // We matched a UNC root with leftovers\n              rootEnd = j + 1;\n            }\n          }\n        }\n      }\n    } else if (isWindowsDeviceRoot(code) &&\n               StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON) {\n      // Possible device root\n      if (len <= 2) {\n        // `path` contains just a drive root\x2C exit early to avoid\n        // unnecessary work\n        ret.root = ret.dir = path;\n        return ret;\n      }\n      rootEnd = 2;\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C 2))) {\n        if (len === 3) {\n          // `path` contains just a drive root\x2C exit early to avoid\n          // unnecessary work\n          ret.root = ret.dir = path;\n          return ret;\n        }\n        rootEnd = 3;\n      }\n    }\n    if (rootEnd > 0)\n      ret.root = StringPrototypeSlice(path\x2C 0\x2C rootEnd);\n\n    let startDot = -1;\n    let startPart = rootEnd;\n    let end = -1;\n    let matchedSlash = true;\n    let i = path.length - 1;\n\n    // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n    let preDotState = 0;\n\n    // Get non-dir info\n    for (; i >= rootEnd; --i) {\n      code = StringPrototypeCharCodeAt(path\x2C i);\n      if (isPathSeparator(code)) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string\x2C stop now\n        if (!matchedSlash) {\n          startPart = i + 1;\n          break;\n        }\n        continue;\n      }\n      if (end === -1) {\n        // We saw the first non-path separator\x2C mark this as the end of our\n        // extension\n        matchedSlash = false;\n        end = i + 1;\n      }\n      if (code === CHAR_DOT) {\n        // If this is our first dot\x2C mark it as the start of our extension\n        if (startDot === -1)\n          startDot = i;\n        else if (preDotState !== 1)\n          preDotState = 1;\n      } else if (startDot !== -1) {\n        // We saw a non-dot and non-path separator before our dot\x2C so we should\n        // have a good chance at having a non-empty extension\n        preDotState = -1;\n      }\n    }\n\n    if (end !== -1) {\n      if (startDot === -1 ||\n          // We saw a non-dot character immediately before the dot\n          preDotState === 0 ||\n          // The (right-most) trimmed path component is exactly '..'\n          (preDotState === 1 &&\n           startDot === end - 1 &&\n           startDot === startPart + 1)) {\n        ret.base = ret.name = StringPrototypeSlice(path\x2C startPart\x2C end);\n      } else {\n        ret.name = StringPrototypeSlice(path\x2C startPart\x2C startDot);\n        ret.base = StringPrototypeSlice(path\x2C startPart\x2C end);\n        ret.ext = StringPrototypeSlice(path\x2C startDot\x2C end);\n      }\n    }\n\n    // If the directory is the root\x2C use the entire root as the `dir` including\n    // the trailing slash if any (`C:\\abc` -> `C:\\`). Otherwise\x2C strip out the\n    // trailing slash (`C:\\abc\\def` -> `C:\\abc`).\n    if (startPart > 0 && startPart !== rootEnd)\n      ret.dir = StringPrototypeSlice(path\x2C 0\x2C startPart - 1);\n    else\n      ret.dir = ret.root;\n\n    return ret;\n  }\x2C\n\n  sep: '\\\\'\x2C\n  delimiter: ';'\x2C\n  win32: null\x2C\n  posix: null\x2C\n};\n\nconst posixCwd = (() => {\n  if (platformIsWin32) {\n    // Converts Windows' backslash path separators to POSIX forward slashes\n    // and truncates any drive indicator\n    const regexp = /\\\\/g;\n    return () => {\n      const cwd = StringPrototypeReplace(process.cwd()\x2C regexp\x2C '/');\n      return StringPrototypeSlice(cwd\x2C StringPrototypeIndexOf(cwd\x2C '/'));\n    };\n  }\n\n  // We're already on POSIX\x2C no need for any transformations\n  return () => process.cwd();\n})();\n\nconst posix = {\n  /**\n   * path.resolve([from ...]\x2C to)\n   * @param {...string} args\n   * @returns {string}\n   */\n  resolve(...args) {\n    let resolvedPath = '';\n    let resolvedAbsolute = false;\n\n    for (let i = args.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n      const path = i >= 0 ? args[i] : posixCwd();\n      validateString(path\x2C `paths[${i}]`);\n\n      // Skip empty entries\n      if (path.length === 0) {\n        continue;\n      }\n\n      resolvedPath = `${path}/${resolvedPath}`;\n      resolvedAbsolute =\n        StringPrototypeCharCodeAt(path\x2C 0) === CHAR_FORWARD_SLASH;\n    }\n\n    // At this point the path should be resolved to a full absolute path\x2C but\n    // handle relative paths to be safe (might happen when process.cwd() fails)\n\n    // Normalize the path\n    resolvedPath = normalizeString(resolvedPath\x2C !resolvedAbsolute\x2C '/'\x2C\n                                   isPosixPathSeparator);\n\n    if (resolvedAbsolute) {\n      return `/${resolvedPath}`;\n    }\n    return resolvedPath.length > 0 ? resolvedPath : '.';\n  }\x2C\n\n  /**\n   * @param {string} path\n   * @returns {string}\n   */\n  normalize(path) {\n    validateString(path\x2C 'path');\n\n    if (path.length === 0)\n      return '.';\n\n    const isAbsolute =\n      StringPrototypeCharCodeAt(path\x2C 0) === CHAR_FORWARD_SLASH;\n    const trailingSeparator =\n      StringPrototypeCharCodeAt(path\x2C path.length - 1) === CHAR_FORWARD_SLASH;\n\n    // Normalize the path\n    path = normalizeString(path\x2C !isAbsolute\x2C '/'\x2C isPosixPathSeparator);\n\n    if (path.length === 0) {\n      if (isAbsolute)\n        return '/';\n      return trailingSeparator ? './' : '.';\n    }\n    if (trailingSeparator)\n      path += '/';\n\n    return isAbsolute ? `/${path}` : path;\n  }\x2C\n\n  /**\n   * @param {string} path\n   * @returns {boolean}\n   */\n  isAbsolute(path) {\n    validateString(path\x2C 'path');\n    return path.length > 0 &&\n           StringPrototypeCharCodeAt(path\x2C 0) === CHAR_FORWARD_SLASH;\n  }\x2C\n\n  /**\n   * @param {...string} args\n   * @returns {string}\n   */\n  join(...args) {\n    if (args.length === 0)\n      return '.';\n    let joined;\n    for (let i = 0; i < args.length; ++i) {\n      const arg = args[i];\n      validateString(arg\x2C 'path');\n      if (arg.length > 0) {\n        if (joined === undefined)\n          joined = arg;\n        else\n          joined += `/${arg}`;\n      }\n    }\n    if (joined === undefined)\n      return '.';\n    return posix.normalize(joined);\n  }\x2C\n\n  /**\n   * @param {string} from\n   * @param {string} to\n   * @returns {string}\n   */\n  relative(from\x2C to) {\n    validateString(from\x2C 'from');\n    validateString(to\x2C 'to');\n\n    if (from === to)\n      return '';\n\n    // Trim leading forward slashes.\n    from = posix.resolve(from);\n    to = posix.resolve(to);\n\n    if (from === to)\n      return '';\n\n    const fromStart = 1;\n    const fromEnd = from.length;\n    const fromLen = fromEnd - fromStart;\n    const toStart = 1;\n    const toLen = to.length - toStart;\n\n    // Compare paths to find the longest common path from root\n    const length = (fromLen < toLen ? fromLen : toLen);\n    let lastCommonSep = -1;\n    let i = 0;\n    for (; i < length; i++) {\n      const fromCode = StringPrototypeCharCodeAt(from\x2C fromStart + i);\n      if (fromCode !== StringPrototypeCharCodeAt(to\x2C toStart + i))\n        break;\n      else if (fromCode === CHAR_FORWARD_SLASH)\n        lastCommonSep = i;\n    }\n    if (i === length) {\n      if (toLen > length) {\n        if (StringPrototypeCharCodeAt(to\x2C toStart + i) === CHAR_FORWARD_SLASH) {\n          // We get here if `from` is the exact base path for `to`.\n          // For example: from='/foo/bar'; to='/foo/bar/baz'\n          return StringPrototypeSlice(to\x2C toStart + i + 1);\n        }\n        if (i === 0) {\n          // We get here if `from` is the root\n          // For example: from='/'; to='/foo'\n          return StringPrototypeSlice(to\x2C toStart + i);\n        }\n      } else if (fromLen > length) {\n        if (StringPrototypeCharCodeAt(from\x2C fromStart + i) ===\n            CHAR_FORWARD_SLASH) {\n          // We get here if `to` is the exact base path for `from`.\n          // For example: from='/foo/bar/baz'; to='/foo/bar'\n          lastCommonSep = i;\n        } else if (i === 0) {\n          // We get here if `to` is the root.\n          // For example: from='/foo/bar'; to='/'\n          lastCommonSep = 0;\n        }\n      }\n    }\n\n    let out = '';\n    // Generate the relative path based on the path difference between `to`\n    // and `from`.\n    for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n      if (i === fromEnd ||\n          StringPrototypeCharCodeAt(from\x2C i) === CHAR_FORWARD_SLASH) {\n        out += out.length === 0 ? '..' : '/..';\n      }\n    }\n\n    // Lastly\x2C append the rest of the destination (`to`) path that comes after\n    // the common path parts.\n    return `${out}${StringPrototypeSlice(to\x2C toStart + lastCommonSep)}`;\n  }\x2C\n\n  /**\n   * @param {string} path\n   * @returns {string}\n   */\n  toNamespacedPath(path) {\n    // Non-op on posix systems\n    return path;\n  }\x2C\n\n  /**\n   * @param {string} path\n   * @returns {string}\n   */\n  dirname(path) {\n    validateString(path\x2C 'path');\n    if (path.length === 0)\n      return '.';\n    const hasRoot = StringPrototypeCharCodeAt(path\x2C 0) === CHAR_FORWARD_SLASH;\n    let end = -1;\n    let matchedSlash = true;\n    for (let i = path.length - 1; i >= 1; --i) {\n      if (StringPrototypeCharCodeAt(path\x2C i) === CHAR_FORWARD_SLASH) {\n        if (!matchedSlash) {\n          end = i;\n          break;\n        }\n      } else {\n        // We saw the first non-path separator\n        matchedSlash = false;\n      }\n    }\n\n    if (end === -1)\n      return hasRoot ? '/' : '.';\n    if (hasRoot && end === 1)\n      return '//';\n    return StringPrototypeSlice(path\x2C 0\x2C end);\n  }\x2C\n\n  /**\n   * @param {string} path\n   * @param {string} [suffix]\n   * @returns {string}\n   */\n  basename(path\x2C suffix) {\n    if (suffix !== undefined)\n      validateString(suffix\x2C 'ext');\n    validateString(path\x2C 'path');\n\n    let start = 0;\n    let end = -1;\n    let matchedSlash = true;\n\n    if (suffix !== undefined && suffix.length > 0 && suffix.length <= path.length) {\n      if (suffix === path)\n        return '';\n      let extIdx = suffix.length - 1;\n      let firstNonSlashEnd = -1;\n      for (let i = path.length - 1; i >= 0; --i) {\n        const code = StringPrototypeCharCodeAt(path\x2C i);\n        if (code === CHAR_FORWARD_SLASH) {\n          // If we reached a path separator that was not part of a set of path\n          // separators at the end of the string\x2C stop now\n          if (!matchedSlash) {\n            start = i + 1;\n            break;\n          }\n        } else {\n          if (firstNonSlashEnd === -1) {\n            // We saw the first non-path separator\x2C remember this index in case\n            // we need it if the extension ends up not matching\n            matchedSlash = false;\n            firstNonSlashEnd = i + 1;\n          }\n          if (extIdx >= 0) {\n            // Try to match the explicit extension\n            if (code === StringPrototypeCharCodeAt(suffix\x2C extIdx)) {\n              if (--extIdx === -1) {\n                // We matched the extension\x2C so mark this as the end of our path\n                // component\n                end = i;\n              }\n            } else {\n              // Extension does not match\x2C so our result is the entire path\n              // component\n              extIdx = -1;\n              end = firstNonSlashEnd;\n            }\n          }\n        }\n      }\n\n      if (start === end)\n        end = firstNonSlashEnd;\n      else if (end === -1)\n        end = path.length;\n      return StringPrototypeSlice(path\x2C start\x2C end);\n    }\n    for (let i = path.length - 1; i >= 0; --i) {\n      if (StringPrototypeCharCodeAt(path\x2C i) === CHAR_FORWARD_SLASH) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string\x2C stop now\n        if (!matchedSlash) {\n          start = i + 1;\n          break;\n        }\n      } else if (end === -1) {\n        // We saw the first non-path separator\x2C mark this as the end of our\n        // path component\n        matchedSlash = false;\n        end = i + 1;\n      }\n    }\n\n    if (end === -1)\n      return '';\n    return StringPrototypeSlice(path\x2C start\x2C end);\n  }\x2C\n\n  /**\n   * @param {string} path\n   * @returns {string}\n   */\n  extname(path) {\n    validateString(path\x2C 'path');\n    let startDot = -1;\n    let startPart = 0;\n    let end = -1;\n    let matchedSlash = true;\n    // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n    let preDotState = 0;\n    for (let i = path.length - 1; i >= 0; --i) {\n      const code = StringPrototypeCharCodeAt(path\x2C i);\n      if (code === CHAR_FORWARD_SLASH) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string\x2C stop now\n        if (!matchedSlash) {\n          startPart = i + 1;\n          break;\n        }\n        continue;\n      }\n      if (end === -1) {\n        // We saw the first non-path separator\x2C mark this as the end of our\n        // extension\n        matchedSlash = false;\n        end = i + 1;\n      }\n      if (code === CHAR_DOT) {\n        // If this is our first dot\x2C mark it as the start of our extension\n        if (startDot === -1)\n          startDot = i;\n        else if (preDotState !== 1)\n          preDotState = 1;\n      } else if (startDot !== -1) {\n        // We saw a non-dot and non-path separator before our dot\x2C so we should\n        // have a good chance at having a non-empty extension\n        preDotState = -1;\n      }\n    }\n\n    if (startDot === -1 ||\n        end === -1 ||\n        // We saw a non-dot character immediately before the dot\n        preDotState === 0 ||\n        // The (right-most) trimmed path component is exactly '..'\n        (preDotState === 1 &&\n         startDot === end - 1 &&\n         startDot === startPart + 1)) {\n      return '';\n    }\n    return StringPrototypeSlice(path\x2C startDot\x2C end);\n  }\x2C\n\n  format: FunctionPrototypeBind(_format\x2C null\x2C '/')\x2C\n\n  /**\n   * @param {string} path\n   * @returns {{\n   *   dir: string;\n   *   root: string;\n   *   base: string;\n   *   name: string;\n   *   ext: string;\n   *   }}\n   */\n  parse(path) {\n    validateString(path\x2C 'path');\n\n    const ret = { root: ''\x2C dir: ''\x2C base: ''\x2C ext: ''\x2C name: '' };\n    if (path.length === 0)\n      return ret;\n    const isAbsolute =\n      StringPrototypeCharCodeAt(path\x2C 0) === CHAR_FORWARD_SLASH;\n    let start;\n    if (isAbsolute) {\n      ret.root = '/';\n      start = 1;\n    } else {\n      start = 0;\n    }\n    let startDot = -1;\n    let startPart = 0;\n    let end = -1;\n    let matchedSlash = true;\n    let i = path.length - 1;\n\n    // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n    let preDotState = 0;\n\n    // Get non-dir info\n    for (; i >= start; --i) {\n      const code = StringPrototypeCharCodeAt(path\x2C i);\n      if (code === CHAR_FORWARD_SLASH) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string\x2C stop now\n        if (!matchedSlash) {\n          startPart = i + 1;\n          break;\n        }\n        continue;\n      }\n      if (end === -1) {\n        // We saw the first non-path separator\x2C mark this as the end of our\n        // extension\n        matchedSlash = false;\n        end = i + 1;\n      }\n      if (code === CHAR_DOT) {\n        // If this is our first dot\x2C mark it as the start of our extension\n        if (startDot === -1)\n          startDot = i;\n        else if (preDotState !== 1)\n          preDotState = 1;\n      } else if (startDot !== -1) {\n        // We saw a non-dot and non-path separator before our dot\x2C so we should\n        // have a good chance at having a non-empty extension\n        preDotState = -1;\n      }\n    }\n\n    if (end !== -1) {\n      const start = startPart === 0 && isAbsolute ? 1 : startPart;\n      if (startDot === -1 ||\n          // We saw a non-dot character immediately before the dot\n          preDotState === 0 ||\n          // The (right-most) trimmed path component is exactly '..'\n          (preDotState === 1 &&\n          startDot === end - 1 &&\n          startDot === startPart + 1)) {\n        ret.base = ret.name = StringPrototypeSlice(path\x2C start\x2C end);\n      } else {\n        ret.name = StringPrototypeSlice(path\x2C start\x2C startDot);\n        ret.base = StringPrototypeSlice(path\x2C start\x2C end);\n        ret.ext = StringPrototypeSlice(path\x2C startDot\x2C end);\n      }\n    }\n\n    if (startPart > 0)\n      ret.dir = StringPrototypeSlice(path\x2C 0\x2C startPart - 1);\n    else if (isAbsolute)\n      ret.dir = '/';\n\n    return ret;\n  }\x2C\n\n  sep: '/'\x2C\n  delimiter: ':'\x2C\n  win32: null\x2C\n  posix: null\x2C\n};\n\nposix.win32 = win32.win32 = win32;\nposix.posix = win32.posix = posix;\n\n// Legacy internal API\x2C docs-only deprecated: DEP0080\nwin32._makeLong = win32.toNamespacedPath;\nposix._makeLong = posix.toNamespacedPath;\n\nmodule.exports = platformIsWin32 ? win32 : posix;\n
code-source-info,0x72b2107394,34,33911,34827,C0O33911C3O33946C6O33977C8O34007C12O34014C16O34027C18O34021C25O34031C27O34075C28O34077C35O34088C42O34094C45O34094C49O34112C59O34142C70O34112C75O34193C81O34200C86O34217C88O34242C100O34268C105O34290C112O34317C120O34356C122O34352C126O34050C131O33989C135O34572C140O34618C151O34587C157O34704C161O34734C166O34745C170O34760C171O34791C177O34798C188O34823,,
tick,0x7ff8091ad5e1,33723,0,0x0,3,0x109ba30d0,0x72b2105f21,0x72b2102de4,0x723b73ff14,0x723b73f9b2
tick,0x7ff809303aef,33745,0,0x0,3,0x109ba30d0,0x72b2105f21,0x72b2102de4,0x723b73ff14,0x723b73f9b2
tick,0x1092fe45f,33752,0,0x0,3,0x109ba30d0,0x72b2105f21,0x72b2102de4,0x723b73ff14,0x723b73f9b2
code-creation,JS,10,33888,0x72b210a734,438,normalizeString node:path:66:25,0x72e2e9ab60,~
code-source-info,0x72b210a734,34,2161,4085,C0O2226C3O2256C5O2277C8O2294C10O2310C12O2328C14O2341C18O2333C23O2373C27O2366C32O2387C37O2394C45O2443C51O2472C53O2494C58O2530C64O2561C66O2581C69O2575C76O2593C83O2631C85O2640C90O2665C97O2672C104O2697C111O2718C114O2753C118O2760C122O2718C130O2769C132O2765C140O2828C144O2835C148O2793C156O2840C161O2874C168O2881C173O2923C178O2923C184O2979C186O2998C191O3022C194O3046C198O3104C211O3110C217O3210C221O3217C228O3223C233O3221C237O3293C240O3320C242O3342C244O3377C250O3384C255O3405C258O3427C260O3462C263O3489C265O3511C267O3551C271O3594C277O3601C287O3610C302O3642C307O3706C313O3713C318O3728C320O3738C324O3750C329O3787C339O3750C357O3821C364O3864C374O3827C380O3881C382O3903C385O3915C389O3934C392O3955C396O3976C398O3989C400O3985C407O4006C412O4022C419O4049C422O2351C427O2315C435O4072C437O4083,,
code-creation,JS,10,34043,0x72b210aaac,8,isPosixPathSeparator node:path:56:30,0x72e2e9aab0,~
code-source-info,0x72b210aaac,34,1854,1902,C0O1865C2O1881C4O1877C7O1900,,
new,MemoryChunk,0x7219b40000,262144
new,MemoryChunk,0x10fd80000,262144
code-creation,JS,11,34263,0x10fd83040,2544,normalizeString node:path:66:25,0x72e2e9ab60,^
code-source-info,0x10fd83040,34,2161,4085,,,
code-creation,JS,11,34399,0x10fd83a80,600,requireBuiltin node:internal/bootstrap/realm:419:24,0x7220774970,^
script-source,9,node:internal/bootstrap/realm,// This file is executed in every realm that is created by Node.js\x2C including\n// the context of main thread\x2C worker threads\x2C and ShadowRealms.\n// Only per-realm internal states and bindings should be bootstrapped in this\n// file and no globals should be exposed to the user code.\n//\n// This file creates the internal module & binding loaders used by built-in\n// modules. In contrast\x2C user land modules are loaded using\n// lib/internal/modules/cjs/loader.js (CommonJS Modules) or\n// lib/internal/modules/esm/* (ES Modules).\n//\n// This file is compiled and run by node.cc before bootstrap/node.js\n// was called\x2C therefore the loaders are bootstrapped before we start to\n// actually bootstrap Node.js. It creates the following objects:\n//\n// C++ binding loaders:\n// - process.binding(): the legacy C++ binding loader\x2C accessible from user land\n//   because it is an object attached to the global process object.\n//   These C++ bindings are created using NODE_BUILTIN_MODULE_CONTEXT_AWARE()\n//   and have their nm_flags set to NM_F_BUILTIN. We do not make any guarantees\n//   about the stability of these bindings\x2C but still have to take care of\n//   compatibility issues caused by them from time to time.\n// - process._linkedBinding(): intended to be used by embedders to add\n//   additional C++ bindings in their applications. These C++ bindings\n//   can be created using NODE_BINDING_CONTEXT_AWARE_CPP() with the flag\n//   NM_F_LINKED.\n// - internalBinding(): the private internal C++ binding loader\x2C inaccessible\n//   from user land unless through `require('internal/test/binding')`.\n//   These C++ bindings are created using NODE_BINDING_CONTEXT_AWARE_INTERNAL()\n//   and have their nm_flags set to NM_F_INTERNAL.\n//\n// Internal JavaScript module loader:\n// - BuiltinModule: a minimal module system used to load the JavaScript core\n//   modules found in lib/**/*.js and deps/**/*.js. All core modules are\n//   compiled into the node binary via node_javascript.cc generated by js2c.py\x2C\n//   so they can be loaded faster without the cost of I/O. This class makes the\n//   lib/internal/*\x2C deps/internal/* modules and internalBinding() available by\n//   default to core modules\x2C and lets the core modules require itself via\n//   require('internal/bootstrap/realm') even when this file is not written in\n//   CommonJS style.\n//\n// Other objects:\n// - process.moduleLoadList: an array recording the bindings and the modules\n//   loaded in the process and the order in which they are loaded.\n\n'use strict';\n\n// This file is compiled as if it's wrapped in a function with arguments\n// passed by node::RunBootstrapping()\n/* global process\x2C getLinkedBinding\x2C getInternalBinding\x2C primordials */\n\nconst {\n  ArrayFrom\x2C\n  ArrayPrototypeFilter\x2C\n  ArrayPrototypeIncludes\x2C\n  ArrayPrototypeMap\x2C\n  ArrayPrototypePush\x2C\n  ArrayPrototypeSlice\x2C\n  Error\x2C\n  ObjectDefineProperty\x2C\n  ObjectKeys\x2C\n  ObjectPrototypeHasOwnProperty\x2C\n  ObjectSetPrototypeOf\x2C\n  ReflectGet\x2C\n  SafeMap\x2C\n  SafeSet\x2C\n  String\x2C\n  StringPrototypeStartsWith\x2C\n  StringPrototypeSlice\x2C\n  TypeError\x2C\n} = primordials;\n\n// Set up process.moduleLoadList.\nconst moduleLoadList = [];\nObjectDefineProperty(process\x2C 'moduleLoadList'\x2C {\n  __proto__: null\x2C\n  value: moduleLoadList\x2C\n  configurable: true\x2C\n  enumerable: true\x2C\n  writable: false\x2C\n});\n\n\n// processBindingAllowList contains the name of bindings that are allowed\n// for access via process.binding(). This is used to provide a transition\n// path for modules that are being moved over to internalBinding.\n// Certain bindings may not actually correspond to an internalBinding any\n// more\x2C we just implement them as legacy wrappers instead. See the\n// legacyWrapperList.\nconst processBindingAllowList = new SafeSet([\n  'buffer'\x2C\n  'cares_wrap'\x2C\n  'config'\x2C\n  'constants'\x2C\n  'contextify'\x2C\n  'fs'\x2C\n  'fs_event_wrap'\x2C\n  'icu'\x2C\n  'inspector'\x2C\n  'js_stream'\x2C\n  'os'\x2C\n  'pipe_wrap'\x2C\n  'process_wrap'\x2C\n  'spawn_sync'\x2C\n  'stream_wrap'\x2C\n  'tcp_wrap'\x2C\n  'tls_wrap'\x2C\n  'tty_wrap'\x2C\n  'udp_wrap'\x2C\n  'uv'\x2C\n  'zlib'\x2C\n]);\n\nconst runtimeDeprecatedList = new SafeSet([\n  'async_wrap'\x2C\n  'crypto'\x2C\n  'http_parser'\x2C\n  'signal_wrap'\x2C\n  'url'\x2C\n  'v8'\x2C\n]);\n\nconst legacyWrapperList = new SafeSet([\n  'natives'\x2C\n  'util'\x2C\n]);\n\n// The code bellow assumes that the two lists must not contain any modules\n// beginning with "internal/".\n// Modules that can only be imported via the node: scheme.\nconst schemelessBlockList = new SafeSet([\n  'test'\x2C\n  'test/reporters'\x2C\n]);\n// Modules that will only be enabled at run time.\nconst experimentalModuleList = new SafeSet();\n\n// Set up process.binding() and process._linkedBinding().\n{\n  const bindingObj = { __proto__: null };\n\n  process.binding = function binding(module) {\n    module = String(module);\n    const mod = bindingObj[module];\n    if (typeof mod === 'object') {\n      return mod;\n    }\n    // Deprecated specific process.binding() modules\x2C but not all\x2C allow\n    // selective fallback to internalBinding for the deprecated ones.\n    if (runtimeDeprecatedList.has(module)) {\n      process.emitWarning(\n        `Access to process.binding('${module}') is deprecated.`\x2C\n        'DeprecationWarning'\x2C\n        'DEP0111');\n      return internalBinding(module);\n    }\n    if (legacyWrapperList.has(module)) {\n      return requireBuiltin('internal/legacy/processbinding')[module]();\n    }\n    if (processBindingAllowList.has(module)) {\n      return internalBinding(module);\n    }\n    // eslint-disable-next-line no-restricted-syntax\n    throw new Error(`No such module: ${module}`);\n  };\n\n  process._linkedBinding = function _linkedBinding(module) {\n    module = String(module);\n    let mod = bindingObj[module];\n    if (typeof mod !== 'object')\n      mod = bindingObj[module] = getLinkedBinding(module);\n    return mod;\n  };\n}\n\n/**\n * Set up internalBinding() in the closure.\n * @type {import('typings/globals').internalBinding}\n */\nlet internalBinding;\n{\n  const bindingObj = { __proto__: null };\n  // eslint-disable-next-line no-global-assign\n  internalBinding = function internalBinding(module) {\n    let mod = bindingObj[module];\n    if (typeof mod !== 'object') {\n      mod = bindingObj[module] = getInternalBinding(module);\n      ArrayPrototypePush(moduleLoadList\x2C `Internal Binding ${module}`);\n    }\n    return mod;\n  };\n}\n\nconst selfId = 'internal/bootstrap/realm';\nconst {\n  builtinIds\x2C\n  compileFunction\x2C\n  setInternalLoaders\x2C\n} = internalBinding('builtins');\n\nconst getOwn = (target\x2C property\x2C receiver) => {\n  return ObjectPrototypeHasOwnProperty(target\x2C property) ?\n    ReflectGet(target\x2C property\x2C receiver) :\n    undefined;\n};\n\nconst publicBuiltinIds = builtinIds\n  .filter((id) =>\n    !StringPrototypeStartsWith(id\x2C 'internal/') &&\n      !experimentalModuleList.has(id)\x2C\n  );\n// Do not expose the loaders to user land even with --expose-internals.\nconst internalBuiltinIds = builtinIds\n  .filter((id) => StringPrototypeStartsWith(id\x2C 'internal/') && id !== selfId);\n\n// When --expose-internals is on we'll add the internal builtin ids to these.\nlet canBeRequiredByUsersList = new SafeSet(publicBuiltinIds);\nlet canBeRequiredByUsersWithoutSchemeList =\n  new SafeSet(publicBuiltinIds.filter((id) => !schemelessBlockList.has(id)));\n\n/**\n * An internal abstraction for the built-in JavaScript modules of Node.js.\n * Be careful not to expose this to user land unless --expose-internals is\n * used\x2C in which case there is no compatibility guarantee about this class.\n */\nclass BuiltinModule {\n  /**\n   * A map from the module IDs to the module instances.\n   * @type {Map<string\x2C BuiltinModule>}\n   */\n  static map = new SafeMap(\n    ArrayPrototypeMap(builtinIds\x2C (id) => [id\x2C new BuiltinModule(id)])\x2C\n  );\n\n  constructor(id) {\n    this.filename = `${id}.js`;\n    this.id = id;\n\n    // The CJS exports object of the module.\n    this.exports = {};\n    // States used to work around circular dependencies.\n    this.loaded = false;\n    this.loading = false;\n\n    // The following properties are used by the ESM implementation and only\n    // initialized when the built-in module is loaded by users.\n    /**\n     * The C++ ModuleWrap binding used to interface with the ESM implementation.\n     * @type {ModuleWrap|undefined}\n     */\n    this.module = undefined;\n    /**\n     * Exported names for the ESM imports.\n     * @type {string[]|undefined}\n     */\n    this.exportKeys = undefined;\n  }\n\n  static allowRequireByUsers(id) {\n    if (id === selfId) {\n      // No code because this is an assertion against bugs.\n      // eslint-disable-next-line no-restricted-syntax\n      throw new Error(`Should not allow ${id}`);\n    }\n    canBeRequiredByUsersList.add(id);\n    if (!schemelessBlockList.has(id)) {\n      canBeRequiredByUsersWithoutSchemeList.add(id);\n    }\n  }\n\n  static setRealmAllowRequireByUsers(ids) {\n    canBeRequiredByUsersList =\n      new SafeSet(ArrayPrototypeFilter(ids\x2C (id) => ArrayPrototypeIncludes(publicBuiltinIds\x2C id)));\n    canBeRequiredByUsersWithoutSchemeList =\n      new SafeSet(ArrayPrototypeFilter(ids\x2C (id) => !schemelessBlockList.has(id)));\n  }\n\n  // To be called during pre-execution when --expose-internals is on.\n  // Enables the user-land module loader to access internal modules.\n  static exposeInternals() {\n    for (let i = 0; i < internalBuiltinIds.length; ++i) {\n      BuiltinModule.allowRequireByUsers(internalBuiltinIds[i]);\n    }\n  }\n\n  static exists(id) {\n    return BuiltinModule.map.has(id);\n  }\n\n  static canBeRequiredByUsers(id) {\n    return canBeRequiredByUsersList.has(id);\n  }\n\n  static canBeRequiredWithoutScheme(id) {\n    return canBeRequiredByUsersWithoutSchemeList.has(id);\n  }\n\n  static normalizeRequirableId(id) {\n    if (StringPrototypeStartsWith(id\x2C 'node:')) {\n      const normalizedId = StringPrototypeSlice(id\x2C 5);\n      if (BuiltinModule.canBeRequiredByUsers(normalizedId)) {\n        return normalizedId;\n      }\n    } else if (BuiltinModule.canBeRequiredWithoutScheme(id)) {\n      return id;\n    }\n\n    return undefined;\n  }\n\n  static isBuiltin(id) {\n    return BuiltinModule.canBeRequiredWithoutScheme(id) || (\n      typeof id === 'string' &&\n        StringPrototypeStartsWith(id\x2C 'node:') &&\n        BuiltinModule.canBeRequiredByUsers(StringPrototypeSlice(id\x2C 5))\n    );\n  }\n\n  static getCanBeRequiredByUsersWithoutSchemeList() {\n    return ArrayFrom(canBeRequiredByUsersWithoutSchemeList);\n  }\n\n  static getSchemeOnlyModuleNames() {\n    return ArrayFrom(schemelessBlockList);\n  }\n\n  // Used by user-land module loaders to compile and load builtins.\n  compileForPublicLoader() {\n    if (!BuiltinModule.canBeRequiredByUsers(this.id)) {\n      // No code because this is an assertion against bugs\n      // eslint-disable-next-line no-restricted-syntax\n      throw new Error(`Should not compile ${this.id} for public use`);\n    }\n    this.compileForInternalLoader();\n    if (!this.exportKeys) {\n      // When using --expose-internals\x2C we do not want to reflect the named\n      // exports from core modules as this can trigger unnecessary getters.\n      const internal = StringPrototypeStartsWith(this.id\x2C 'internal/');\n      this.exportKeys = internal ? [] : ObjectKeys(this.exports);\n    }\n    this.getESMFacade();\n    this.syncExports();\n    return this.exports;\n  }\n\n  getESMFacade() {\n    if (this.module) return this.module;\n    const { ModuleWrap } = internalBinding('module_wrap');\n    // TODO(aduh95): move this to C++\x2C alongside the initialization of the class.\n    ObjectSetPrototypeOf(ModuleWrap.prototype\x2C null);\n    const url = `node:${this.id}`;\n    const builtin = this;\n    const exportsKeys = ArrayPrototypeSlice(this.exportKeys);\n    ArrayPrototypePush(exportsKeys\x2C 'default');\n    this.module = new ModuleWrap(\n      url\x2C undefined\x2C exportsKeys\x2C\n      function() {\n        builtin.syncExports();\n        this.setExport('default'\x2C builtin.exports);\n      });\n    // Ensure immediate sync execution to capture exports now\n    this.module.instantiate();\n    this.module.evaluate(-1\x2C false);\n    return this.module;\n  }\n\n  // Provide named exports for all builtin libraries so that the libraries\n  // may be imported in a nicer way for ESM users. The default export is left\n  // as the entire namespace (module.exports) and updates when this function is\n  // called so that APMs and other behavior are supported.\n  syncExports() {\n    const names = this.exportKeys;\n    if (this.module) {\n      for (let i = 0; i < names.length; i++) {\n        const exportName = names[i];\n        if (exportName === 'default') continue;\n        this.module.setExport(exportName\x2C\n                              getOwn(this.exports\x2C exportName\x2C this.exports));\n      }\n    }\n  }\n\n  compileForInternalLoader() {\n    if (this.loaded || this.loading) {\n      return this.exports;\n    }\n\n    const id = this.id;\n    this.loading = true;\n\n    try {\n      const requireFn = StringPrototypeStartsWith(this.id\x2C 'internal/deps/') ?\n        requireWithFallbackInDeps : requireBuiltin;\n\n      const fn = compileFunction(id);\n      // Arguments must match the parameters specified in\n      // BuiltinLoader::LookupAndCompile().\n      fn(this.exports\x2C requireFn\x2C this\x2C process\x2C internalBinding\x2C primordials);\n\n      this.loaded = true;\n    } finally {\n      this.loading = false;\n    }\n\n    // "NativeModule" is a legacy name of "BuiltinModule". We keep it\n    // here to avoid breaking users who parse process.moduleLoadList.\n    ArrayPrototypePush(moduleLoadList\x2C `NativeModule ${id}`);\n    return this.exports;\n  }\n}\n\n// Think of this as module.exports in this file even though it is not\n// written in CommonJS style.\nconst loaderExports = {\n  internalBinding\x2C\n  BuiltinModule\x2C\n  require: requireBuiltin\x2C\n};\n\nfunction requireBuiltin(id) {\n  if (id === selfId) {\n    return loaderExports;\n  }\n\n  const mod = BuiltinModule.map.get(id);\n  // Can't load the internal errors module from here\x2C have to use a raw error.\n  // eslint-disable-next-line no-restricted-syntax\n  if (!mod) throw new TypeError(`Missing internal module '${id}'`);\n  return mod.compileForInternalLoader();\n}\n\n// Allow internal modules from dependencies to require\n// other modules from dependencies by providing fallbacks.\nfunction requireWithFallbackInDeps(request) {\n  if (StringPrototypeStartsWith(request\x2C 'node:')) {\n    request = StringPrototypeSlice(request\x2C 5);\n  } else if (!BuiltinModule.map.has(request)) {\n    request = `internal/deps/${request}`;\n  }\n  return requireBuiltin(request);\n}\n\nfunction setupPrepareStackTrace() {\n  const {\n    setEnhanceStackForFatalException\x2C\n    setPrepareStackTraceCallback\x2C\n  } = internalBinding('errors');\n  const {\n    prepareStackTraceCallback\x2C\n    ErrorPrepareStackTrace\x2C\n    fatalExceptionStackEnhancers: {\n      beforeInspector\x2C\n      afterInspector\x2C\n    }\x2C\n  } = requireBuiltin('internal/errors');\n  // Tell our PrepareStackTraceCallback passed to the V8 API\n  // to call prepareStackTrace().\n  setPrepareStackTraceCallback(prepareStackTraceCallback);\n  // Set the function used to enhance the error stack for printing\n  setEnhanceStackForFatalException(beforeInspector\x2C afterInspector);\n  // Setup the default Error.prepareStackTrace.\n  ObjectDefineProperty(Error\x2C 'prepareStackTrace'\x2C {\n    __proto__: null\x2C\n    writable: true\x2C\n    enumerable: false\x2C\n    configurable: true\x2C\n    value: ErrorPrepareStackTrace\x2C\n  });\n}\n\n// Store the internal loaders in C++.\nsetInternalLoaders(internalBinding\x2C requireBuiltin);\n\n// Setup per-realm bindings.\nsetupPrepareStackTrace();\n
code-source-info,0x10fd83a80,9,13589,13931,,,
tick,0x7ff809250fd6,35567,0,0x0,0,0x109bab2b0,0x72b210a8df,0x72b210742b,0x72b2105f21,0x72b2102de4,0x723b73ff14,0x723b73f9b2
code-creation,JS,11,35593,0x10fd83d00,1152,compileForInternalLoader node:internal/bootstrap/realm:382:27,0x72207746f8,^
code-source-info,0x10fd83d00,9,12573,13371,,,
code-creation,JS,11,35632,0x10fd841c0,476,internalBinding node:internal/bootstrap/realm:183:45,0x7220773e58,^
code-source-info,0x10fd841c0,9,5996,6234,,,
code-creation,JS,11,35670,0x10fd843c0,104,isPosixPathSeparator node:path:56:30,0x72e2e9aab0,^
code-source-info,0x10fd843c0,34,1854,1902,,,
code-creation,JS,10,35868,0x72b210be9c,370,initializeGlobalConsole node:internal/console/constructor:690:33,0x72e2ea37e0,~
script-source,44,node:internal/console/constructor,'use strict';\n\n// The Console constructor is not actually used to construct the global\n// console. It's exported for backwards compatibility.\n\nconst {\n  ArrayFrom\x2C\n  ArrayIsArray\x2C\n  ArrayPrototypeForEach\x2C\n  ArrayPrototypePush\x2C\n  ArrayPrototypeUnshift\x2C\n  Boolean\x2C\n  ErrorCaptureStackTrace\x2C\n  FunctionPrototypeBind\x2C\n  MathFloor\x2C\n  Number\x2C\n  NumberPrototypeToFixed\x2C\n  ObjectDefineProperties\x2C\n  ObjectDefineProperty\x2C\n  ObjectKeys\x2C\n  ObjectPrototypeHasOwnProperty\x2C\n  ObjectValues\x2C\n  ReflectApply\x2C\n  ReflectConstruct\x2C\n  ReflectOwnKeys\x2C\n  RegExpPrototypeSymbolReplace\x2C\n  SafeArrayIterator\x2C\n  SafeMap\x2C\n  SafeWeakMap\x2C\n  SafeSet\x2C\n  StringPrototypeIncludes\x2C\n  StringPrototypePadStart\x2C\n  StringPrototypeRepeat\x2C\n  StringPrototypeSlice\x2C\n  StringPrototypeSplit\x2C\n  Symbol\x2C\n  SymbolHasInstance\x2C\n  SymbolToStringTag\x2C\n} = primordials;\n\nconst { trace } = internalBinding('trace_events');\nconst {\n  isStackOverflowError\x2C\n  codes: {\n    ERR_CONSOLE_WRITABLE_STREAM\x2C\n    ERR_INVALID_ARG_VALUE\x2C\n    ERR_INCOMPATIBLE_OPTION_PAIR\x2C\n  }\x2C\n} = require('internal/errors');\nconst {\n  validateArray\x2C\n  validateInteger\x2C\n  validateObject\x2C\n} = require('internal/validators');\nconst { previewEntries } = internalBinding('util');\nconst { Buffer: { isBuffer } } = require('buffer');\nconst {\n  inspect\x2C\n  formatWithOptions\x2C\n} = require('internal/util/inspect');\nconst {\n  isTypedArray\x2C isSet\x2C isMap\x2C isSetIterator\x2C isMapIterator\x2C\n} = require('internal/util/types');\nconst {\n  CHAR_LOWERCASE_B: kTraceBegin\x2C\n  CHAR_LOWERCASE_E: kTraceEnd\x2C\n  CHAR_LOWERCASE_N: kTraceInstant\x2C\n  CHAR_UPPERCASE_C: kTraceCount\x2C\n} = require('internal/constants');\nconst kCounts = Symbol('counts');\n\nconst kTraceConsoleCategory = 'node\x2Cnode.console';\n\nconst kSecond = 1000;\nconst kMinute = 60 * kSecond;\nconst kHour = 60 * kMinute;\nconst kMaxGroupIndentation = 1000;\n\n// Lazy loaded for startup performance.\nlet cliTable;\n\nlet utilColors;\nfunction lazyUtilColors() {\n  utilColors ??= require('internal/util/colors');\n  return utilColors;\n}\n\n// Track amount of indentation required via `console.group()`.\nconst kGroupIndent = Symbol('kGroupIndent');\nconst kGroupIndentationWidth = Symbol('kGroupIndentWidth');\nconst kFormatForStderr = Symbol('kFormatForStderr');\nconst kFormatForStdout = Symbol('kFormatForStdout');\nconst kGetInspectOptions = Symbol('kGetInspectOptions');\nconst kColorMode = Symbol('kColorMode');\nconst kIsConsole = Symbol('kIsConsole');\nconst kWriteToConsole = Symbol('kWriteToConsole');\nconst kBindProperties = Symbol('kBindProperties');\nconst kBindStreamsEager = Symbol('kBindStreamsEager');\nconst kBindStreamsLazy = Symbol('kBindStreamsLazy');\nconst kUseStdout = Symbol('kUseStdout');\nconst kUseStderr = Symbol('kUseStderr');\n\nconst optionsMap = new SafeWeakMap();\nfunction Console(options /* or: stdout\x2C stderr\x2C ignoreErrors = true */) {\n  // We have to test new.target here to see if this function is called\n  // with new\x2C because we need to define a custom instanceof to accommodate\n  // the global console.\n  if (new.target === undefined) {\n    return ReflectConstruct(Console\x2C arguments);\n  }\n\n  if (!options || typeof options.write === 'function') {\n    options = {\n      stdout: options\x2C\n      stderr: arguments[1]\x2C\n      ignoreErrors: arguments[2]\x2C\n    };\n  }\n\n  const {\n    stdout\x2C\n    stderr = stdout\x2C\n    ignoreErrors = true\x2C\n    colorMode = 'auto'\x2C\n    inspectOptions\x2C\n    groupIndentation\x2C\n  } = options;\n\n  if (!stdout || typeof stdout.write !== 'function') {\n    throw new ERR_CONSOLE_WRITABLE_STREAM('stdout');\n  }\n  if (!stderr || typeof stderr.write !== 'function') {\n    throw new ERR_CONSOLE_WRITABLE_STREAM('stderr');\n  }\n\n  if (typeof colorMode !== 'boolean' && colorMode !== 'auto')\n    throw new ERR_INVALID_ARG_VALUE('colorMode'\x2C colorMode);\n\n  if (groupIndentation !== undefined) {\n    validateInteger(groupIndentation\x2C 'groupIndentation'\x2C\n                    0\x2C kMaxGroupIndentation);\n  }\n\n  if (inspectOptions !== undefined) {\n    validateObject(inspectOptions\x2C 'options.inspectOptions');\n\n    if (inspectOptions.colors !== undefined &&\n        options.colorMode !== undefined) {\n      throw new ERR_INCOMPATIBLE_OPTION_PAIR(\n        'options.inspectOptions.color'\x2C 'colorMode');\n    }\n    optionsMap.set(this\x2C inspectOptions);\n  }\n\n  // Bind the prototype functions to this Console instance\n  ArrayPrototypeForEach(ObjectKeys(Console.prototype)\x2C (key) => {\n    // We have to bind the methods grabbed from the instance instead of from\n    // the prototype so that users extending the Console can override them\n    // from the prototype chain of the subclass.\n    this[key] = FunctionPrototypeBind(this[key]\x2C this);\n    ObjectDefineProperty(this[key]\x2C 'name'\x2C {\n      __proto__: null\x2C\n      value: key\x2C\n    });\n  });\n\n  this[kBindStreamsEager](stdout\x2C stderr);\n  this[kBindProperties](ignoreErrors\x2C colorMode\x2C groupIndentation);\n}\n\nconst consolePropAttributes = {\n  writable: true\x2C\n  enumerable: false\x2C\n  configurable: true\x2C\n};\n\n// Fixup global.console instanceof global.console.Console\nObjectDefineProperty(Console\x2C SymbolHasInstance\x2C {\n  __proto__: null\x2C\n  value(instance) {\n    return instance[kIsConsole];\n  }\x2C\n});\n\nconst kColorInspectOptions = { colors: true };\nconst kNoColorInspectOptions = {};\n\nObjectDefineProperties(Console.prototype\x2C {\n  [kBindStreamsEager]: {\n    __proto__: null\x2C\n    ...consolePropAttributes\x2C\n    // Eager version for the Console constructor\n    value: function(stdout\x2C stderr) {\n      ObjectDefineProperties(this\x2C {\n        '_stdout': { __proto__: null\x2C ...consolePropAttributes\x2C value: stdout }\x2C\n        '_stderr': { __proto__: null\x2C ...consolePropAttributes\x2C value: stderr }\x2C\n      });\n    }\x2C\n  }\x2C\n  [kBindStreamsLazy]: {\n    __proto__: null\x2C\n    ...consolePropAttributes\x2C\n    // Lazily load the stdout and stderr from an object so we don't\n    // create the stdio streams when they are not even accessed\n    value: function(object) {\n      let stdout;\n      let stderr;\n      ObjectDefineProperties(this\x2C {\n        '_stdout': {\n          __proto__: null\x2C\n          enumerable: false\x2C\n          configurable: true\x2C\n          get() {\n            if (!stdout) stdout = object.stdout;\n            return stdout;\n          }\x2C\n          set(value) { stdout = value; }\x2C\n        }\x2C\n        '_stderr': {\n          __proto__: null\x2C\n          enumerable: false\x2C\n          configurable: true\x2C\n          get() {\n            if (!stderr) { stderr = object.stderr; }\n            return stderr;\n          }\x2C\n          set(value) { stderr = value; }\x2C\n        }\x2C\n      });\n    }\x2C\n  }\x2C\n  [kBindProperties]: {\n    __proto__: null\x2C\n    ...consolePropAttributes\x2C\n    value: function(ignoreErrors\x2C colorMode\x2C groupIndentation = 2) {\n      ObjectDefineProperties(this\x2C {\n        '_stdoutErrorHandler': {\n          __proto__: null\x2C\n          ...consolePropAttributes\x2C\n          value: createWriteErrorHandler(this\x2C kUseStdout)\x2C\n        }\x2C\n        '_stderrErrorHandler': {\n          ...consolePropAttributes\x2C\n          __proto__: null\x2C\n          value: createWriteErrorHandler(this\x2C kUseStderr)\x2C\n        }\x2C\n        '_ignoreErrors': {\n          __proto__: null\x2C\n          ...consolePropAttributes\x2C\n          value: Boolean(ignoreErrors)\x2C\n        }\x2C\n        '_times': { __proto__: null\x2C ...consolePropAttributes\x2C value: new SafeMap() }\x2C\n        // Corresponds to https://console.spec.whatwg.org/#count-map\n        [kCounts]: { __proto__: null\x2C ...consolePropAttributes\x2C value: new SafeMap() }\x2C\n        [kColorMode]: { __proto__: null\x2C ...consolePropAttributes\x2C value: colorMode }\x2C\n        [kIsConsole]: { __proto__: null\x2C ...consolePropAttributes\x2C value: true }\x2C\n        [kGroupIndent]: { __proto__: null\x2C ...consolePropAttributes\x2C value: '' }\x2C\n        [kGroupIndentationWidth]: {\n          __proto__: null\x2C\n          ...consolePropAttributes\x2C\n          value: groupIndentation\x2C\n        }\x2C\n        [SymbolToStringTag]: {\n          __proto__: null\x2C\n          writable: false\x2C\n          enumerable: false\x2C\n          configurable: true\x2C\n          value: 'console'\x2C\n        }\x2C\n      });\n    }\x2C\n  }\x2C\n  [kWriteToConsole]: {\n    __proto__: null\x2C\n    ...consolePropAttributes\x2C\n    value: function(streamSymbol\x2C string) {\n      const ignoreErrors = this._ignoreErrors;\n      const groupIndent = this[kGroupIndent];\n\n      const useStdout = streamSymbol === kUseStdout;\n      const stream = useStdout ? this._stdout : this._stderr;\n      const errorHandler = useStdout ?\n        this._stdoutErrorHandler : this._stderrErrorHandler;\n\n      if (groupIndent.length !== 0) {\n        if (StringPrototypeIncludes(string\x2C '\\n')) {\n          string = RegExpPrototypeSymbolReplace(/\\n/g\x2C string\x2C `\\n${groupIndent}`);\n        }\n        string = groupIndent + string;\n      }\n      string += '\\n';\n\n      if (ignoreErrors === false) return stream.write(string);\n\n      // There may be an error occurring synchronously (e.g. for files or TTYs\n      // on POSIX systems) or asynchronously (e.g. pipes on POSIX systems)\x2C so\n      // handle both situations.\n      try {\n        // Add and later remove a noop error handler to catch synchronous\n        // errors.\n        if (stream.listenerCount('error') === 0)\n          stream.once('error'\x2C noop);\n\n        stream.write(string\x2C errorHandler);\n      } catch (e) {\n        // Console is a debugging utility\x2C so it swallowing errors is not\n        // desirable even in edge cases such as low stack space.\n        if (isStackOverflowError(e))\n          throw e;\n        // Sorry\x2C there's no proper way to pass along the error here.\n      } finally {\n        stream.removeListener('error'\x2C noop);\n      }\n    }\x2C\n  }\x2C\n  [kGetInspectOptions]: {\n    __proto__: null\x2C\n    ...consolePropAttributes\x2C\n    value: function(stream) {\n      let color = this[kColorMode];\n      if (color === 'auto') {\n        color = lazyUtilColors().shouldColorize(stream);\n      }\n\n      const options = optionsMap.get(this);\n      if (options) {\n        if (options.colors === undefined) {\n          options.colors = color;\n        }\n        return options;\n      }\n\n      return color ? kColorInspectOptions : kNoColorInspectOptions;\n    }\x2C\n  }\x2C\n  [kFormatForStdout]: {\n    __proto__: null\x2C\n    ...consolePropAttributes\x2C\n    value: function(args) {\n      const opts = this[kGetInspectOptions](this._stdout);\n      ArrayPrototypeUnshift(args\x2C opts);\n      return ReflectApply(formatWithOptions\x2C null\x2C args);\n    }\x2C\n  }\x2C\n  [kFormatForStderr]: {\n    __proto__: null\x2C\n    ...consolePropAttributes\x2C\n    value: function(args) {\n      const opts = this[kGetInspectOptions](this._stderr);\n      ArrayPrototypeUnshift(args\x2C opts);\n      return ReflectApply(formatWithOptions\x2C null\x2C args);\n    }\x2C\n  }\x2C\n});\n\n// Make a function that can serve as the callback passed to `stream.write()`.\nfunction createWriteErrorHandler(instance\x2C streamSymbol) {\n  return (err) => {\n    // This conditional evaluates to true if and only if there was an error\n    // that was not already emitted (which happens when the _write callback\n    // is invoked asynchronously).\n    const stream = streamSymbol === kUseStdout ?\n      instance._stdout : instance._stderr;\n    if (err !== null && !stream._writableState.errorEmitted) {\n      // If there was an error\x2C it will be emitted on `stream` as\n      // an `error` event. Adding a `once` listener will keep that error\n      // from becoming an uncaught exception\x2C but since the handler is\n      // removed after the event\x2C non-console.* writes won't be affected.\n      // we are only adding noop if there is no one else listening for 'error'\n      if (stream.listenerCount('error') === 0) {\n        stream.once('error'\x2C noop);\n      }\n    }\n  };\n}\n\nconst consoleMethods = {\n  log(...args) {\n    this[kWriteToConsole](kUseStdout\x2C this[kFormatForStdout](args));\n  }\x2C\n\n\n  warn(...args) {\n    this[kWriteToConsole](kUseStderr\x2C this[kFormatForStderr](args));\n  }\x2C\n\n\n  dir(object\x2C options) {\n    this[kWriteToConsole](kUseStdout\x2C inspect(object\x2C {\n      customInspect: false\x2C\n      ...this[kGetInspectOptions](this._stdout)\x2C\n      ...options\x2C\n    }));\n  }\x2C\n\n  time(label = 'default') {\n    // Coerces everything other than Symbol to a string\n    label = `${label}`;\n    if (this._times.has(label)) {\n      process.emitWarning(`Label '${label}' already exists for console.time()`);\n      return;\n    }\n    trace(kTraceBegin\x2C kTraceConsoleCategory\x2C `time::${label}`\x2C 0);\n    this._times.set(label\x2C process.hrtime());\n  }\x2C\n\n  timeEnd(label = 'default') {\n    // Coerces everything other than Symbol to a string\n    label = `${label}`;\n    const found = timeLogImpl(this\x2C 'timeEnd'\x2C label);\n    trace(kTraceEnd\x2C kTraceConsoleCategory\x2C `time::${label}`\x2C 0);\n    if (found) {\n      this._times.delete(label);\n    }\n  }\x2C\n\n  timeLog(label = 'default'\x2C ...data) {\n    // Coerces everything other than Symbol to a string\n    label = `${label}`;\n    timeLogImpl(this\x2C 'timeLog'\x2C label\x2C data);\n    trace(kTraceInstant\x2C kTraceConsoleCategory\x2C `time::${label}`\x2C 0);\n  }\x2C\n\n  trace: function trace(...args) {\n    const err = {\n      name: 'Trace'\x2C\n      message: this[kFormatForStderr](args)\x2C\n    };\n    ErrorCaptureStackTrace(err\x2C trace);\n    this.error(err.stack);\n  }\x2C\n\n  assert(expression\x2C ...args) {\n    if (!expression) {\n      args[0] = `Assertion failed${args.length === 0 ? '' : `: ${args[0]}`}`;\n      // The arguments will be formatted in warn() again\n      ReflectApply(this.warn\x2C this\x2C args);\n    }\n  }\x2C\n\n  // Defined by: https://console.spec.whatwg.org/#clear\n  clear() {\n    // It only makes sense to clear if _stdout is a TTY.\n    // Otherwise\x2C do nothing.\n    if (this._stdout.isTTY && process.env.TERM !== 'dumb') {\n      // The require is here intentionally to avoid readline being\n      // required too early when console is first loaded.\n      const {\n        cursorTo\x2C\n        clearScreenDown\x2C\n      } = require('internal/readline/callbacks');\n      cursorTo(this._stdout\x2C 0\x2C 0);\n      clearScreenDown(this._stdout);\n    }\n  }\x2C\n\n  // Defined by: https://console.spec.whatwg.org/#count\n  count(label = 'default') {\n    // Ensures that label is a string\x2C and only things that can be\n    // coerced to strings. e.g. Symbol is not allowed\n    label = `${label}`;\n    const counts = this[kCounts];\n    let count = counts.get(label);\n    if (count === undefined)\n      count = 1;\n    else\n      count++;\n    counts.set(label\x2C count);\n    trace(kTraceCount\x2C kTraceConsoleCategory\x2C `count::${label}`\x2C 0\x2C count);\n    this.log(`${label}: ${count}`);\n  }\x2C\n\n  // Defined by: https://console.spec.whatwg.org/#countreset\n  countReset(label = 'default') {\n    const counts = this[kCounts];\n    if (!counts.has(label)) {\n      process.emitWarning(`Count for '${label}' does not exist`);\n      return;\n    }\n    trace(kTraceCount\x2C kTraceConsoleCategory\x2C `count::${label}`\x2C 0\x2C 0);\n    counts.delete(`${label}`);\n  }\x2C\n\n  group(...data) {\n    if (data.length > 0) {\n      ReflectApply(this.log\x2C this\x2C data);\n    }\n    this[kGroupIndent] +=\n      StringPrototypeRepeat(' '\x2C this[kGroupIndentationWidth]);\n  }\x2C\n\n  groupEnd() {\n    this[kGroupIndent] = StringPrototypeSlice(\n      this[kGroupIndent]\x2C\n      0\x2C\n      this[kGroupIndent].length - this[kGroupIndentationWidth]\x2C\n    );\n  }\x2C\n\n  // https://console.spec.whatwg.org/#table\n  table(tabularData\x2C properties) {\n    if (properties !== undefined)\n      validateArray(properties\x2C 'properties');\n\n    if (tabularData === null || typeof tabularData !== 'object')\n      return this.log(tabularData);\n\n    cliTable ??= require('internal/cli_table');\n    const final = (k\x2C v) => this.log(cliTable(k\x2C v));\n\n    const _inspect = (v) => {\n      const depth = v !== null &&\n                    typeof v === 'object' &&\n                    !isArray(v) &&\n                    ObjectKeys(v).length > 2 ? -1 : 0;\n      const opt = {\n        depth\x2C\n        maxArrayLength: 3\x2C\n        breakLength: Infinity\x2C\n        ...this[kGetInspectOptions](this._stdout)\x2C\n      };\n      return inspect(v\x2C opt);\n    };\n    const getIndexArray = (length) => ArrayFrom(\n      { length }\x2C (_\x2C i) => _inspect(i));\n\n    const mapIter = isMapIterator(tabularData);\n    let isKeyValue = false;\n    let i = 0;\n    if (mapIter) {\n      const res = previewEntries(tabularData\x2C true);\n      tabularData = res[0];\n      isKeyValue = res[1];\n    }\n\n    if (isKeyValue || isMap(tabularData)) {\n      const keys = [];\n      const values = [];\n      let length = 0;\n      if (mapIter) {\n        for (; i < tabularData.length / 2; ++i) {\n          ArrayPrototypePush(keys\x2C _inspect(tabularData[i * 2]));\n          ArrayPrototypePush(values\x2C _inspect(tabularData[i * 2 + 1]));\n          length++;\n        }\n      } else {\n        for (const { 0: k\x2C 1: v } of tabularData) {\n          ArrayPrototypePush(keys\x2C _inspect(k));\n          ArrayPrototypePush(values\x2C _inspect(v));\n          length++;\n        }\n      }\n      return final([\n        iterKey\x2C keyKey\x2C valuesKey\x2C\n      ]\x2C [\n        getIndexArray(length)\x2C\n        keys\x2C\n        values\x2C\n      ]);\n    }\n\n    const setIter = isSetIterator(tabularData);\n    if (setIter)\n      tabularData = previewEntries(tabularData);\n\n    const setlike = setIter || mapIter || isSet(tabularData);\n    if (setlike) {\n      const values = [];\n      let length = 0;\n      for (const v of tabularData) {\n        ArrayPrototypePush(values\x2C _inspect(v));\n        length++;\n      }\n      return final([iterKey\x2C valuesKey]\x2C [getIndexArray(length)\x2C values]);\n    }\n\n    const map = { __proto__: null };\n    let hasPrimitives = false;\n    const valuesKeyArray = [];\n    const indexKeyArray = ObjectKeys(tabularData);\n\n    for (; i < indexKeyArray.length; i++) {\n      const item = tabularData[indexKeyArray[i]];\n      const primitive = item === null ||\n          (typeof item !== 'function' && typeof item !== 'object');\n      if (properties === undefined && primitive) {\n        hasPrimitives = true;\n        valuesKeyArray[i] = _inspect(item);\n      } else {\n        const keys = properties || ObjectKeys(item);\n        for (const key of keys) {\n          map[key] ??= [];\n          if ((primitive && properties) ||\n               !ObjectPrototypeHasOwnProperty(item\x2C key))\n            map[key][i] = '';\n          else\n            map[key][i] = _inspect(item[key]);\n        }\n      }\n    }\n\n    const keys = ObjectKeys(map);\n    const values = ObjectValues(map);\n    if (hasPrimitives) {\n      ArrayPrototypePush(keys\x2C valuesKey);\n      ArrayPrototypePush(values\x2C valuesKeyArray);\n    }\n    ArrayPrototypeUnshift(keys\x2C indexKey);\n    ArrayPrototypeUnshift(values\x2C indexKeyArray);\n\n    return final(keys\x2C values);\n  }\x2C\n};\n\n// Returns true if label was found\nfunction timeLogImpl(self\x2C name\x2C label\x2C data) {\n  const time = self._times.get(label);\n  if (time === undefined) {\n    process.emitWarning(`No such label '${label}' for console.${name}()`);\n    return false;\n  }\n  const duration = process.hrtime(time);\n  const ms = duration[0] * 1000 + duration[1] / 1e6;\n\n  const formatted = formatTime(ms);\n\n  if (data === undefined) {\n    self.log('%s: %s'\x2C label\x2C formatted);\n  } else {\n    self.log('%s: %s'\x2C label\x2C formatted\x2C ...new SafeArrayIterator(data));\n  }\n  return true;\n}\n\nfunction pad(value) {\n  return StringPrototypePadStart(`${value}`\x2C 2\x2C '0');\n}\n\nfunction formatTime(ms) {\n  let hours = 0;\n  let minutes = 0;\n  let seconds = 0;\n\n  if (ms >= kSecond) {\n    if (ms >= kMinute) {\n      if (ms >= kHour) {\n        hours = MathFloor(ms / kHour);\n        ms = ms % kHour;\n      }\n      minutes = MathFloor(ms / kMinute);\n      ms = ms % kMinute;\n    }\n    seconds = ms / kSecond;\n  }\n\n  if (hours !== 0 || minutes !== 0) {\n    ({ 0: seconds\x2C 1: ms } = StringPrototypeSplit(\n      NumberPrototypeToFixed(seconds\x2C 3)\x2C\n      '.'\x2C\n    ));\n    const res = hours !== 0 ? `${hours}:${pad(minutes)}` : minutes;\n    return `${res}:${pad(seconds)}.${ms} (${hours !== 0 ? 'h:m' : ''}m:ss.mmm)`;\n  }\n\n  if (seconds !== 0) {\n    return `${NumberPrototypeToFixed(seconds\x2C 3)}s`;\n  }\n\n  return `${Number(NumberPrototypeToFixed(ms\x2C 3))}ms`;\n}\n\nconst keyKey = 'Key';\nconst valuesKey = 'Values';\nconst indexKey = '(index)';\nconst iterKey = '(iteration index)';\n\nconst isArray = (v) => ArrayIsArray(v) || isTypedArray(v) || isBuffer(v);\n\nfunction noop() {}\n\nfor (const method of ReflectOwnKeys(consoleMethods))\n  Console.prototype[method] = consoleMethods[method];\n\nConsole.prototype.debug = Console.prototype.log;\nConsole.prototype.info = Console.prototype.log;\nConsole.prototype.dirxml = Console.prototype.log;\nConsole.prototype.error = Console.prototype.warn;\nConsole.prototype.groupCollapsed = Console.prototype.group;\n\nfunction initializeGlobalConsole(globalConsole) {\n  globalConsole[kBindStreamsLazy](process);\n  globalConsole[kBindProperties](true\x2C 'auto');\n\n  const {\n    namespace: {\n      addSerializeCallback\x2C\n      isBuildingSnapshot\x2C\n    }\x2C\n  } = require('internal/v8/startup_snapshot');\n\n  if (!internalBinding('config').hasInspector || !isBuildingSnapshot()) {\n    return;\n  }\n  const { console: consoleFromVM } = internalBinding('inspector');\n  const nodeConsoleKeys = ObjectKeys(Console.prototype);\n  const vmConsoleKeys = ObjectKeys(consoleFromVM);\n  const originalKeys = new SafeSet(vmConsoleKeys.concat(nodeConsoleKeys));\n  const inspectorConsoleKeys = new SafeSet();\n  for (const key of ObjectKeys(globalConsole)) {\n    if (!originalKeys.has(key)) {\n      inspectorConsoleKeys.add(key);\n    }\n  }\n  // During deserialization these should be reinstalled to console by\n  // V8 when the inspector client is created.\n  addSerializeCallback(() => {\n    for (const key of inspectorConsoleKeys) {\n      globalConsole[key] = undefined;\n    }\n  });\n}\n\nmodule.exports = {\n  Console\x2C\n  kBindStreamsLazy\x2C\n  kBindProperties\x2C\n  initializeGlobalConsole\x2C\n  formatTime\x2C // exported for tests\n};\n
code-source-info,0x72b210be9c,44,20457,21464,C0O20457C12O20477C19O20491C21O20490C30O20508C35O20521C42O20535C44O20534C53O20551C59O20662C67O20662C72O20593C77O20601C82O20629C87O20706C95O20711C100O20736C106O20754C111O20782C112O20789C113O20831C121O20831C126O20813C131O20887C143O20906C148O20887C153O20942C158O20942C163O20992C170O21018C175O21018C183O20992C189O21075C194O21075C199O21075C201O21110C209O21110C231O21103C261O21103C264O21161C270O21161C277O21179C281O21200C287O21200C292O21092C359O21338C364O21338C369O21463,,
tick,0x1092fe2df,37091,0,0x0,3,0x109ba30d0,0x72b2105f59,0x72b2102de4,0x723b73ff14,0x723b73f9b2
code-creation,JS,10,37125,0x72b210db8c,94,value node:internal/console/constructor:205:20,0x72e2ea2d68,~
code-source-info,0x72b210db8c,44,5840,6477,C0O5840C15O5861C16O5861C18O5879C19O5879C21O5893C33O5943C38O6041C46O6148C60O6210C65O6308C73O6419C87O5893C93O6476,,
code-creation,JS,10,37239,0x72b210e214,396,value node:internal/console/constructor:235:20,0x72e2ea2e30,~
code-source-info,0x72b210e214,44,6577,7977,C17O6633C27O6695C34O6737C52O6807C55O6777C74O6877C84O6974C87O6944C102O7023C113O7065C122O7105C125O7105C140O7157C151O7179C160O7213C163O7209C181O7304C185O7314C196O7336C206O7366C225O7392C229O7405C240O7427C249O7457C263O7479C267O7492C278O7514C286O7544C300O7561C304O7576C315O7598C324O7628C338O7643C342O7668C353O7710C362O7750C376O7788C380O7808C389O6633C395O7976,,
code-creation,JS,10,37323,0x72b210e784,18,createWriteErrorHandler node:internal/console/constructor:357:33,0x72e2ea3100,~
code-source-info,0x72b210e784,44,10694,11551,C0O10694C13O10723C17O11549,,
tick,0x109aab955,37345,0,0x0,2,0x109ba30d0,0x72b210e24b,0x72b210bed1,0x72b2105f59,0x72b2102de4,0x723b73ff14,0x723b73f9b2
code-creation,JS,10,37449,0x72b210ecac,63,addReadOnlyProcessAlias node:internal/process/pre_execution:270:33,0x72e2eba180,~
code-source-info,0x72b210ecac,67,8732,8981,C16O8784C21O8784C26O8810C28O8827C36O8857C43O8943C49O8961C56O8827C62O8980,,
code-creation,JS,10,37504,0x72b210ee4c,82,getOptionValue node:internal/options:44:24,0x72e2e835f0,~
code-source-info,0x72b210ee4c,17,985,1228,C0O1018C3O1018C7O1063C15O1063C22O1113C30O1135C38O1135C43O1122C47O1113C53O1150C55O1175C60O1181C61O1203C66O1203C74O1218C81O1226,,
code-creation,JS,10,37541,0x72b210efa4,24,getCLIOptionsFromBinding node:internal/options:18:34,0x72e2e833b8,~
code-source-info,0x72b210efa4,17,497,598,C0O504C6O527C11O554C15O539C21O578C23O596,,
code-creation,JS,10,37856,0x72b210f5ec,46,setupTraceCategoryState node:internal/process/pre_execution:495:33,0x72e2eba678,~
code-source-info,0x72b210f5ec,67,15156,15383,C0O15198C6O15198C11O15171C16O15270C22O15270C27O15241C32O15312C35O15337C40O15312C45O15382,,
code-creation,JS,10,37939,0x72b210f784,66,toggleTraceCategoryState node:internal/process/per_thread:409:34,0x72e2e96618,~
script-source,27,node:internal/process/per_thread,'use strict';\n\n// This files contains process bootstrappers that can be\n// run when setting up each thread\x2C including the main\n// thread and the worker threads.\n\nconst {\n  ArrayPrototypeEvery\x2C\n  ArrayPrototypeForEach\x2C\n  ArrayPrototypeIncludes\x2C\n  ArrayPrototypeMap\x2C\n  ArrayPrototypePush\x2C\n  ArrayPrototypeSplice\x2C\n  BigUint64Array\x2C\n  Float64Array\x2C\n  NumberMAX_SAFE_INTEGER\x2C\n  ObjectFreeze\x2C\n  ObjectDefineProperty\x2C\n  ReflectApply\x2C\n  RegExpPrototypeExec\x2C\n  SafeArrayIterator\x2C\n  Set\x2C\n  SetPrototypeEntries\x2C\n  SetPrototypeValues\x2C\n  StringPrototypeEndsWith\x2C\n  StringPrototypeReplace\x2C\n  StringPrototypeSlice\x2C\n  StringPrototypeStartsWith\x2C\n  Symbol\x2C\n  SymbolIterator\x2C\n} = primordials;\n\nconst {\n  ErrnoException\x2C\n  codes: {\n    ERR_ASSERTION\x2C\n    ERR_INVALID_ARG_TYPE\x2C\n    ERR_INVALID_ARG_VALUE\x2C\n    ERR_OUT_OF_RANGE\x2C\n    ERR_UNKNOWN_SIGNAL\x2C\n  }\x2C\n} = require('internal/errors');\nconst format = require('internal/util/inspect').format;\nconst {\n  validateArray\x2C\n  validateNumber\x2C\n  validateObject\x2C\n} = require('internal/validators');\nconst constants = internalBinding('constants').os.signals;\n\nconst kInternal = Symbol('internal properties');\n\nfunction assert(x\x2C msg) {\n  if (!x) throw new ERR_ASSERTION(msg || 'assertion error');\n}\nconst { exitCodes: { kNoFailure } } = internalBinding('errors');\n\nconst binding = internalBinding('process_methods');\n\nlet hrValues;\nlet hrBigintValues;\n\nfunction refreshHrtimeBuffer() {\n  // The 3 entries filled in by the original process.hrtime contains\n  // the upper/lower 32 bits of the second part of the value\x2C\n  // and the remaining nanoseconds of the value.\n  hrValues = binding.hrtimeBuffer;\n  // Use a BigUint64Array in the closure because this is actually a bit\n  // faster than simply returning a BigInt from C++ in V8 7.1.\n  hrBigintValues = new BigUint64Array(binding.hrtimeBuffer.buffer\x2C 0\x2C 1);\n}\n\n// Create the buffers.\nrefreshHrtimeBuffer();\n\nfunction hrtime(time) {\n  binding.hrtime();\n\n  if (time !== undefined) {\n    validateArray(time\x2C 'time');\n    if (time.length !== 2) {\n      throw new ERR_OUT_OF_RANGE('time'\x2C 2\x2C time.length);\n    }\n\n    const sec = (hrValues[0] * 0x100000000 + hrValues[1]) - time[0];\n    const nsec = hrValues[2] - time[1];\n    const needsBorrow = nsec < 0;\n    return [needsBorrow ? sec - 1 : sec\x2C needsBorrow ? nsec + 1e9 : nsec];\n  }\n\n  return [\n    hrValues[0] * 0x100000000 + hrValues[1]\x2C\n    hrValues[2]\x2C\n  ];\n}\n\nfunction hrtimeBigInt() {\n  binding.hrtimeBigInt();\n  return hrBigintValues[0];\n}\n\nfunction nop() {}\n\n// The execution of this function itself should not cause any side effects.\nfunction wrapProcessMethods(binding) {\n  const {\n    cpuUsage: _cpuUsage\x2C\n    memoryUsage: _memoryUsage\x2C\n    rss\x2C\n    resourceUsage: _resourceUsage\x2C\n  } = binding;\n\n  function _rawDebug(...args) {\n    binding._rawDebug(ReflectApply(format\x2C null\x2C args));\n  }\n\n  // Create the argument array that will be passed to the native function.\n  const cpuValues = new Float64Array(2);\n\n  // Replace the native function with the JS version that calls the native\n  // function.\n  function cpuUsage(prevValue) {\n    // If a previous value was passed in\x2C ensure it has the correct shape.\n    if (prevValue) {\n      if (!previousValueIsValid(prevValue.user)) {\n        validateObject(prevValue\x2C 'prevValue');\n\n        validateNumber(prevValue.user\x2C 'prevValue.user');\n        throw new ERR_INVALID_ARG_VALUE.RangeError('prevValue.user'\x2C\n                                                   prevValue.user);\n      }\n\n      if (!previousValueIsValid(prevValue.system)) {\n        validateNumber(prevValue.system\x2C 'prevValue.system');\n        throw new ERR_INVALID_ARG_VALUE.RangeError('prevValue.system'\x2C\n                                                   prevValue.system);\n      }\n    }\n\n    // Call the native function to get the current values.\n    _cpuUsage(cpuValues);\n\n    // If a previous value was passed in\x2C return diff of current from previous.\n    if (prevValue) {\n      return {\n        user: cpuValues[0] - prevValue.user\x2C\n        system: cpuValues[1] - prevValue.system\x2C\n      };\n    }\n\n    // If no previous value passed in\x2C return current value.\n    return {\n      user: cpuValues[0]\x2C\n      system: cpuValues[1]\x2C\n    };\n  }\n\n  // Ensure that a previously passed in value is valid. Currently\x2C the native\n  // implementation always returns numbers <= Number.MAX_SAFE_INTEGER.\n  function previousValueIsValid(num) {\n    return typeof num === 'number' &&\n        num <= NumberMAX_SAFE_INTEGER &&\n        num >= 0;\n  }\n\n  const memValues = new Float64Array(5);\n  function memoryUsage() {\n    _memoryUsage(memValues);\n    return {\n      rss: memValues[0]\x2C\n      heapTotal: memValues[1]\x2C\n      heapUsed: memValues[2]\x2C\n      external: memValues[3]\x2C\n      arrayBuffers: memValues[4]\x2C\n    };\n  }\n\n  memoryUsage.rss = rss;\n\n  function exit(code) {\n    const {\n      handleProcessExit\x2C\n    } = require('internal/modules/esm/handle_process_exit');\n    process.off('exit'\x2C handleProcessExit);\n\n    if (arguments.length !== 0) {\n      process.exitCode = code;\n    }\n\n    if (!process._exiting) {\n      process._exiting = true;\n      process.emit('exit'\x2C process.exitCode || kNoFailure);\n    }\n    // FIXME(joyeecheung): This is an undocumented API that gets monkey-patched\n    // in the user land. Either document it\x2C or deprecate it in favor of a\n    // better public alternative.\n    process.reallyExit(process.exitCode || kNoFailure);\n\n    // If this is a worker\x2C v8::Isolate::TerminateExecution() is called above.\n    // That function spoofs the stack pointer to cause the stack guard\n    // check to throw the termination exception. Because v8 performs\n    // stack guard check upon every function call\x2C we give it a chance.\n    //\n    // Without this\x2C user code after `process.exit()` would take effect.\n    // test/parallel/test-worker-voluntarily-exit-followed-by-addition.js\n    // test/parallel/test-worker-voluntarily-exit-followed-by-throw.js\n    nop();\n  }\n\n  function kill(pid\x2C sig) {\n    let err;\n\n    // eslint-disable-next-line eqeqeq\n    if (pid != (pid | 0)) {\n      throw new ERR_INVALID_ARG_TYPE('pid'\x2C 'number'\x2C pid);\n    }\n\n    // Preserve null signal\n    if (sig === (sig | 0)) {\n      // XXX(joyeecheung): we have to use process._kill here because\n      // it's monkey-patched by tests.\n      err = process._kill(pid\x2C sig);\n    } else {\n      sig = sig || 'SIGTERM';\n      if (constants[sig]) {\n        err = process._kill(pid\x2C constants[sig]);\n      } else {\n        throw new ERR_UNKNOWN_SIGNAL(sig);\n      }\n    }\n\n    if (err)\n      throw new ErrnoException(err\x2C 'kill');\n\n    return true;\n  }\n\n  const resourceValues = new Float64Array(16);\n  function resourceUsage() {\n    _resourceUsage(resourceValues);\n    return {\n      userCPUTime: resourceValues[0]\x2C\n      systemCPUTime: resourceValues[1]\x2C\n      maxRSS: resourceValues[2]\x2C\n      sharedMemorySize: resourceValues[3]\x2C\n      unsharedDataSize: resourceValues[4]\x2C\n      unsharedStackSize: resourceValues[5]\x2C\n      minorPageFault: resourceValues[6]\x2C\n      majorPageFault: resourceValues[7]\x2C\n      swappedOut: resourceValues[8]\x2C\n      fsRead: resourceValues[9]\x2C\n      fsWrite: resourceValues[10]\x2C\n      ipcSent: resourceValues[11]\x2C\n      ipcReceived: resourceValues[12]\x2C\n      signalsCount: resourceValues[13]\x2C\n      voluntaryContextSwitches: resourceValues[14]\x2C\n      involuntaryContextSwitches: resourceValues[15]\x2C\n    };\n  }\n\n\n  return {\n    _rawDebug\x2C\n    cpuUsage\x2C\n    resourceUsage\x2C\n    memoryUsage\x2C\n    kill\x2C\n    exit\x2C\n  };\n}\n\nconst replaceUnderscoresRegex = /_/g;\nconst leadingDashesRegex = /^--?/;\nconst trailingValuesRegex = /=.*$/;\n\n// This builds the initial process.allowedNodeEnvironmentFlags\n// from data in the config binding.\nfunction buildAllowedFlags() {\n  const {\n    envSettings: { kAllowedInEnvvar }\x2C\n    types: { kBoolean }\x2C\n  } = internalBinding('options');\n  const { options\x2C aliases } = require('internal/options');\n\n  const allowedNodeEnvironmentFlags = [];\n  for (const { 0: name\x2C 1: info } of options) {\n    if (info.envVarSettings === kAllowedInEnvvar) {\n      ArrayPrototypePush(allowedNodeEnvironmentFlags\x2C name);\n      if (info.type === kBoolean) {\n        const negatedName = `--no-${name.slice(2)}`;\n        ArrayPrototypePush(allowedNodeEnvironmentFlags\x2C negatedName);\n      }\n    }\n  }\n\n  function isAccepted(to) {\n    if (!StringPrototypeStartsWith(to\x2C '-') || to === '--') return true;\n    const recursiveExpansion = aliases.get(to);\n    if (recursiveExpansion) {\n      if (recursiveExpansion[0] === to)\n        ArrayPrototypeSplice(recursiveExpansion\x2C 0\x2C 1);\n      return ArrayPrototypeEvery(recursiveExpansion\x2C isAccepted);\n    }\n    return options.get(to).envVarSettings === kAllowedInEnvvar;\n  }\n  for (const { 0: from\x2C 1: expansion } of aliases) {\n    if (ArrayPrototypeEvery(expansion\x2C isAccepted)) {\n      let canonical = from;\n      if (StringPrototypeEndsWith(canonical\x2C '='))\n        canonical = StringPrototypeSlice(canonical\x2C 0\x2C canonical.length - 1);\n      if (StringPrototypeEndsWith(canonical\x2C ' <arg>'))\n        canonical = StringPrototypeSlice(canonical\x2C 0\x2C canonical.length - 4);\n      ArrayPrototypePush(allowedNodeEnvironmentFlags\x2C canonical);\n    }\n  }\n\n  const trimLeadingDashes =\n    (flag) => StringPrototypeReplace(flag\x2C leadingDashesRegex\x2C '');\n\n  // Save these for comparison against flags provided to\n  // process.allowedNodeEnvironmentFlags.has() which lack leading dashes.\n  const nodeFlags = ArrayPrototypeMap(allowedNodeEnvironmentFlags\x2C\n                                      trimLeadingDashes);\n\n  class NodeEnvironmentFlagsSet extends Set {\n    constructor(array) {\n      super();\n      this[kInternal] = { array };\n    }\n\n    add() {\n      // No-op\x2C `Set` API compatible\n      return this;\n    }\n\n    delete() {\n      // No-op\x2C `Set` API compatible\n      return false;\n    }\n\n    clear() {\n      // No-op\x2C `Set` API compatible\n    }\n\n    has(key) {\n      // This will return `true` based on various possible\n      // permutations of a flag\x2C including present/missing leading\n      // dash(es) and/or underscores-for-dashes.\n      // Strips any values after `=`\x2C inclusive.\n      // TODO(addaleax): It might be more flexible to run the option parser\n      // on a dummy option set and see whether it rejects the argument or\n      // not.\n      if (typeof key === 'string') {\n        key = StringPrototypeReplace(key\x2C replaceUnderscoresRegex\x2C '-');\n        if (RegExpPrototypeExec(leadingDashesRegex\x2C key) !== null) {\n          key = StringPrototypeReplace(key\x2C trailingValuesRegex\x2C '');\n          return ArrayPrototypeIncludes(this[kInternal].array\x2C key);\n        }\n        return ArrayPrototypeIncludes(nodeFlags\x2C key);\n      }\n      return false;\n    }\n\n    entries() {\n      this[kInternal].set ??=\n        new Set(new SafeArrayIterator(this[kInternal].array));\n      return SetPrototypeEntries(this[kInternal].set);\n    }\n\n    forEach(callback\x2C thisArg = undefined) {\n      ArrayPrototypeForEach(\n        this[kInternal].array\x2C\n        (v) => ReflectApply(callback\x2C thisArg\x2C [v\x2C v\x2C this])\x2C\n      );\n    }\n\n    get size() {\n      return this[kInternal].array.length;\n    }\n\n    values() {\n      this[kInternal].set ??=\n        new Set(new SafeArrayIterator(this[kInternal].array));\n      return SetPrototypeValues(this[kInternal].set);\n    }\n  }\n  const flagSetValues = NodeEnvironmentFlagsSet.prototype.values;\n  ObjectDefineProperty(NodeEnvironmentFlagsSet.prototype\x2C SymbolIterator\x2C {\n    __proto__: null\x2C\n    value: flagSetValues\x2C\n  });\n  ObjectDefineProperty(NodeEnvironmentFlagsSet.prototype\x2C 'keys'\x2C {\n    __proto__: null\x2C\n    value: flagSetValues\x2C\n  });\n\n  ObjectFreeze(NodeEnvironmentFlagsSet.prototype.constructor);\n  ObjectFreeze(NodeEnvironmentFlagsSet.prototype);\n\n  return ObjectFreeze(new NodeEnvironmentFlagsSet(\n    allowedNodeEnvironmentFlags\x2C\n  ));\n}\n\n// Lazy load internal/trace_events_async_hooks only if the async_hooks\n// trace event category is enabled.\nlet traceEventsAsyncHook;\n// Dynamically enable/disable the traceEventsAsyncHook\nfunction toggleTraceCategoryState(asyncHooksEnabled) {\n  if (asyncHooksEnabled) {\n    if (!traceEventsAsyncHook) {\n      traceEventsAsyncHook =\n        require('internal/trace_events_async_hooks').createHook();\n    }\n    traceEventsAsyncHook.enable();\n  } else if (traceEventsAsyncHook) {\n    traceEventsAsyncHook.disable();\n  }\n}\n\nmodule.exports = {\n  toggleTraceCategoryState\x2C\n  assert\x2C\n  buildAllowedFlags\x2C\n  wrapProcessMethods\x2C\n  hrtime\x2C\n  hrtimeBigInt\x2C\n  refreshHrtimeBuffer\x2C\n};\n
code-source-info,0x72b210f784,27,11992,12289,C0O12016C4O12045C10O12080C16O12111C21O12155C26O12156C30O12101C32O12180C35O12201C40O12201C46O12220C52O12252C55O12273C60O12273C65O12288,,
tick,0x7ff8091ad937,38698,0,0x0,3,0x109ba30d0,0x72b210f614,0x72b2102dec,0x723b73ff14,0x723b73f9b2
code-creation,JS,10,38721,0x72b211069c,62,setupInspectorHooks node:internal/process/pre_execution:501:29,0x72e2eba6d0,~
code-source-info,0x72b211069c,67,15413,15967,C0O15756C6O15760C11O15785C17O15851C23O15851C28O15820C33O15834C38O15897C44O15897C49O15925C54O15926C61O15966,,
code-creation,JS,10,38802,0x72b2110914,79,setupNavigator node:internal/process/pre_execution:363:24,0x72e2eba2e8,~
code-source-info,0x72b2110914,67,11085,11463,C0O11092C5O11096C9O11116C17O11143C23O11143C29O11203C30O11210C31O11301C38O11322C49O11301C54O11374C65O11405C72O11374C78O11462,,
code-creation,JS,10,38854,0x72b2110a5c,19,getEmbedderOptions node:internal/options:32:28,0x72e2e83540,~
code-source-info,0x72b2110a5c,17,760,877,C0O767C6O795C11O813C14O811C16O852C18O875,,
code-creation,JS,10,39035,0x72b2111114,126,setupWarningHandler node:internal/process/pre_execution:283:29,0x72e2eba1d8,~
code-source-info,0x72b2111114,67,9011,9503,C0O9011C11O9074C19O9074C24O9030C30O9045C36O9113C46O9117C57O9161C62O9165C69O9182C74O9197C79O9205C90O9205C96O9332C103O9336C108O9366C120O9366C125O9502,,
code-creation,JS,10,39180,0x72b2111794,232,setupUndici node:internal/process/pre_execution:305:21,0x72e2eba230,~
code-source-info,0x72b2111794,67,9598,10958,C0O9598C19O9605C26O9609C30O9629C36O9654C37O9661C38O9673C39O9673C41O10077C51O10082C62O10291C73O10307C82O10291C87O10341C99O10364C107O10394C118O10436C129O10477C140O10519C148O10341C153O10634C161O10634C166O10665C176O10666C181O10809C189O10813C195O10863C206O10886C217O10917C225O10863C231O10957,,
code-creation,JS,10,39276,0x72b2111cc4,33,lazyInterface node:internal/process/pre_execution:320:25,0x72b2111508,~
code-source-info,0x72b2111cc4,67,9854,10073,C0O9854C9O9867C14O9933C22O9991C32O10069,,
tick,0x109874155,39408,0,0x0,3,0x109ba30d0,0x72b2102e0a,0x723b73ff14,0x723b73f9b2
code-creation,JS,10,39436,0x72b211230c,172,setupWebCrypto node:internal/process/pre_execution:376:24,0x72e2eba340,~
code-source-info,0x72b211230c,67,11590,12519,C0O11597C5O11601C9O11621C17O11648C23O11648C29O11708C30O11715C31O11723C37O11727C42O11752C48O11771C55O11809C73O11771C78O12082C89O12110C94O12082C101O12220C108O12241C121O12310C152O12310C165O12220C171O12518,,
code-creation,JS,10,39613,0x72b21127dc,70,setupCustomEvent node:internal/process/pre_execution:424:26,0x72e2eba418,~
code-source-info,0x72b21127dc,67,13173,13425,C0O13180C5O13184C9O13204C17O13231C23O13231C29O13293C30O13300C31O13331C37O13331C42O13315C47O13367C54O13383C63O13367C69O13424,,
code-creation,JS,10,39691,0x72b21129ac,64,setupCodeCoverage node:internal/process/pre_execution:409:27,0x72e2eba3c0,~
code-source-info,0x72b21129ac,67,12547,13042,C0O12853C3O12865C8O12869C16O12896C22O12896C28O12950C31O12958C38O12987C44O13014C49O13018C54O12987C58O12979C63O13041,,
code-creation,JS,10,39771,0x72b2112b8c,75,setupDebugEnv node:internal/process/pre_execution:455:23,0x72e2eba548,~
code-source-info,0x72b2112b8c,67,13927,14136,C0O13934C6O13934C11O13967C19O13995C24O13999C29O13968C34O14014C42O14018C48O14062C54O14062C59O14097C64O14111C69O14112C74O14135,,
code-creation,JS,10,39958,0x72b2112efc,153,initializeDebugEnv node:internal/util/debuglog:21:28,0x72e2e89408,~
script-source,22,node:internal/util/debuglog,'use strict';\n\nconst {\n  ObjectDefineProperty\x2C\n  RegExp\x2C\n  RegExpPrototypeExec\x2C\n  SafeArrayIterator\x2C\n  StringPrototypeToLowerCase\x2C\n  StringPrototypeToUpperCase\x2C\n} = primordials;\n\nconst { inspect\x2C format\x2C formatWithOptions } = require('internal/util/inspect');\n\n// `debugImpls` and `testEnabled` are deliberately not initialized so any call\n// to `debuglog()` before `initializeDebugEnv()` is called will throw.\nlet debugImpls;\nlet testEnabled;\n\n\n// `debugEnv` is initial value of process.env.NODE_DEBUG\nfunction initializeDebugEnv(debugEnv) {\n  debugImpls = { __proto__: null };\n  if (debugEnv) {\n    // This is run before any user code\x2C it's OK not to use primordials.\n    debugEnv = debugEnv.replace(/[|\\\\{}()[\\]^$+?.]/g\x2C '\\\\$&')\n      .replaceAll('*'\x2C '.*')\n      .replaceAll('\x2C'\x2C '$|^');\n    const debugEnvRegex = new RegExp(`^${debugEnv}$`\x2C 'i');\n    testEnabled = (str) => RegExpPrototypeExec(debugEnvRegex\x2C str) !== null;\n  } else {\n    testEnabled = () => false;\n  }\n}\n\n// Emits warning when user sets\n// NODE_DEBUG=http or NODE_DEBUG=http2.\nfunction emitWarningIfNeeded(set) {\n  if ('HTTP' === set || 'HTTP2' === set) {\n    process.emitWarning('Setting the NODE_DEBUG environment variable ' +\n      'to \\'' + StringPrototypeToLowerCase(set) + '\\' can expose sensitive ' +\n      'data (such as passwords\x2C tokens and authentication headers) ' +\n      'in the resulting log.');\n  }\n}\n\nconst noop = () => {};\n\nlet utilColors;\nfunction lazyUtilColors() {\n  utilColors ??= require('internal/util/colors');\n  return utilColors;\n}\n\nfunction debuglogImpl(enabled\x2C set) {\n  if (debugImpls[set] === undefined) {\n    if (enabled) {\n      const pid = process.pid;\n      emitWarningIfNeeded(set);\n      debugImpls[set] = function debug(...args) {\n        const colors = lazyUtilColors().shouldColorize(process.stderr);\n        const msg = formatWithOptions({ colors }\x2C ...args);\n        const coloredPID = inspect(pid\x2C { colors });\n        process.stderr.write(format('%s %s: %s\\n'\x2C set\x2C coloredPID\x2C msg));\n      };\n    } else {\n      debugImpls[set] = noop;\n    }\n  }\n  return debugImpls[set];\n}\n\n// debuglogImpl depends on process.pid and process.env.NODE_DEBUG\x2C\n// so it needs to be called lazily in top scopes of internal modules\n// that may be loaded before these run time states are allowed to\n// be accessed.\nfunction debuglog(set\x2C cb) {\n  function init() {\n    set = StringPrototypeToUpperCase(set);\n    enabled = testEnabled(set);\n  }\n  let debug = (...args) => {\n    init();\n    // Only invokes debuglogImpl() when the debug function is\n    // called for the first time.\n    debug = debuglogImpl(enabled\x2C set);\n    if (typeof cb === 'function')\n      cb(debug);\n    switch (args.length) {\n      case 1: return debug(args[0]);\n      case 2: return debug(args[0]\x2C args[1]);\n      default: return debug(...new SafeArrayIterator(args));\n    }\n  };\n  let enabled;\n  let test = () => {\n    init();\n    test = () => enabled;\n    return enabled;\n  };\n  const logger = (...args) => {\n    switch (args.length) {\n      case 1: return debug(args[0]);\n      case 2: return debug(args[0]\x2C args[1]);\n      default: return debug(...new SafeArrayIterator(args));\n    }\n  };\n  ObjectDefineProperty(logger\x2C 'enabled'\x2C {\n    __proto__: null\x2C\n    get() {\n      return test();\n    }\x2C\n    configurable: true\x2C\n    enumerable: true\x2C\n  });\n  return logger;\n}\n\nmodule.exports = {\n  debuglog\x2C\n  initializeDebugEnv\x2C\n};\n
code-source-info,0x72b2112efc,22,530,976,C0O545C7O556C13O581C24O694C38O694C45O738C56O739C63O767C74O768C82O818C94O833C110O818C115O818C117O856C126O868C138O944C145O956C152O975,,
code-creation,JS,10,40353,0x72b211359c,31,initializeReport node:internal/process/pre_execution:443:26,0x72e2eba4c8,~
code-source-info,0x72b211359c,67,13679,13903,C0O13686C11O13707C16O13799C24O13686C30O13902,,
tick,0x109ae7ee0,40443,0,0x0,2,0x109ba30d0,0x72b2102e28,0x723b73ff14,0x723b73f9b2
code-creation,JS,10,40556,0x72b2113e2c,553,initializePermission node:internal/process/pre_execution:608:30,0x72e2eba830,~
code-source-info,0x72b2113e2c
code-creation,JS,10,40653,0x72b211424c,34, node:internal/process/pre_execution:663:53,0x72b2113ad0,~
code-source-info,0x72b211424c,67,20718,20878,C0O20750C5O20750C10O20788C16O20806C26O20812C31O20806C33O20877,,
code-creation,JS,10,40716,0x72b21143c4,35,initializeSourceMapsHandlers node:internal/process/pre_execution:744:38,0x72e2eba9c8,~
code-source-info,0x72b21143c4,67,23454,23615,C0O23501C6O23501C11O23473C16O23552C18O23573C24O23573C29O23552C34O23614,,
code-creation,JS,10,40835,0x72b21145a4,94,setSourceMapsEnabled node:internal/source_map/source_map_cache:55:30,0x72e2e9c668,~
script-source,38,node:internal/source_map/source_map_cache,'use strict';\n\nconst {\n  ArrayPrototypePush\x2C\n  JSONParse\x2C\n  ObjectKeys\x2C\n  RegExpPrototypeExec\x2C\n  SafeMap\x2C\n  StringPrototypeCodePointAt\x2C\n  StringPrototypeSplit\x2C\n} = primordials;\n\n// See https://sourcemaps.info/spec.html for SourceMap V3 specification.\nconst { Buffer } = require('buffer');\nlet debug = require('internal/util/debuglog').debuglog('source_map'\x2C (fn) => {\n  debug = fn;\n});\n\nconst { validateBoolean } = require('internal/validators');\nconst {\n  setSourceMapsEnabled: setSourceMapsNative\x2C\n} = internalBinding('errors');\nconst {\n  setInternalPrepareStackTrace\x2C\n} = require('internal/errors');\nconst { getLazy } = require('internal/util');\n\n// Since the CJS module cache is mutable\x2C which leads to memory leaks when\n// modules are deleted\x2C we use a WeakMap so that the source map cache will\n// be purged automatically:\nconst getCjsSourceMapCache = getLazy(() => {\n  const { IterableWeakMap } = require('internal/util/iterable_weak_map');\n  return new IterableWeakMap();\n});\n\n// The esm cache is not mutable\x2C so we can use a Map without memory concerns:\nconst esmSourceMapCache = new SafeMap();\n// The generated sources is not mutable\x2C so we can use a Map without memory concerns:\nconst generatedSourceMapCache = new SafeMap();\nconst kLeadingProtocol = /^\\w+:\\/\\//;\nconst kSourceMappingURLMagicComment = /\\/[*/]#\\s+sourceMappingURL=(?<sourceMappingURL>[^\\s]+)/g;\nconst kSourceURLMagicComment = /\\/[*/]#\\s+sourceURL=(?<sourceURL>[^\\s]+)/g;\n\nconst { isAbsolute } = require('path');\nconst { fileURLToPath\x2C pathToFileURL\x2C URL } = require('internal/url');\n\nlet SourceMap;\n\n// This is configured with --enable-source-maps during pre-execution.\nlet sourceMapsEnabled = false;\nfunction getSourceMapsEnabled() {\n  return sourceMapsEnabled;\n}\n\nfunction setSourceMapsEnabled(val) {\n  validateBoolean(val\x2C 'val');\n\n  setSourceMapsNative(val);\n  if (val) {\n    const {\n      prepareStackTraceWithSourceMaps\x2C\n    } = require('internal/source_map/prepare_stack_trace');\n    setInternalPrepareStackTrace(prepareStackTraceWithSourceMaps);\n  } else if (sourceMapsEnabled !== undefined) {\n    // Reset prepare stack trace callback only when disabling source maps.\n    const {\n      defaultPrepareStackTrace\x2C\n    } = require('internal/errors');\n    setInternalPrepareStackTrace(defaultPrepareStackTrace);\n  }\n\n  sourceMapsEnabled = val;\n}\n\nfunction extractSourceURLMagicComment(content) {\n  let match;\n  let matchSourceURL;\n  // A while loop is used here to get the last occurrence of sourceURL.\n  // This is needed so that we don't match sourceURL in string literals.\n  while ((match = RegExpPrototypeExec(kSourceURLMagicComment\x2C content))) {\n    matchSourceURL = match;\n  }\n  if (matchSourceURL == null) {\n    return null;\n  }\n  let sourceURL = matchSourceURL.groups.sourceURL;\n  if (sourceURL != null && RegExpPrototypeExec(kLeadingProtocol\x2C sourceURL) === null) {\n    sourceURL = pathToFileURL(sourceURL).href;\n  }\n  return sourceURL;\n}\n\nfunction extractSourceMapURLMagicComment(content) {\n  let match;\n  let lastMatch;\n  // A while loop is used here to get the last occurrence of sourceMappingURL.\n  // This is needed so that we don't match sourceMappingURL in string literals.\n  while ((match = RegExpPrototypeExec(kSourceMappingURLMagicComment\x2C content))) {\n    lastMatch = match;\n  }\n  if (lastMatch == null) {\n    return null;\n  }\n  return lastMatch.groups.sourceMappingURL;\n}\n\nfunction maybeCacheSourceMap(filename\x2C content\x2C cjsModuleInstance\x2C isGeneratedSource\x2C sourceURL\x2C sourceMapURL) {\n  const sourceMapsEnabled = getSourceMapsEnabled();\n  if (!(process.env.NODE_V8_COVERAGE || sourceMapsEnabled)) return;\n  try {\n    const { normalizeReferrerURL } = require('internal/modules/helpers');\n    filename = normalizeReferrerURL(filename);\n  } catch (err) {\n    // This is most likely an invalid filename in sourceURL of [eval]-wrapper.\n    debug(err);\n    return;\n  }\n\n  if (sourceMapURL === undefined) {\n    sourceMapURL = extractSourceMapURLMagicComment(content);\n  }\n\n  // Bail out when there is no source map url.\n  if (typeof sourceMapURL !== 'string') {\n    return;\n  }\n\n  if (sourceURL === undefined) {\n    sourceURL = extractSourceURLMagicComment(content);\n  }\n\n  const data = dataFromUrl(filename\x2C sourceMapURL);\n  const url = data ? null : sourceMapURL;\n  if (cjsModuleInstance) {\n    getCjsSourceMapCache().set(cjsModuleInstance\x2C {\n      __proto__: null\x2C\n      filename\x2C\n      lineLengths: lineLengths(content)\x2C\n      data\x2C\n      url\x2C\n      sourceURL\x2C\n    });\n  } else if (isGeneratedSource) {\n    const entry = {\n      __proto__: null\x2C\n      lineLengths: lineLengths(content)\x2C\n      data\x2C\n      url\x2C\n      sourceURL\x2C\n    };\n    generatedSourceMapCache.set(filename\x2C entry);\n    if (sourceURL) {\n      generatedSourceMapCache.set(sourceURL\x2C entry);\n    }\n  } else {\n    // If there is no cjsModuleInstance and is not generated source assume we are in a\n    // "modules/esm" context.\n    const entry = {\n      __proto__: null\x2C\n      lineLengths: lineLengths(content)\x2C\n      data\x2C\n      url\x2C\n      sourceURL\x2C\n    };\n    esmSourceMapCache.set(filename\x2C entry);\n    if (sourceURL) {\n      esmSourceMapCache.set(sourceURL\x2C entry);\n    }\n  }\n}\n\nfunction maybeCacheGeneratedSourceMap(content) {\n  const sourceMapsEnabled = getSourceMapsEnabled();\n  if (!(process.env.NODE_V8_COVERAGE || sourceMapsEnabled)) return;\n\n  const sourceURL = extractSourceURLMagicComment(content);\n  if (sourceURL === null) {\n    return;\n  }\n  try {\n    maybeCacheSourceMap(sourceURL\x2C content\x2C null\x2C true\x2C sourceURL);\n  } catch (err) {\n    // This can happen if the filename is not a valid URL.\n    // If we fail to cache the source map\x2C we should not fail the whole process.\n    debug(err);\n  }\n}\n\nfunction dataFromUrl(sourceURL\x2C sourceMappingURL) {\n  try {\n    const url = new URL(sourceMappingURL);\n    switch (url.protocol) {\n      case 'data:':\n        return sourceMapFromDataUrl(sourceURL\x2C url.pathname);\n      default:\n        debug(`unknown protocol ${url.protocol}`);\n        return null;\n    }\n  } catch (err) {\n    debug(err);\n    // If no scheme is present\x2C we assume we are dealing with a file path.\n    const mapURL = new URL(sourceMappingURL\x2C sourceURL).href;\n    return sourceMapFromFile(mapURL);\n  }\n}\n\n// Cache the length of each line in the file that a source map was extracted\n// from. This allows translation from byte offset V8 coverage reports\x2C\n// to line/column offset Source Map V3.\nfunction lineLengths(content) {\n  const contentLength = content.length;\n  const output = [];\n  let lineLength = 0;\n  for (let i = 0; i < contentLength; i++\x2C lineLength++) {\n    const codePoint = StringPrototypeCodePointAt(content\x2C i);\n\n    // We purposefully keep \\r as part of the line-length calculation\x2C in\n    // cases where there is a \\r\\n separator\x2C so that this can be taken into\n    // account in coverage calculations.\n    // codepoints for \\n (new line)\x2C \\u2028 (line separator) and \\u2029 (paragraph separator)\n    if (codePoint === 10 || codePoint === 0x2028 || codePoint === 0x2029) {\n      ArrayPrototypePush(output\x2C lineLength);\n      lineLength = -1; // To not count the matched codePoint such as \\n character\n    }\n  }\n  ArrayPrototypePush(output\x2C lineLength);\n  return output;\n}\n\n\nfunction sourceMapFromFile(mapURL) {\n  try {\n    const fs = require('fs');\n    const content = fs.readFileSync(fileURLToPath(mapURL)\x2C 'utf8');\n    const data = JSONParse(content);\n    return sourcesToAbsolute(mapURL\x2C data);\n  } catch (err) {\n    debug(err);\n    return null;\n  }\n}\n\n// data:[<mediatype>][;base64]\x2C<data> see:\n// https://tools.ietf.org/html/rfc2397#section-2\nfunction sourceMapFromDataUrl(sourceURL\x2C url) {\n  const { 0: format\x2C 1: data } = StringPrototypeSplit(url\x2C '\x2C');\n  const splitFormat = StringPrototypeSplit(format\x2C ';');\n  const contentType = splitFormat[0];\n  const base64 = splitFormat[splitFormat.length - 1] === 'base64';\n  if (contentType === 'application/json') {\n    const decodedData = base64 ?\n      Buffer.from(data\x2C 'base64').toString('utf8') : data;\n    try {\n      const parsedData = JSONParse(decodedData);\n      return sourcesToAbsolute(sourceURL\x2C parsedData);\n    } catch (err) {\n      debug(err);\n      return null;\n    }\n  } else {\n    debug(`unknown content-type ${contentType}`);\n    return null;\n  }\n}\n\n// If the sources are not absolute URLs after prepending of the "sourceRoot"\x2C\n// the sources are resolved relative to the SourceMap (like resolving script\n// src in a html document).\n// If the sources are absolute paths\x2C the sources are converted to absolute file URLs.\nfunction sourcesToAbsolute(baseURL\x2C data) {\n  data.sources = data.sources.map((source) => {\n    source = (data.sourceRoot || '') + source;\n    if (isAbsolute(source)) {\n      return pathToFileURL(source).href;\n    }\n    return new URL(source\x2C baseURL).href;\n  });\n  // The sources array is now resolved to absolute URLs\x2C sourceRoot should\n  // be updated to noop.\n  data.sourceRoot = '';\n  return data;\n}\n\n// WARNING: The `sourceMapCacheToObject` and `appendCJSCache` run during\n// shutdown. In particular\x2C they also run when Workers are terminated\x2C making\n// it important that they do not call out to any user-provided code\x2C including\n// built-in prototypes that might have been tampered with.\n\n// Get serialized representation of source-map cache\x2C this is used\n// to persist a cache of source-maps to disk when NODE_V8_COVERAGE is enabled.\nfunction sourceMapCacheToObject() {\n  const obj = { __proto__: null };\n\n  for (const { 0: k\x2C 1: v } of esmSourceMapCache) {\n    obj[k] = v;\n  }\n\n  appendCJSCache(obj);\n\n  if (ObjectKeys(obj).length === 0) {\n    return undefined;\n  }\n  return obj;\n}\n\nfunction appendCJSCache(obj) {\n  for (const value of getCjsSourceMapCache()) {\n    obj[value.filename] = {\n      __proto__: null\x2C\n      lineLengths: value.lineLengths\x2C\n      data: value.data\x2C\n      url: value.url\x2C\n    };\n  }\n}\n\nfunction findSourceMap(sourceURL) {\n  if (RegExpPrototypeExec(kLeadingProtocol\x2C sourceURL) === null) {\n    sourceURL = pathToFileURL(sourceURL).href;\n  }\n  if (!SourceMap) {\n    SourceMap = require('internal/source_map/source_map').SourceMap;\n  }\n  let entry = esmSourceMapCache.get(sourceURL) ?? generatedSourceMapCache.get(sourceURL);\n  if (entry === undefined) {\n    for (const value of getCjsSourceMapCache()) {\n      const filename = value.filename;\n      const cachedSourceURL = value.sourceURL;\n      if (sourceURL === filename || sourceURL === cachedSourceURL) {\n        entry = value;\n      }\n    }\n  }\n  if (entry === undefined) {\n    return undefined;\n  }\n  let sourceMap = entry.sourceMap;\n  if (sourceMap === undefined) {\n    sourceMap = new SourceMap(entry.data\x2C { lineLengths: entry.lineLengths });\n    entry.sourceMap = sourceMap;\n  }\n  return sourceMap;\n}\n\nmodule.exports = {\n  findSourceMap\x2C\n  getSourceMapsEnabled\x2C\n  setSourceMapsEnabled\x2C\n  maybeCacheSourceMap\x2C\n  maybeCacheGeneratedSourceMap\x2C\n  sourceMapCacheToObject\x2C\n};\n
code-source-info,0x72b21145a4,38,1771,2326,C0O1781C8O1781C13O1813C18O1813C22O1841C26O1911C32O1911C37O1870C42O1967C47O1967C53O2039C59O2205C65O2205C70O2171C75O2237C80O2237C84O2300C86O2318C93O2325,,
tick,0x7ff8091ad75c,41932,0,0x0,3,0x109ba30d0,0x72b21143e1,0x72b2102e2e,0x723b73ff14,0x723b73f9b2
code-creation,JS,10,41996,0x72b211522c,30, node:internal/validators:216:41,0x722077df20,~
script-source,15,node:internal/validators,/* eslint jsdoc/require-jsdoc: "error" */\n\n'use strict';\n\nconst {\n  ArrayIsArray\x2C\n  ArrayPrototypeIncludes\x2C\n  ArrayPrototypeJoin\x2C\n  ArrayPrototypeMap\x2C\n  NumberIsInteger\x2C\n  NumberIsNaN\x2C\n  NumberMAX_SAFE_INTEGER\x2C\n  NumberMIN_SAFE_INTEGER\x2C\n  NumberParseInt\x2C\n  ObjectPrototypeHasOwnProperty\x2C\n  RegExpPrototypeExec\x2C\n  String\x2C\n  StringPrototypeToUpperCase\x2C\n  StringPrototypeTrim\x2C\n} = primordials;\n\nconst {\n  hideStackFrames\x2C\n  codes: {\n    ERR_SOCKET_BAD_PORT: { HideStackFramesError: ERR_SOCKET_BAD_PORT }\x2C\n    ERR_INVALID_ARG_TYPE: { HideStackFramesError: ERR_INVALID_ARG_TYPE }\x2C\n    ERR_INVALID_ARG_VALUE: { HideStackFramesError: ERR_INVALID_ARG_VALUE }\x2C\n    ERR_OUT_OF_RANGE: { HideStackFramesError: ERR_OUT_OF_RANGE }\x2C\n    ERR_UNKNOWN_SIGNAL: { HideStackFramesError: ERR_UNKNOWN_SIGNAL }\x2C\n  }\x2C\n} = require('internal/errors');\nconst { normalizeEncoding } = require('internal/util');\nconst {\n  isAsyncFunction\x2C\n  isArrayBufferView\x2C\n} = require('internal/util/types');\nconst { signals } = internalBinding('constants').os;\n\n/**\n * @param {*} value\n * @returns {boolean}\n */\nfunction isInt32(value) {\n  return value === (value | 0);\n}\n\n/**\n * @param {*} value\n * @returns {boolean}\n */\nfunction isUint32(value) {\n  return value === (value >>> 0);\n}\n\nconst octalReg = /^[0-7]+$/;\nconst modeDesc = 'must be a 32-bit unsigned integer or an octal string';\n\n/**\n * Parse and validate values that will be converted into mode_t (the S_*\n * constants). Only valid numbers and octal strings are allowed. They could be\n * converted to 32-bit unsigned integers or non-negative signed integers in the\n * C++ land\x2C but any value higher than 0o777 will result in platform-specific\n * behaviors.\n * @param {*} value Values to be validated\n * @param {string} name Name of the argument\n * @param {number} [def] If specified\x2C will be returned for invalid values\n * @returns {number}\n */\nfunction parseFileMode(value\x2C name\x2C def) {\n  value ??= def;\n  if (typeof value === 'string') {\n    if (RegExpPrototypeExec(octalReg\x2C value) === null) {\n      throw new ERR_INVALID_ARG_VALUE(name\x2C value\x2C modeDesc);\n    }\n    value = NumberParseInt(value\x2C 8);\n  }\n\n  validateUint32(value\x2C name);\n  return value;\n}\n\n/**\n * @callback validateInteger\n * @param {*} value\n * @param {string} name\n * @param {number} [min]\n * @param {number} [max]\n * @returns {asserts value is number}\n */\n\n/** @type {validateInteger} */\nconst validateInteger = hideStackFrames(\n  (value\x2C name\x2C min = NumberMIN_SAFE_INTEGER\x2C max = NumberMAX_SAFE_INTEGER) => {\n    if (typeof value !== 'number')\n      throw new ERR_INVALID_ARG_TYPE(name\x2C 'number'\x2C value);\n    if (!NumberIsInteger(value))\n      throw new ERR_OUT_OF_RANGE(name\x2C 'an integer'\x2C value);\n    if (value < min || value > max)\n      throw new ERR_OUT_OF_RANGE(name\x2C `>= ${min} && <= ${max}`\x2C value);\n  }\x2C\n);\n\n/**\n * @callback validateInt32\n * @param {*} value\n * @param {string} name\n * @param {number} [min]\n * @param {number} [max]\n * @returns {asserts value is number}\n */\n\n/** @type {validateInt32} */\nconst validateInt32 = hideStackFrames(\n  (value\x2C name\x2C min = -2147483648\x2C max = 2147483647) => {\n    // The defaults for min and max correspond to the limits of 32-bit integers.\n    if (typeof value !== 'number') {\n      throw new ERR_INVALID_ARG_TYPE(name\x2C 'number'\x2C value);\n    }\n    if (!NumberIsInteger(value)) {\n      throw new ERR_OUT_OF_RANGE(name\x2C 'an integer'\x2C value);\n    }\n    if (value < min || value > max) {\n      throw new ERR_OUT_OF_RANGE(name\x2C `>= ${min} && <= ${max}`\x2C value);\n    }\n  }\x2C\n);\n\n/**\n * @callback validateUint32\n * @param {*} value\n * @param {string} name\n * @param {number|boolean} [positive=false]\n * @returns {asserts value is number}\n */\n\n/** @type {validateUint32} */\nconst validateUint32 = hideStackFrames((value\x2C name\x2C positive = false) => {\n  if (typeof value !== 'number') {\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'number'\x2C value);\n  }\n  if (!NumberIsInteger(value)) {\n    throw new ERR_OUT_OF_RANGE(name\x2C 'an integer'\x2C value);\n  }\n  const min = positive ? 1 : 0;\n  // 2 ** 32 === 4294967296\n  const max = 4_294_967_295;\n  if (value < min || value > max) {\n    throw new ERR_OUT_OF_RANGE(name\x2C `>= ${min} && <= ${max}`\x2C value);\n  }\n});\n\n/**\n * @callback validateString\n * @param {*} value\n * @param {string} name\n * @returns {asserts value is string}\n */\n\n/** @type {validateString} */\nconst validateString = hideStackFrames((value\x2C name) => {\n  if (typeof value !== 'string')\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'string'\x2C value);\n});\n\n/**\n * @callback validateNumber\n * @param {*} value\n * @param {string} name\n * @param {number} [min]\n * @param {number} [max]\n * @returns {asserts value is number}\n */\n\n/** @type {validateNumber} */\nconst validateNumber = hideStackFrames((value\x2C name\x2C min = undefined\x2C max) => {\n  if (typeof value !== 'number')\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'number'\x2C value);\n\n  if ((min != null && value < min) || (max != null && value > max) ||\n    ((min != null || max != null) && NumberIsNaN(value))) {\n    throw new ERR_OUT_OF_RANGE(\n      name\x2C\n      `${min != null ? `>= ${min}` : ''}${min != null && max != null ? ' && ' : ''}${max != null ? `<= ${max}` : ''}`\x2C\n      value);\n  }\n});\n\n/**\n * @callback validateOneOf\n * @template T\n * @param {T} value\n * @param {string} name\n * @param {T[]} oneOf\n */\n\n/** @type {validateOneOf} */\nconst validateOneOf = hideStackFrames((value\x2C name\x2C oneOf) => {\n  if (!ArrayPrototypeIncludes(oneOf\x2C value)) {\n    const allowed = ArrayPrototypeJoin(\n      ArrayPrototypeMap(oneOf\x2C (v) =>\n        (typeof v === 'string' ? `'${v}'` : String(v)))\x2C\n      '\x2C ');\n    const reason = 'must be one of: ' + allowed;\n    throw new ERR_INVALID_ARG_VALUE(name\x2C value\x2C reason);\n  }\n});\n\n/**\n * @callback validateBoolean\n * @param {*} value\n * @param {string} name\n * @returns {asserts value is boolean}\n */\n\n/** @type {validateBoolean} */\nconst validateBoolean = hideStackFrames((value\x2C name) => {\n  if (typeof value !== 'boolean')\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'boolean'\x2C value);\n});\n\nconst kValidateObjectNone = 0;\nconst kValidateObjectAllowNullable = 1 << 0;\nconst kValidateObjectAllowArray = 1 << 1;\nconst kValidateObjectAllowFunction = 1 << 2;\n\n/**\n * @callback validateObject\n * @param {*} value\n * @param {string} name\n * @param {number} [options]\n */\n\n/** @type {validateObject} */\nconst validateObject = hideStackFrames(\n  (value\x2C name\x2C options = kValidateObjectNone) => {\n    if (options === kValidateObjectNone) {\n      if (value === null || ArrayIsArray(value)) {\n        throw new ERR_INVALID_ARG_TYPE(name\x2C 'Object'\x2C value);\n      }\n\n      if (typeof value !== 'object') {\n        throw new ERR_INVALID_ARG_TYPE(name\x2C 'Object'\x2C value);\n      }\n    } else {\n      const throwOnNullable = (kValidateObjectAllowNullable & options) === 0;\n\n      if (throwOnNullable && value === null) {\n        throw new ERR_INVALID_ARG_TYPE(name\x2C 'Object'\x2C value);\n      }\n\n      const throwOnArray = (kValidateObjectAllowArray & options) === 0;\n\n      if (throwOnArray && ArrayIsArray(value)) {\n        throw new ERR_INVALID_ARG_TYPE(name\x2C 'Object'\x2C value);\n      }\n\n      const throwOnFunction = (kValidateObjectAllowFunction & options) === 0;\n      const typeofValue = typeof value;\n\n      if (typeofValue !== 'object' && (throwOnFunction || typeofValue !== 'function')) {\n        throw new ERR_INVALID_ARG_TYPE(name\x2C 'Object'\x2C value);\n      }\n    }\n  });\n\n/**\n * @callback validateDictionary - We are using the Web IDL Standard definition\n *                                of "dictionary" here\x2C which means any value\n *                                whose Type is either Undefined\x2C Null\x2C or\n *                                Object (which includes functions).\n * @param {*} value\n * @param {string} name\n * @see https://webidl.spec.whatwg.org/#es-dictionary\n * @see https://tc39.es/ecma262/#table-typeof-operator-results\n */\n\n/** @type {validateDictionary} */\nconst validateDictionary = hideStackFrames(\n  (value\x2C name) => {\n    if (value != null && typeof value !== 'object' && typeof value !== 'function') {\n      throw new ERR_INVALID_ARG_TYPE(name\x2C 'a dictionary'\x2C value);\n    }\n  });\n\n/**\n * @callback validateArray\n * @param {*} value\n * @param {string} name\n * @param {number} [minLength]\n * @returns {asserts value is any[]}\n */\n\n/** @type {validateArray} */\nconst validateArray = hideStackFrames((value\x2C name\x2C minLength = 0) => {\n  if (!ArrayIsArray(value)) {\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'Array'\x2C value);\n  }\n  if (value.length < minLength) {\n    const reason = `must be longer than ${minLength}`;\n    throw new ERR_INVALID_ARG_VALUE(name\x2C value\x2C reason);\n  }\n});\n\n/**\n * @callback validateStringArray\n * @param {*} value\n * @param {string} name\n * @returns {asserts value is string[]}\n */\n\n/** @type {validateStringArray} */\nconst validateStringArray = hideStackFrames((value\x2C name) => {\n  validateArray(value\x2C name);\n  for (let i = 0; i < value.length; ++i) {\n    // Don't use validateString here for performance reasons\x2C as\n    // we would generate intermediate strings for the name.\n    if (typeof value[i] !== 'string') {\n      throw new ERR_INVALID_ARG_TYPE(`${name}[${i}]`\x2C 'string'\x2C value[i]);\n    }\n  }\n});\n\n/**\n * @callback validateBooleanArray\n * @param {*} value\n * @param {string} name\n * @returns {asserts value is boolean[]}\n */\n\n/** @type {validateBooleanArray} */\nconst validateBooleanArray = hideStackFrames((value\x2C name) => {\n  validateArray(value\x2C name);\n  for (let i = 0; i < value.length; ++i) {\n    // Don't use validateBoolean here for performance reasons\x2C as\n    // we would generate intermediate strings for the name.\n    if (value[i] !== true && value[i] !== false) {\n      throw new ERR_INVALID_ARG_TYPE(`${name}[${i}]`\x2C 'boolean'\x2C value[i]);\n    }\n  }\n});\n\n/**\n * @callback validateAbortSignalArray\n * @param {*} value\n * @param {string} name\n * @returns {asserts value is AbortSignal[]}\n */\n\n/** @type {validateAbortSignalArray} */\nfunction validateAbortSignalArray(value\x2C name) {\n  validateArray(value\x2C name);\n  for (let i = 0; i < value.length; i++) {\n    const signal = value[i];\n    const indexedName = `${name}[${i}]`;\n    if (signal == null) {\n      throw new ERR_INVALID_ARG_TYPE(indexedName\x2C 'AbortSignal'\x2C signal);\n    }\n    validateAbortSignal(signal\x2C indexedName);\n  }\n}\n\n/**\n * @param {*} signal\n * @param {string} [name='signal']\n * @returns {asserts signal is keyof signals}\n */\nconst validateSignalName = hideStackFrames((signal\x2C name = 'signal') => {\n  validateString(signal\x2C name);\n\n  if (signals[signal] === undefined) {\n    if (signals[StringPrototypeToUpperCase(signal)] !== undefined) {\n      throw new ERR_UNKNOWN_SIGNAL(signal +\n                                   ' (signals must use all capital letters)');\n    }\n\n    throw new ERR_UNKNOWN_SIGNAL(signal);\n  }\n});\n\n/**\n * @callback validateBuffer\n * @param {*} buffer\n * @param {string} [name='buffer']\n * @returns {asserts buffer is ArrayBufferView}\n */\n\n/** @type {validateBuffer} */\nconst validateBuffer = hideStackFrames((buffer\x2C name = 'buffer') => {\n  if (!isArrayBufferView(buffer)) {\n    throw new ERR_INVALID_ARG_TYPE(name\x2C\n                                   ['Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C\n                                   buffer);\n  }\n});\n\n/**\n * @param {string} data\n * @param {string} encoding\n */\nconst validateEncoding = hideStackFrames((data\x2C encoding) => {\n  const normalizedEncoding = normalizeEncoding(encoding);\n  const length = data.length;\n\n  if (normalizedEncoding === 'hex' && length % 2 !== 0) {\n    throw new ERR_INVALID_ARG_VALUE('encoding'\x2C encoding\x2C\n                                    `is invalid for data of length ${length}`);\n  }\n});\n\n/**\n * Check that the port number is not NaN when coerced to a number\x2C\n * is an integer and that it falls within the legal range of port numbers.\n * @param {*} port\n * @param {string} [name='Port']\n * @param {boolean} [allowZero=true]\n * @returns {number}\n */\nconst validatePort = hideStackFrames((port\x2C name = 'Port'\x2C allowZero = true) => {\n  if ((typeof port !== 'number' && typeof port !== 'string') ||\n      (typeof port === 'string' && StringPrototypeTrim(port).length === 0) ||\n      +port !== (+port >>> 0) ||\n      port > 0xFFFF ||\n      (port === 0 && !allowZero)) {\n    throw new ERR_SOCKET_BAD_PORT(name\x2C port\x2C allowZero);\n  }\n  return port | 0;\n});\n\n/**\n * @callback validateAbortSignal\n * @param {*} signal\n * @param {string} name\n */\n\n/** @type {validateAbortSignal} */\nconst validateAbortSignal = hideStackFrames((signal\x2C name) => {\n  if (signal !== undefined &&\n      (signal === null ||\n       typeof signal !== 'object' ||\n       !('aborted' in signal))) {\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'AbortSignal'\x2C signal);\n  }\n});\n\n/**\n * @callback validateFunction\n * @param {*} value\n * @param {string} name\n * @returns {asserts value is Function}\n */\n\n/** @type {validateFunction} */\nconst validateFunction = hideStackFrames((value\x2C name) => {\n  if (typeof value !== 'function')\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'Function'\x2C value);\n});\n\n/**\n * @callback validatePlainFunction\n * @param {*} value\n * @param {string} name\n * @returns {asserts value is Function}\n */\n\n/** @type {validatePlainFunction} */\nconst validatePlainFunction = hideStackFrames((value\x2C name) => {\n  if (typeof value !== 'function' || isAsyncFunction(value))\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'Function'\x2C value);\n});\n\n/**\n * @callback validateUndefined\n * @param {*} value\n * @param {string} name\n * @returns {asserts value is undefined}\n */\n\n/** @type {validateUndefined} */\nconst validateUndefined = hideStackFrames((value\x2C name) => {\n  if (value !== undefined)\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'undefined'\x2C value);\n});\n\n/**\n * @template T\n * @param {T} value\n * @param {string} name\n * @param {T[]} union\n */\nfunction validateUnion(value\x2C name\x2C union) {\n  if (!ArrayPrototypeIncludes(union\x2C value)) {\n    throw new ERR_INVALID_ARG_TYPE(name\x2C `('${ArrayPrototypeJoin(union\x2C '|')}')`\x2C value);\n  }\n}\n\n/*\n  The rules for the Link header field are described here:\n  https://www.rfc-editor.org/rfc/rfc8288.html#section-3\n\n  This regex validates any string surrounded by angle brackets\n  (not necessarily a valid URI reference) followed by zero or more\n  link-params separated by semicolons.\n*/\nconst linkValueRegExp = /^(?:<[^>]*>)(?:\\s*;\\s*[^;"\\s]+(?:=(")?[^;"\\s]*\\1)?)*$/;\n\n/**\n * @param {any} value\n * @param {string} name\n */\nconst validateLinkHeaderFormat = hideStackFrames((value\x2C name) => {\n  if (\n    typeof value === 'undefined' ||\n    !RegExpPrototypeExec(linkValueRegExp\x2C value)\n  ) {\n    throw new ERR_INVALID_ARG_VALUE(\n      name\x2C\n      value\x2C\n      'must be an array or string of format "</styles.css>; rel=preload; as=style"'\x2C\n    );\n  }\n});\n\nconst validateInternalField = hideStackFrames((object\x2C fieldKey\x2C className) => {\n  if (typeof object !== 'object' || object === null || !ObjectPrototypeHasOwnProperty(object\x2C fieldKey)) {\n    throw new ERR_INVALID_ARG_TYPE('this'\x2C className\x2C object);\n  }\n});\n\n/**\n * @param {any} hints\n * @return {string}\n */\nconst validateLinkHeaderValue = hideStackFrames((hints) => {\n  if (typeof hints === 'string') {\n    validateLinkHeaderFormat.withoutStackTrace(hints\x2C 'hints');\n    return hints;\n  } else if (ArrayIsArray(hints)) {\n    const hintsLength = hints.length;\n    let result = '';\n\n    if (hintsLength === 0) {\n      return result;\n    }\n\n    for (let i = 0; i < hintsLength; i++) {\n      const link = hints[i];\n      validateLinkHeaderFormat.withoutStackTrace(link\x2C 'hints');\n      result += link;\n\n      if (i !== hintsLength - 1) {\n        result += '\x2C ';\n      }\n    }\n\n    return result;\n  }\n\n  throw new ERR_INVALID_ARG_VALUE(\n    'hints'\x2C\n    hints\x2C\n    'must be an array or string of format "</styles.css>; rel=preload; as=style"'\x2C\n  );\n});\n\nmodule.exports = {\n  isInt32\x2C\n  isUint32\x2C\n  parseFileMode\x2C\n  validateArray\x2C\n  validateStringArray\x2C\n  validateBooleanArray\x2C\n  validateAbortSignalArray\x2C\n  validateBoolean\x2C\n  validateBuffer\x2C\n  validateDictionary\x2C\n  validateEncoding\x2C\n  validateFunction\x2C\n  validateInt32\x2C\n  validateInteger\x2C\n  validateNumber\x2C\n  validateObject\x2C\n  kValidateObjectNone\x2C\n  kValidateObjectAllowNullable\x2C\n  kValidateObjectAllowArray\x2C\n  kValidateObjectAllowFunction\x2C\n  validateOneOf\x2C\n  validatePlainFunction\x2C\n  validatePort\x2C\n  validateSignalName\x2C\n  validateString\x2C\n  validateUint32\x2C\n  validateUndefined\x2C\n  validateUnion\x2C\n  validateAbortSignal\x2C\n  validateLinkHeaderValue\x2C\n  validateInternalField\x2C\n};\n
code-source-info,0x72b211522c,15,5887,6001,C0O5908C6O5944C22O5950C27O5944C29O6000,,
tick,0x1092fe460,43874,0,0x0,3,0x109ba30d0,0x7220777eca,0x72b21145ac,0x72b21143e1,0x72b2102e2e,0x723b73ff14,0x723b73f9b2
tick,0x10ae06230,43900,0,0x0,3,0x109ba30d0,0x7220777eca,0x72b21145ac,0x72b21143e1,0x72b2102e2e,0x723b73ff14,0x723b73f9b2
code-creation,JS,10,44183,0x72b21165e4,10,setInternalPrepareStackTrace node:internal/errors:113:38,0x7220775cb0,~
script-source,10,node:internal/errors,/* eslint node-core/documented-errors: "error" */\n/* eslint node-core/alphabetize-errors: "error" */\n/* eslint node-core/prefer-util-format-errors: "error" */\n\n'use strict';\n\n// The whole point behind this internal module is to allow Node.js to no\n// longer be forced to treat every error message change as a semver-major\n// change. The NodeError classes here all expose a `code` property whose\n// value statically and permanently identifies the error. While the error\n// message may change\x2C the code should not.\n\nconst {\n  AggregateError\x2C\n  ArrayFrom\x2C\n  ArrayIsArray\x2C\n  ArrayPrototypeFilter\x2C\n  ArrayPrototypeIncludes\x2C\n  ArrayPrototypeIndexOf\x2C\n  ArrayPrototypeJoin\x2C\n  ArrayPrototypeMap\x2C\n  ArrayPrototypePush\x2C\n  ArrayPrototypeSlice\x2C\n  ArrayPrototypeSplice\x2C\n  ArrayPrototypeUnshift\x2C\n  Error\x2C\n  ErrorCaptureStackTrace\x2C\n  ErrorPrototypeToString\x2C\n  JSONStringify\x2C\n  MapPrototypeGet\x2C\n  MathAbs\x2C\n  MathMax\x2C\n  Number\x2C\n  NumberIsInteger\x2C\n  ObjectAssign\x2C\n  ObjectDefineProperty\x2C\n  ObjectDefineProperties\x2C\n  ObjectIsExtensible\x2C\n  ObjectGetOwnPropertyDescriptor\x2C\n  ObjectKeys\x2C\n  ObjectPrototypeHasOwnProperty\x2C\n  RangeError\x2C\n  ReflectApply\x2C\n  RegExpPrototypeExec\x2C\n  SafeArrayIterator\x2C\n  SafeMap\x2C\n  SafeWeakMap\x2C\n  String\x2C\n  StringPrototypeEndsWith\x2C\n  StringPrototypeIncludes\x2C\n  StringPrototypeIndexOf\x2C\n  StringPrototypeSlice\x2C\n  StringPrototypeSplit\x2C\n  StringPrototypeStartsWith\x2C\n  StringPrototypeToLowerCase\x2C\n  Symbol\x2C\n  SymbolFor\x2C\n  SyntaxError\x2C\n  TypeError\x2C\n  URIError\x2C\n} = primordials;\n\nconst kIsNodeError = Symbol('kIsNodeError');\n\nconst isWindows = process.platform === 'win32';\n\nconst messages = new SafeMap();\nconst codes = {};\n\nconst classRegExp = /^[A-Z][a-zA-Z0-9]*$/;\n\n// Sorted by a rough estimate on most frequently used entries.\nconst kTypes = [\n  'string'\x2C\n  'function'\x2C\n  'number'\x2C\n  'object'\x2C\n  // Accept 'Function' and 'Object' as alternative to the lower cased version.\n  'Function'\x2C\n  'Object'\x2C\n  'boolean'\x2C\n  'bigint'\x2C\n  'symbol'\x2C\n];\n\nconst MainContextError = Error;\nconst overrideStackTrace = new SafeWeakMap();\nlet internalPrepareStackTrace = defaultPrepareStackTrace;\n\n/**\n * The default implementation of `Error.prepareStackTrace` with simple\n * concatenation of stack frames.\n * Read more about `Error.prepareStackTrace` at https://v8.dev/docs/stack-trace-api#customizing-stack-traces.\n */\nfunction defaultPrepareStackTrace(error\x2C trace) {\n  // Normal error formatting:\n  //\n  // Error: Message\n  //     at function (file)\n  //     at file\n  let errorString;\n  if (kIsNodeError in error) {\n    errorString = `${error.name} [${error.code}]: ${error.message}`;\n  } else {\n    errorString = ErrorPrototypeToString(error);\n  }\n  if (trace.length === 0) {\n    return errorString;\n  }\n  return `${errorString}\\n    at ${ArrayPrototypeJoin(trace\x2C '\\n    at ')}`;\n}\n\nfunction setInternalPrepareStackTrace(callback) {\n  internalPrepareStackTrace = callback;\n}\n\n/**\n * Every realm has its own prepareStackTraceCallback. When `error.stack` is\n * accessed\x2C if the error is created in a shadow realm\x2C the shadow realm's\n * prepareStackTraceCallback is invoked. Otherwise\x2C the principal realm's\n * prepareStackTraceCallback is invoked. Note that accessing `error.stack`\n * of error objects created in a VM Context will always invoke the\n * prepareStackTraceCallback of the principal realm.\n * @param {object} globalThis The global object of the realm that the error was\n *   created in. When the error object is created in a VM Context\x2C this is the\n *   global object of that VM Context.\n * @param {object} error The error object.\n * @param {CallSite[]} trace An array of CallSite objects\x2C read more at https://v8.dev/docs/stack-trace-api#customizing-stack-traces.\n * @returns {string}\n */\nfunction prepareStackTraceCallback(globalThis\x2C error\x2C trace) {\n  // API for node internals to override error stack formatting\n  // without interfering with userland code.\n  if (overrideStackTrace.has(error)) {\n    const f = overrideStackTrace.get(error);\n    overrideStackTrace.delete(error);\n    return f(error\x2C trace);\n  }\n\n  // Polyfill of V8's Error.prepareStackTrace API.\n  // https://crbug.com/v8/7848\n  // `globalThis` is the global that contains the constructor which\n  // created `error`.\n  if (typeof globalThis.Error?.prepareStackTrace === 'function') {\n    return globalThis.Error.prepareStackTrace(error\x2C trace);\n  }\n  // We still have legacy usage that depends on the main context's `Error`\n  // being used\x2C even when the error is from a different context.\n  // TODO(devsnek): evaluate if this can be eventually deprecated/removed.\n  if (typeof MainContextError.prepareStackTrace === 'function') {\n    return MainContextError.prepareStackTrace(error\x2C trace);\n  }\n\n  // If the Error.prepareStackTrace was not a function\x2C fallback to the\n  // internal implementation.\n  return internalPrepareStackTrace(error\x2C trace);\n}\n\n/**\n * The default Error.prepareStackTrace implementation.\n */\nfunction ErrorPrepareStackTrace(error\x2C trace) {\n  return internalPrepareStackTrace(error\x2C trace);\n}\n\nconst aggregateTwoErrors = (innerError\x2C outerError) => {\n  if (innerError && outerError && innerError !== outerError) {\n    if (ArrayIsArray(outerError.errors)) {\n      // If `outerError` is already an `AggregateError`.\n      ArrayPrototypePush(outerError.errors\x2C innerError);\n      return outerError;\n    }\n    let err;\n    if (isErrorStackTraceLimitWritable()) {\n      const limit = Error.stackTraceLimit;\n      Error.stackTraceLimit = 0;\n      // eslint-disable-next-line no-restricted-syntax\n      err = new AggregateError(new SafeArrayIterator([\n        outerError\x2C\n        innerError\x2C\n      ])\x2C outerError.message);\n      Error.stackTraceLimit = limit;\n      ErrorCaptureStackTrace(err\x2C aggregateTwoErrors);\n    } else {\n      // eslint-disable-next-line no-restricted-syntax\n      err = new AggregateError(new SafeArrayIterator([\n        outerError\x2C\n        innerError\x2C\n      ])\x2C outerError.message);\n    }\n    err.code = outerError.code;\n    return err;\n  }\n  return innerError || outerError;\n};\n\nclass NodeAggregateError extends AggregateError {\n  constructor(errors\x2C message) {\n    super(new SafeArrayIterator(errors)\x2C message);\n    this.code = errors[0]?.code;\n  }\n\n  get [kIsNodeError]() {\n    return true;\n  }\n\n  get ['constructor']() {\n    return AggregateError;\n  }\n}\n\nconst assert = require('internal/assert');\n\n// Lazily loaded\nlet util;\n\nlet internalUtil = null;\nfunction lazyInternalUtil() {\n  internalUtil ??= require('internal/util');\n  return internalUtil;\n}\n\nlet internalUtilInspect = null;\nfunction lazyInternalUtilInspect() {\n  internalUtilInspect ??= require('internal/util/inspect');\n  return internalUtilInspect;\n}\n\nlet utilColors;\nfunction lazyUtilColors() {\n  utilColors ??= require('internal/util/colors');\n  return utilColors;\n}\n\nlet buffer;\nfunction lazyBuffer() {\n  buffer ??= require('buffer').Buffer;\n  return buffer;\n}\n\nfunction isErrorStackTraceLimitWritable() {\n  // Do no touch Error.stackTraceLimit as V8 would attempt to install\n  // it again during deserialization.\n  if (require('internal/v8/startup_snapshot').namespace.isBuildingSnapshot()) {\n    return false;\n  }\n\n  const desc = ObjectGetOwnPropertyDescriptor(Error\x2C 'stackTraceLimit');\n  if (desc === undefined) {\n    return ObjectIsExtensible(Error);\n  }\n\n  return ObjectPrototypeHasOwnProperty(desc\x2C 'writable') ?\n    desc.writable :\n    desc.set !== undefined;\n}\n\nfunction inspectWithNoCustomRetry(obj\x2C options) {\n  const utilInspect = lazyInternalUtilInspect();\n\n  try {\n    return utilInspect.inspect(obj\x2C options);\n  } catch {\n    return utilInspect.inspect(obj\x2C { ...options\x2C customInspect: false });\n  }\n}\n\n// A specialized Error that includes an additional info property with\n// additional information about the error condition.\n// It has the properties present in a UVException but with a custom error\n// message followed by the uv error code and uv error message.\n// It also has its own error code with the original uv error context put into\n// `err.info`.\n// The context passed into this error must have .code\x2C .syscall and .message\x2C\n// and may have .path and .dest.\nclass SystemError extends Error {\n  constructor(key\x2C context) {\n    super();\n    const prefix = getMessage(key\x2C []\x2C this);\n    let message = `${prefix}: ${context.syscall} returned ` +\n                  `${context.code} (${context.message})`;\n\n    if (context.path !== undefined)\n      message += ` ${context.path}`;\n    if (context.dest !== undefined)\n      message += ` => ${context.dest}`;\n\n    this.code = key;\n\n    ObjectDefineProperties(this\x2C {\n      [kIsNodeError]: {\n        __proto__: null\x2C\n        value: true\x2C\n        enumerable: false\x2C\n        writable: false\x2C\n        configurable: true\x2C\n      }\x2C\n      name: {\n        __proto__: null\x2C\n        value: 'SystemError'\x2C\n        enumerable: false\x2C\n        writable: true\x2C\n        configurable: true\x2C\n      }\x2C\n      message: {\n        __proto__: null\x2C\n        value: message\x2C\n        enumerable: false\x2C\n        writable: true\x2C\n        configurable: true\x2C\n      }\x2C\n      info: {\n        __proto__: null\x2C\n        value: context\x2C\n        enumerable: true\x2C\n        configurable: true\x2C\n        writable: false\x2C\n      }\x2C\n      errno: {\n        __proto__: null\x2C\n        get() {\n          return context.errno;\n        }\x2C\n        set: (value) => {\n          context.errno = value;\n        }\x2C\n        enumerable: true\x2C\n        configurable: true\x2C\n      }\x2C\n      syscall: {\n        __proto__: null\x2C\n        get() {\n          return context.syscall;\n        }\x2C\n        set: (value) => {\n          context.syscall = value;\n        }\x2C\n        enumerable: true\x2C\n        configurable: true\x2C\n      }\x2C\n    });\n\n    if (context.path !== undefined) {\n      // TODO(BridgeAR): Investigate why and when the `.toString()` was\n      // introduced. The `path` and `dest` properties in the context seem to\n      // always be of type string. We should probably just remove the\n      // `.toString()` and `Buffer.from()` operations and set the value on the\n      // context as the user did.\n      ObjectDefineProperty(this\x2C 'path'\x2C {\n        __proto__: null\x2C\n        get() {\n          return context.path != null ?\n            context.path.toString() : context.path;\n        }\x2C\n        set: (value) => {\n          context.path = value ?\n            lazyBuffer().from(value.toString()) : undefined;\n        }\x2C\n        enumerable: true\x2C\n        configurable: true\x2C\n      });\n    }\n\n    if (context.dest !== undefined) {\n      ObjectDefineProperty(this\x2C 'dest'\x2C {\n        __proto__: null\x2C\n        get() {\n          return context.dest != null ?\n            context.dest.toString() : context.dest;\n        }\x2C\n        set: (value) => {\n          context.dest = value ?\n            lazyBuffer().from(value.toString()) : undefined;\n        }\x2C\n        enumerable: true\x2C\n        configurable: true\x2C\n      });\n    }\n  }\n\n  toString() {\n    return `${this.name} [${this.code}]: ${this.message}`;\n  }\n\n  [SymbolFor('nodejs.util.inspect.custom')](recurseTimes\x2C ctx) {\n    return lazyInternalUtilInspect().inspect(this\x2C {\n      ...ctx\x2C\n      getters: true\x2C\n      customInspect: false\x2C\n    });\n  }\n}\n\nfunction makeSystemErrorWithCode(key) {\n  return class NodeError extends SystemError {\n    constructor(ctx) {\n      super(key\x2C ctx);\n    }\n  };\n}\n\n// This is a special error type that is only used for the E function.\nclass HideStackFramesError extends Error {\n}\n\nfunction makeNodeErrorForHideStackFrame(Base\x2C clazz) {\n  class HideStackFramesError extends Base {\n    constructor(...args) {\n      if (isErrorStackTraceLimitWritable()) {\n        const limit = Error.stackTraceLimit;\n        Error.stackTraceLimit = 0;\n        super(...args);\n        Error.stackTraceLimit = limit;\n      } else {\n        super(...args);\n      }\n    }\n\n    // This is a workaround for wpt tests that expect that the error\n    // constructor has a `name` property of the base class.\n    get ['constructor']() {\n      return clazz;\n    }\n  }\n\n  return HideStackFramesError;\n}\n\nfunction makeNodeErrorWithCode(Base\x2C key) {\n  const msg = messages.get(key);\n  const expectedLength = typeof msg !== 'string' ? -1 : getExpectedArgumentLength(msg);\n\n  switch (expectedLength) {\n    case 0: {\n      class NodeError extends Base {\n        code = key;\n\n        constructor(...args) {\n          assert(\n            args.length === 0\x2C\n            `Code: ${key}; The provided arguments length (${args.length}) does not ` +\n              `match the required ones (${expectedLength}).`\x2C\n          );\n          super(msg);\n        }\n\n        // This is a workaround for wpt tests that expect that the error\n        // constructor has a `name` property of the base class.\n        get ['constructor']() {\n          return Base;\n        }\n\n        get [kIsNodeError]() {\n          return true;\n        }\n\n        toString() {\n          return `${this.name} [${key}]: ${this.message}`;\n        }\n      }\n      return NodeError;\n    }\n    case -1: {\n      class NodeError extends Base {\n        code = key;\n\n        constructor(...args) {\n          super();\n          ObjectDefineProperty(this\x2C 'message'\x2C {\n            __proto__: null\x2C\n            value: getMessage(key\x2C args\x2C this)\x2C\n            enumerable: false\x2C\n            writable: true\x2C\n            configurable: true\x2C\n          });\n        }\n\n        // This is a workaround for wpt tests that expect that the error\n        // constructor has a `name` property of the base class.\n        get ['constructor']() {\n          return Base;\n        }\n\n        get [kIsNodeError]() {\n          return true;\n        }\n\n        toString() {\n          return `${this.name} [${key}]: ${this.message}`;\n        }\n      }\n      return NodeError;\n    }\n    default: {\n\n      class NodeError extends Base {\n        code = key;\n\n        constructor(...args) {\n          assert(\n            args.length === expectedLength\x2C\n            `Code: ${key}; The provided arguments length (${args.length}) does not ` +\n              `match the required ones (${expectedLength}).`\x2C\n          );\n\n          ArrayPrototypeUnshift(args\x2C msg);\n          super(ReflectApply(lazyInternalUtilInspect().format\x2C null\x2C args));\n        }\n\n        // This is a workaround for wpt tests that expect that the error\n        // constructor has a `name` property of the base class.\n        get ['constructor']() {\n          return Base;\n        }\n\n        get [kIsNodeError]() {\n          return true;\n        }\n\n        toString() {\n          return `${this.name} [${key}]: ${this.message}`;\n        }\n      }\n      return NodeError;\n    }\n  }\n}\n\n/**\n * This function removes unnecessary frames from Node.js core errors.\n * @template {(...args: unknown[]) => unknown} T\n * @param {T} fn\n * @returns {T}\n */\nfunction hideStackFrames(fn) {\n  function wrappedFn(...args) {\n    try {\n      return ReflectApply(fn\x2C this\x2C args);\n    } catch (error) {\n      Error.stackTraceLimit && ErrorCaptureStackTrace(error\x2C wrappedFn);\n      throw error;\n    }\n  }\n  wrappedFn.withoutStackTrace = fn;\n  return wrappedFn;\n}\n\n// Utility function for registering the error codes. Only used here. Exported\n// *only* to allow for testing.\nfunction E(sym\x2C val\x2C def\x2C ...otherClasses) {\n  // Special case for SystemError that formats the error message differently\n  // The SystemErrors only have SystemError as their base classes.\n  messages.set(sym\x2C val);\n\n  const ErrClass = def === SystemError ?\n    makeSystemErrorWithCode(sym) :\n    makeNodeErrorWithCode(def\x2C sym);\n\n  if (otherClasses.length !== 0) {\n    if (otherClasses.includes(HideStackFramesError)) {\n      if (otherClasses.length !== 1) {\n        otherClasses.forEach((clazz) => {\n          if (clazz !== HideStackFramesError) {\n            ErrClass[clazz.name] = makeNodeErrorWithCode(clazz\x2C sym);\n            ErrClass[clazz.name].HideStackFramesError = makeNodeErrorForHideStackFrame(ErrClass[clazz.name]\x2C clazz);\n          }\n        });\n      }\n    } else {\n      otherClasses.forEach((clazz) => {\n        ErrClass[clazz.name] = makeNodeErrorWithCode(clazz\x2C sym);\n      });\n    }\n  }\n\n  if (otherClasses.includes(HideStackFramesError)) {\n    ErrClass.HideStackFramesError = makeNodeErrorForHideStackFrame(ErrClass\x2C def);\n  }\n\n  codes[sym] = ErrClass;\n}\n\nfunction getExpectedArgumentLength(msg) {\n  let expectedLength = 0;\n  const regex = /%[dfijoOs]/g;\n  while (RegExpPrototypeExec(regex\x2C msg) !== null) expectedLength++;\n  return expectedLength;\n}\n\nfunction getMessage(key\x2C args\x2C self) {\n  const msg = messages.get(key);\n\n  if (typeof msg === 'function') {\n    assert(\n      msg.length <= args.length\x2C // Default options do not count.\n      `Code: ${key}; The provided arguments length (${args.length}) does not ` +\n        `match the required ones (${msg.length}).`\x2C\n    );\n    return ReflectApply(msg\x2C self\x2C args);\n  }\n\n  const expectedLength = getExpectedArgumentLength(msg);\n  assert(\n    expectedLength === args.length\x2C\n    `Code: ${key}; The provided arguments length (${args.length}) does not ` +\n      `match the required ones (${expectedLength}).`\x2C\n  );\n  if (args.length === 0)\n    return msg;\n\n  ArrayPrototypeUnshift(args\x2C msg);\n  return ReflectApply(lazyInternalUtilInspect().format\x2C null\x2C args);\n}\n\nlet uvBinding;\n\nfunction lazyUv() {\n  uvBinding ??= internalBinding('uv');\n  return uvBinding;\n}\n\nconst uvUnmappedError = ['UNKNOWN'\x2C 'unknown error'];\n\nfunction uvErrmapGet(name) {\n  uvBinding = lazyUv();\n  uvBinding.errmap ??= uvBinding.getErrorMap();\n  return MapPrototypeGet(uvBinding.errmap\x2C name);\n}\n\n/**\n * This creates an error compatible with errors produced in the C++\n * function UVException using a context object with data assembled in C++.\n * The goal is to migrate them to ERR_* errors later when compatibility is\n * not a concern.\n */\nclass UVException extends Error {\n  /**\n   * @param {object} ctx\n   */\n  constructor(ctx) {\n    const { 0: code\x2C 1: uvmsg } = uvErrmapGet(ctx.errno) || uvUnmappedError;\n    let message = `${code}: ${ctx.message || uvmsg}\x2C ${ctx.syscall}`;\n\n    let path;\n    let dest;\n    if (ctx.path) {\n      path = ctx.path.toString();\n      message += ` '${path}'`;\n    }\n    if (ctx.dest) {\n      dest = ctx.dest.toString();\n      message += ` -> '${dest}'`;\n    }\n\n    super(message);\n\n    for (const prop of ObjectKeys(ctx)) {\n      if (prop === 'message' || prop === 'path' || prop === 'dest') {\n        continue;\n      }\n      this[prop] = ctx[prop];\n    }\n\n    this.code = code;\n    if (path) {\n      this.path = path;\n    }\n    if (dest) {\n      this.dest = dest;\n    }\n  }\n\n  get ['constructor']() {\n    return Error;\n  }\n}\n\n/**\n * This creates an error compatible with errors produced in the C++\n * This function should replace the deprecated\n * `exceptionWithHostPort()` function.\n */\nclass UVExceptionWithHostPort extends Error {\n  /**\n   * @param {number} err - A libuv error number\n   * @param {string} syscall\n   * @param {string} address\n   * @param {number} [port]\n   */\n  constructor(err\x2C syscall\x2C address\x2C port) {\n    const { 0: code\x2C 1: uvmsg } = uvErrmapGet(err) || uvUnmappedError;\n    const message = `${syscall} ${code}: ${uvmsg}`;\n    let details = '';\n\n    if (port && port > 0) {\n      details = ` ${address}:${port}`;\n    } else if (address) {\n      details = ` ${address}`;\n    }\n\n    super(`${message}${details}`);\n\n    this.code = code;\n    this.errno = err;\n    this.syscall = syscall;\n    this.address = address;\n    if (port) {\n      this.port = port;\n    }\n  }\n\n  get ['constructor']() {\n    return Error;\n  }\n}\n\n/**\n * This used to be util._errnoException().\n */\nclass ErrnoException extends Error {\n  /**\n   * @param {number} err - A libuv error number\n   * @param {string} syscall\n   * @param {string} [original] err\n   */\n  constructor(err\x2C syscall\x2C original) {\n    // TODO(joyeecheung): We have to use the type-checked\n    // getSystemErrorName(err) to guard against invalid arguments from users.\n    // This can be replaced with [ code ] = errmap.get(err) when this method\n    // is no longer exposed to user land.\n    util ??= require('util');\n    const code = util.getSystemErrorName(err);\n    const message = original ?\n      `${syscall} ${code} ${original}` : `${syscall} ${code}`;\n\n    super(message);\n\n    this.errno = err;\n    this.code = code;\n    this.syscall = syscall;\n  }\n\n  get ['constructor']() {\n    return Error;\n  }\n}\n\n/**\n * Deprecated\x2C new Error is `UVExceptionWithHostPort()`\n * New function added the error description directly\n * from C++. this method for backwards compatibility\n * @param {number} err - A libuv error number\n * @param {string} syscall\n * @param {string} address\n * @param {number} [port]\n * @param {string} [additional]\n * @returns {Error}\n */\nclass ExceptionWithHostPort extends Error {\n  constructor(err\x2C syscall\x2C address\x2C port\x2C additional) {\n    // TODO(joyeecheung): We have to use the type-checked\n    // getSystemErrorName(err) to guard against invalid arguments from users.\n    // This can be replaced with [ code ] = errmap.get(err) when this method\n    // is no longer exposed to user land.\n    util ??= require('util');\n    const code = util.getSystemErrorName(err);\n    let details = '';\n    if (port && port > 0) {\n      details = ` ${address}:${port}`;\n    } else if (address) {\n      details = ` ${address}`;\n    }\n    if (additional) {\n      details += ` - Local (${additional})`;\n    }\n\n    super(`${syscall} ${code}${details}`);\n\n    this.errno = err;\n    this.code = code;\n    this.syscall = syscall;\n    this.address = address;\n    if (port) {\n      this.port = port;\n    }\n  }\n\n  get ['constructor']() {\n    return Error;\n  }\n}\n\nclass DNSException extends Error {\n  /**\n   * @param {number|string} code - A libuv error number or a c-ares error code\n   * @param {string} syscall\n   * @param {string} [hostname]\n   */\n  constructor(code\x2C syscall\x2C hostname) {\n    let errno;\n    // If `code` is of type number\x2C it is a libuv error number\x2C else it is a\n    // c-ares error code.\n    // TODO(joyeecheung): translate c-ares error codes into numeric ones and\n    // make them available in a property that's not error.errno (since they\n    // can be in conflict with libuv error codes). Also make sure\n    // util.getSystemErrorName() can understand them when an being informed that\n    // the number is a c-ares error code.\n    if (typeof code === 'number') {\n      errno = code;\n      // ENOTFOUND is not a proper POSIX error\x2C but this error has been in place\n      // long enough that it's not practical to remove it.\n      if (code === lazyUv().UV_EAI_NODATA || code === lazyUv().UV_EAI_NONAME) {\n        code = 'ENOTFOUND'; // Fabricated error name.\n      } else {\n        code = lazyInternalUtil().getSystemErrorName(code);\n      }\n    }\n    super(`${syscall} ${code}${hostname ? ` ${hostname}` : ''}`);\n    this.errno = errno;\n    this.code = code;\n    this.syscall = syscall;\n    if (hostname) {\n      this.hostname = hostname;\n    }\n  }\n\n  get ['constructor']() {\n    return Error;\n  }\n}\n\nclass ConnResetException extends Error {\n  constructor(msg) {\n    super(msg);\n    this.code = 'ECONNRESET';\n  }\n\n  get ['constructor']() {\n    return Error;\n  }\n}\n\nlet maxStack_ErrorName;\nlet maxStack_ErrorMessage;\n\n/**\n * Returns true if `err.name` and `err.message` are equal to engine-specific\n * values indicating max call stack size has been exceeded.\n * "Maximum call stack size exceeded" in V8.\n * @param {Error} err\n * @returns {boolean}\n */\nfunction isStackOverflowError(err) {\n  if (maxStack_ErrorMessage === undefined) {\n    try {\n      function overflowStack() { overflowStack(); }\n      overflowStack();\n    } catch (err) {\n      maxStack_ErrorMessage = err.message;\n      maxStack_ErrorName = err.name;\n    }\n  }\n\n  return err && err.name === maxStack_ErrorName &&\n         err.message === maxStack_ErrorMessage;\n}\n\n// Only use this for integers! Decimal numbers do not work with this function.\nfunction addNumericalSeparator(val) {\n  let res = '';\n  let i = val.length;\n  const start = val[0] === '-' ? 1 : 0;\n  for (; i >= start + 4; i -= 3) {\n    res = `_${StringPrototypeSlice(val\x2C i - 3\x2C i)}${res}`;\n  }\n  return `${StringPrototypeSlice(val\x2C 0\x2C i)}${res}`;\n}\n\n// Used to enhance the stack that will be picked up by the inspector\nconst kEnhanceStackBeforeInspector = Symbol('kEnhanceStackBeforeInspector');\n\n// These are supposed to be called only on fatal exceptions before\n// the process exits.\nconst fatalExceptionStackEnhancers = {\n  beforeInspector(error) {\n    if (typeof error[kEnhanceStackBeforeInspector] !== 'function') {\n      return error.stack;\n    }\n\n    try {\n      // Set the error.stack here so it gets picked up by the\n      // inspector.\n      error.stack = error[kEnhanceStackBeforeInspector]();\n    } catch {\n      // We are just enhancing the error. If it fails\x2C ignore it.\n    }\n    return error.stack;\n  }\x2C\n  afterInspector(error) {\n    const originalStack = error.stack;\n    let useColors = true;\n    // Some consoles do not convert ANSI escape sequences to colors\x2C\n    // rather display them directly to the stdout. On those consoles\x2C\n    // libuv emulates colors by intercepting stdout stream and calling\n    // corresponding Windows API functions for setting console colors.\n    // However\x2C fatal error are handled differently and we cannot easily\n    // highlight them. On Windows\x2C detecting whether a console supports\n    // ANSI escape sequences is not reliable.\n    if (isWindows) {\n      const info = internalBinding('os').getOSInformation();\n      const ver = ArrayPrototypeMap(StringPrototypeSplit(info[2]\x2C '.')\x2C\n                                    Number);\n      if (ver[0] !== 10 || ver[2] < 14393) {\n        useColors = false;\n      }\n    }\n    const {\n      inspect\x2C\n      inspectDefaultOptions: {\n        colors: defaultColors\x2C\n      }\x2C\n    } = lazyInternalUtilInspect();\n    const colors = useColors && (lazyUtilColors().shouldColorize(process.stderr) || defaultColors);\n    try {\n      return inspect(error\x2C {\n        colors\x2C\n        customInspect: false\x2C\n        depth: MathMax(inspect.defaultOptions.depth\x2C 5)\x2C\n      });\n    } catch {\n      return originalStack;\n    }\n  }\x2C\n};\n\nconst {\n  privateSymbols: {\n    arrow_message_private_symbol\x2C\n  }\x2C\n} = internalBinding('util');\n// Ensures the printed error line is from user code.\nfunction setArrowMessage(err\x2C arrowMessage) {\n  err[arrow_message_private_symbol] = arrowMessage;\n}\n\n// Hide stack lines before the first user code line.\nfunction hideInternalStackFrames(error) {\n  overrideStackTrace.set(error\x2C (error\x2C stackFrames) => {\n    let frames = stackFrames;\n    if (typeof stackFrames === 'object') {\n      frames = ArrayPrototypeFilter(\n        stackFrames\x2C\n        (frm) => !StringPrototypeStartsWith(frm.getFileName() || ''\x2C\n                                            'node:internal')\x2C\n      );\n    }\n    ArrayPrototypeUnshift(frames\x2C error);\n    return ArrayPrototypeJoin(frames\x2C '\\n    at ');\n  });\n}\n\n// Node uses an AbortError that isn't exactly the same as the DOMException\n// to make usage of the error in userland and readable-stream easier.\n// It is a regular error with `.code` and `.name`.\nclass AbortError extends Error {\n  constructor(message = 'The operation was aborted'\x2C options = undefined) {\n    if (options !== undefined && typeof options !== 'object') {\n      throw new codes.ERR_INVALID_ARG_TYPE('options'\x2C 'Object'\x2C options);\n    }\n    super(message\x2C options);\n    this.code = 'ABORT_ERR';\n    this.name = 'AbortError';\n  }\n}\n\n/**\n * This creates a generic Node.js error.\n * @param {string} message The error message.\n * @param {object} errorProperties Object with additional properties to be added to the error.\n * @returns {Error}\n */\nconst genericNodeError = hideStackFrames(function genericNodeError(message\x2C errorProperties) {\n  // eslint-disable-next-line no-restricted-syntax\n  const err = new Error(message);\n  ObjectAssign(err\x2C errorProperties);\n  return err;\n});\n\n/**\n * Determine the specific type of a value for type-mismatch errors.\n * @param {*} value\n * @returns {string}\n */\nfunction determineSpecificType(value) {\n  if (value === null) {\n    return 'null';\n  } else if (value === undefined) {\n    return 'undefined';\n  }\n\n  const type = typeof value;\n\n  switch (type) {\n    case 'bigint':\n      return `type bigint (${value}n)`;\n    case 'number':\n      if (value === 0) {\n        return 1 / value === -Infinity ? 'type number (-0)' : 'type number (0)';\n      } else if (value !== value) { // eslint-disable-line no-self-compare\n        return 'type number (NaN)';\n      } else if (value === Infinity) {\n        return 'type number (Infinity)';\n      } else if (value === -Infinity) {\n        return 'type number (-Infinity)';\n      }\n      return `type number (${value})`;\n    case 'boolean':\n      return value ? 'type boolean (true)' : 'type boolean (false)';\n    case 'symbol':\n      return `type symbol (${String(value)})`;\n    case 'function':\n      return `function ${value.name}`;\n    case 'object':\n      if (value.constructor && 'name' in value.constructor) {\n        return `an instance of ${value.constructor.name}`;\n      }\n      return `${lazyInternalUtilInspect().inspect(value\x2C { depth: -1 })}`;\n    case 'string':\n      value.length > 28 && (value = `${StringPrototypeSlice(value\x2C 0\x2C 25)}...`);\n      if (StringPrototypeIndexOf(value\x2C "'") === -1) {\n        return `type string ('${value}')`;\n      }\n      return `type string (${JSONStringify(value)})`;\n    default:\n      value = lazyInternalUtilInspect().inspect(value\x2C { colors: false });\n      if (value.length > 28) {\n        value = `${StringPrototypeSlice(value\x2C 0\x2C 25)}...`;\n      }\n\n      return `type ${type} (${value})`;\n  }\n}\n\n/**\n * Create a list string in the form like 'A and B' or 'A\x2C B\x2C ...\x2C and Z'.\n * We cannot use Intl.ListFormat because it's not available in\n * --without-intl builds.\n * @param {string[]} array An array of strings.\n * @param {string} [type] The list type to be inserted before the last element.\n * @returns {string}\n */\nfunction formatList(array\x2C type = 'and') {\n  switch (array.length) {\n    case 0: return '';\n    case 1: return `${array[0]}`;\n    case 2: return `${array[0]} ${type} ${array[1]}`;\n    case 3: return `${array[0]}\x2C ${array[1]}\x2C ${type} ${array[2]}`;\n    default:\n      return `${ArrayPrototypeJoin(ArrayPrototypeSlice(array\x2C 0\x2C -1)\x2C '\x2C ')}\x2C ${type} ${array[array.length - 1]}`;\n  }\n}\n\nmodule.exports = {\n  AbortError\x2C\n  aggregateTwoErrors\x2C\n  NodeAggregateError\x2C\n  codes\x2C\n  ConnResetException\x2C\n  DNSException\x2C\n  // This is exported only to facilitate testing.\n  determineSpecificType\x2C\n  E\x2C\n  ErrnoException\x2C\n  ExceptionWithHostPort\x2C\n  fatalExceptionStackEnhancers\x2C\n  formatList\x2C\n  genericNodeError\x2C\n  getMessage\x2C\n  hideInternalStackFrames\x2C\n  hideStackFrames\x2C\n  inspectWithNoCustomRetry\x2C\n  isErrorStackTraceLimitWritable\x2C\n  isStackOverflowError\x2C\n  kEnhanceStackBeforeInspector\x2C\n  kIsNodeError\x2C\n  defaultPrepareStackTrace\x2C\n  setInternalPrepareStackTrace\x2C\n  overrideStackTrace\x2C\n  prepareStackTraceCallback\x2C\n  ErrorPrepareStackTrace\x2C\n  setArrowMessage\x2C\n  SystemError\x2C\n  uvErrmapGet\x2C\n  UVException\x2C\n  UVExceptionWithHostPort\x2C\n};\n\n// To declare an error message\x2C use the E(sym\x2C val\x2C def) function above. The sym\n// must be an upper case string. The val can be either a function or a string.\n// The def must be an error class.\n// The return value of the function must be a string.\n// Examples:\n// E('EXAMPLE_KEY1'\x2C 'This is the error value'\x2C Error);\n// E('EXAMPLE_KEY2'\x2C (a\x2C b) => return `${a} ${b}`\x2C RangeError);\n//\n// Once an error code has been assigned\x2C the code itself MUST NOT change and\n// any given error code must never be reused to identify a different error.\n//\n// Any error code added here should also be added to the documentation\n//\n// Note: Please try to keep these in alphabetical order\n//\n// Note: Node.js specific errors must begin with the prefix ERR_\n\nE('ERR_ACCESS_DENIED'\x2C\n  'Access to this API has been restricted. Permission: %s'\x2C\n  Error);\nE('ERR_AMBIGUOUS_ARGUMENT'\x2C 'The "%s" argument is ambiguous. %s'\x2C TypeError);\nE('ERR_ARG_NOT_ITERABLE'\x2C '%s must be iterable'\x2C TypeError);\nE('ERR_ASSERTION'\x2C '%s'\x2C Error);\nE('ERR_ASYNC_CALLBACK'\x2C '%s must be a function'\x2C TypeError);\nE('ERR_ASYNC_TYPE'\x2C 'Invalid name for async "type": %s'\x2C TypeError);\nE('ERR_BROTLI_INVALID_PARAM'\x2C '%s is not a valid Brotli parameter'\x2C RangeError);\nE('ERR_BUFFER_OUT_OF_BOUNDS'\x2C\n  // Using a default argument here is important so the argument is not counted\n  // towards `Function#length`.\n  (name = undefined) => {\n    if (name) {\n      return `"${name}" is outside of buffer bounds`;\n    }\n    return 'Attempt to access memory outside buffer bounds';\n  }\x2C RangeError);\nE('ERR_BUFFER_TOO_LARGE'\x2C\n  'Cannot create a Buffer larger than %s bytes'\x2C\n  RangeError);\nE('ERR_CANNOT_WATCH_SIGINT'\x2C 'Cannot watch for SIGINT signals'\x2C Error);\nE('ERR_CHILD_CLOSED_BEFORE_REPLY'\x2C\n  'Child closed before reply received'\x2C Error);\nE('ERR_CHILD_PROCESS_IPC_REQUIRED'\x2C\n  "Forked processes must have an IPC channel\x2C missing value 'ipc' in %s"\x2C\n  Error);\nE('ERR_CHILD_PROCESS_STDIO_MAXBUFFER'\x2C '%s maxBuffer length exceeded'\x2C\n  RangeError);\nE('ERR_CONSOLE_WRITABLE_STREAM'\x2C\n  'Console expects a writable stream instance for %s'\x2C TypeError);\nE('ERR_CONTEXT_NOT_INITIALIZED'\x2C 'context used is not initialized'\x2C Error);\nE('ERR_CRYPTO_CUSTOM_ENGINE_NOT_SUPPORTED'\x2C\n  'Custom engines not supported by this OpenSSL'\x2C Error);\nE('ERR_CRYPTO_ECDH_INVALID_FORMAT'\x2C 'Invalid ECDH format: %s'\x2C TypeError);\nE('ERR_CRYPTO_ECDH_INVALID_PUBLIC_KEY'\x2C\n  'Public key is not valid for specified curve'\x2C Error);\nE('ERR_CRYPTO_ENGINE_UNKNOWN'\x2C 'Engine "%s" was not found'\x2C Error);\nE('ERR_CRYPTO_FIPS_FORCED'\x2C\n  'Cannot set FIPS mode\x2C it was forced with --force-fips at startup.'\x2C Error);\nE('ERR_CRYPTO_FIPS_UNAVAILABLE'\x2C 'Cannot set FIPS mode in a non-FIPS build.'\x2C\n  Error);\nE('ERR_CRYPTO_HASH_FINALIZED'\x2C 'Digest already called'\x2C Error);\nE('ERR_CRYPTO_HASH_UPDATE_FAILED'\x2C 'Hash update failed'\x2C Error);\nE('ERR_CRYPTO_INCOMPATIBLE_KEY'\x2C 'Incompatible %s: %s'\x2C Error);\nE('ERR_CRYPTO_INCOMPATIBLE_KEY_OPTIONS'\x2C 'The selected key encoding %s %s.'\x2C\n  Error);\nE('ERR_CRYPTO_INVALID_DIGEST'\x2C 'Invalid digest: %s'\x2C TypeError);\nE('ERR_CRYPTO_INVALID_JWK'\x2C 'Invalid JWK data'\x2C TypeError);\nE('ERR_CRYPTO_INVALID_KEY_OBJECT_TYPE'\x2C\n  'Invalid key object type %s\x2C expected %s.'\x2C TypeError);\nE('ERR_CRYPTO_INVALID_STATE'\x2C 'Invalid state for operation %s'\x2C Error);\nE('ERR_CRYPTO_PBKDF2_ERROR'\x2C 'PBKDF2 error'\x2C Error);\nE('ERR_CRYPTO_SCRYPT_INVALID_PARAMETER'\x2C 'Invalid scrypt parameter'\x2C Error);\nE('ERR_CRYPTO_SCRYPT_NOT_SUPPORTED'\x2C 'Scrypt algorithm not supported'\x2C Error);\n// Switch to TypeError. The current implementation does not seem right.\nE('ERR_CRYPTO_SIGN_KEY_REQUIRED'\x2C 'No key provided to sign'\x2C Error);\nE('ERR_DEBUGGER_ERROR'\x2C '%s'\x2C Error);\nE('ERR_DEBUGGER_STARTUP_ERROR'\x2C '%s'\x2C Error);\nE('ERR_DIR_CLOSED'\x2C 'Directory handle was closed'\x2C Error);\nE('ERR_DIR_CONCURRENT_OPERATION'\x2C\n  'Cannot do synchronous work on directory handle with concurrent ' +\n  'asynchronous operations'\x2C Error);\nE('ERR_DNS_SET_SERVERS_FAILED'\x2C 'c-ares failed to set servers: "%s" [%s]'\x2C\n  Error);\nE('ERR_DOMAIN_CALLBACK_NOT_AVAILABLE'\x2C\n  'A callback was registered through ' +\n     'process.setUncaughtExceptionCaptureCallback()\x2C which is mutually ' +\n     'exclusive with using the `domain` module'\x2C\n  Error);\nE('ERR_DOMAIN_CANNOT_SET_UNCAUGHT_EXCEPTION_CAPTURE'\x2C\n  'The `domain` module is in use\x2C which is mutually exclusive with calling ' +\n     'process.setUncaughtExceptionCaptureCallback()'\x2C\n  Error);\nE('ERR_DUPLICATE_STARTUP_SNAPSHOT_MAIN_FUNCTION'\x2C\n  'Deserialize main function is already configured.'\x2C Error);\nE('ERR_ENCODING_INVALID_ENCODED_DATA'\x2C function(encoding\x2C ret) {\n  this.errno = ret;\n  return `The encoded data was not valid for encoding ${encoding}`;\n}\x2C TypeError);\nE('ERR_ENCODING_NOT_SUPPORTED'\x2C 'The "%s" encoding is not supported'\x2C\n  RangeError);\nE('ERR_EVAL_ESM_CANNOT_PRINT'\x2C '--print cannot be used with ESM input'\x2C Error);\nE('ERR_EVENT_RECURSION'\x2C 'The event "%s" is already being dispatched'\x2C Error);\nE('ERR_FALSY_VALUE_REJECTION'\x2C function(reason) {\n  this.reason = reason;\n  return 'Promise was rejected with falsy value';\n}\x2C Error\x2C HideStackFramesError);\nE('ERR_FEATURE_UNAVAILABLE_ON_PLATFORM'\x2C\n  'The feature %s is unavailable on the current platform' +\n  '\x2C which is being used to run Node.js'\x2C\n  TypeError);\nE('ERR_FS_CP_DIR_TO_NON_DIR'\x2C\n  'Cannot overwrite directory with non-directory'\x2C SystemError);\nE('ERR_FS_CP_EEXIST'\x2C 'Target already exists'\x2C SystemError);\nE('ERR_FS_CP_EINVAL'\x2C 'Invalid src or dest'\x2C SystemError);\nE('ERR_FS_CP_FIFO_PIPE'\x2C 'Cannot copy a FIFO pipe'\x2C SystemError);\nE('ERR_FS_CP_NON_DIR_TO_DIR'\x2C\n  'Cannot overwrite non-directory with directory'\x2C SystemError);\nE('ERR_FS_CP_SOCKET'\x2C 'Cannot copy a socket file'\x2C SystemError);\nE('ERR_FS_CP_SYMLINK_TO_SUBDIRECTORY'\x2C\n  'Cannot overwrite symlink in subdirectory of self'\x2C SystemError);\nE('ERR_FS_CP_UNKNOWN'\x2C 'Cannot copy an unknown file type'\x2C SystemError);\nE('ERR_FS_EISDIR'\x2C 'Path is a directory'\x2C SystemError\x2C HideStackFramesError);\nE('ERR_FS_FILE_TOO_LARGE'\x2C 'File size (%s) is greater than 2 GiB'\x2C RangeError);\nE('ERR_FS_INVALID_SYMLINK_TYPE'\x2C\n  'Symlink type must be one of "dir"\x2C "file"\x2C or "junction". Received "%s"'\x2C\n  Error); // Switch to TypeError. The current implementation does not seem right\nE('ERR_HTTP2_ALTSVC_INVALID_ORIGIN'\x2C\n  'HTTP/2 ALTSVC frames require a valid origin'\x2C TypeError);\nE('ERR_HTTP2_ALTSVC_LENGTH'\x2C\n  'HTTP/2 ALTSVC frames are limited to 16382 bytes'\x2C TypeError);\nE('ERR_HTTP2_CONNECT_AUTHORITY'\x2C\n  ':authority header is required for CONNECT requests'\x2C Error);\nE('ERR_HTTP2_CONNECT_PATH'\x2C\n  'The :path header is forbidden for CONNECT requests'\x2C Error);\nE('ERR_HTTP2_CONNECT_SCHEME'\x2C\n  'The :scheme header is forbidden for CONNECT requests'\x2C Error);\nE('ERR_HTTP2_GOAWAY_SESSION'\x2C\n  'New streams cannot be created after receiving a GOAWAY'\x2C Error);\nE('ERR_HTTP2_HEADERS_AFTER_RESPOND'\x2C\n  'Cannot specify additional headers after response initiated'\x2C Error);\nE('ERR_HTTP2_HEADERS_SENT'\x2C 'Response has already been initiated.'\x2C Error);\nE('ERR_HTTP2_HEADER_SINGLE_VALUE'\x2C\n  'Header field "%s" must only have a single value'\x2C TypeError);\nE('ERR_HTTP2_INFO_STATUS_NOT_ALLOWED'\x2C\n  'Informational status codes cannot be used'\x2C RangeError);\nE('ERR_HTTP2_INVALID_CONNECTION_HEADERS'\x2C\n  'HTTP/1 Connection specific headers are forbidden: "%s"'\x2C TypeError);\nE('ERR_HTTP2_INVALID_HEADER_VALUE'\x2C\n  'Invalid value "%s" for header "%s"'\x2C TypeError\x2C HideStackFramesError);\nE('ERR_HTTP2_INVALID_INFO_STATUS'\x2C\n  'Invalid informational status code: %s'\x2C RangeError);\nE('ERR_HTTP2_INVALID_ORIGIN'\x2C\n  'HTTP/2 ORIGIN frames require a valid origin'\x2C TypeError);\nE('ERR_HTTP2_INVALID_PACKED_SETTINGS_LENGTH'\x2C\n  'Packed settings length must be a multiple of six'\x2C RangeError);\nE('ERR_HTTP2_INVALID_PSEUDOHEADER'\x2C\n  '"%s" is an invalid pseudoheader or is used incorrectly'\x2C TypeError\x2C HideStackFramesError);\nE('ERR_HTTP2_INVALID_SESSION'\x2C 'The session has been destroyed'\x2C Error);\nE('ERR_HTTP2_INVALID_SETTING_VALUE'\x2C\n  // Using default arguments here is important so the arguments are not counted\n  // towards `Function#length`.\n  function(name\x2C actual\x2C min = undefined\x2C max = undefined) {\n    this.actual = actual;\n    if (min !== undefined) {\n      this.min = min;\n      this.max = max;\n    }\n    return `Invalid value for setting "${name}": ${actual}`;\n  }\x2C TypeError\x2C RangeError\x2C HideStackFramesError);\nE('ERR_HTTP2_INVALID_STREAM'\x2C 'The stream has been destroyed'\x2C Error);\nE('ERR_HTTP2_MAX_PENDING_SETTINGS_ACK'\x2C\n  'Maximum number of pending settings acknowledgements'\x2C Error);\nE('ERR_HTTP2_NESTED_PUSH'\x2C\n  'A push stream cannot initiate another push stream.'\x2C Error);\nE('ERR_HTTP2_NO_MEM'\x2C 'Out of memory'\x2C Error);\nE('ERR_HTTP2_NO_SOCKET_MANIPULATION'\x2C\n  'HTTP/2 sockets should not be directly manipulated (e.g. read and written)'\x2C\n  Error);\nE('ERR_HTTP2_ORIGIN_LENGTH'\x2C\n  'HTTP/2 ORIGIN frames are limited to 16382 bytes'\x2C TypeError);\nE('ERR_HTTP2_OUT_OF_STREAMS'\x2C\n  'No stream ID is available because maximum stream ID has been reached'\x2C\n  Error);\nE('ERR_HTTP2_PAYLOAD_FORBIDDEN'\x2C\n  'Responses with %s status must not have a payload'\x2C Error);\nE('ERR_HTTP2_PING_CANCEL'\x2C 'HTTP2 ping cancelled'\x2C Error);\nE('ERR_HTTP2_PING_LENGTH'\x2C 'HTTP2 ping payload must be 8 bytes'\x2C RangeError);\nE('ERR_HTTP2_PSEUDOHEADER_NOT_ALLOWED'\x2C\n  'Cannot set HTTP/2 pseudo-headers'\x2C TypeError\x2C HideStackFramesError);\nE('ERR_HTTP2_PUSH_DISABLED'\x2C 'HTTP/2 client has disabled push streams'\x2C Error);\nE('ERR_HTTP2_SEND_FILE'\x2C 'Directories cannot be sent'\x2C Error);\nE('ERR_HTTP2_SEND_FILE_NOSEEK'\x2C\n  'Offset or length can only be specified for regular files'\x2C Error);\nE('ERR_HTTP2_SESSION_ERROR'\x2C 'Session closed with error code %s'\x2C Error);\nE('ERR_HTTP2_SETTINGS_CANCEL'\x2C 'HTTP2 session settings canceled'\x2C Error);\nE('ERR_HTTP2_SOCKET_BOUND'\x2C\n  'The socket is already bound to an Http2Session'\x2C Error);\nE('ERR_HTTP2_SOCKET_UNBOUND'\x2C\n  'The socket has been disconnected from the Http2Session'\x2C Error);\nE('ERR_HTTP2_STATUS_101'\x2C\n  'HTTP status code 101 (Switching Protocols) is forbidden in HTTP/2'\x2C Error);\nE('ERR_HTTP2_STATUS_INVALID'\x2C 'Invalid status code: %s'\x2C RangeError);\nE('ERR_HTTP2_STREAM_CANCEL'\x2C function(error) {\n  let msg = 'The pending stream has been canceled';\n  if (error) {\n    this.cause = error;\n    if (typeof error.message === 'string')\n      msg += ` (caused by: ${error.message})`;\n  }\n  return msg;\n}\x2C Error);\nE('ERR_HTTP2_STREAM_ERROR'\x2C 'Stream closed with error code %s'\x2C Error);\nE('ERR_HTTP2_STREAM_SELF_DEPENDENCY'\x2C\n  'A stream cannot depend on itself'\x2C Error);\nE('ERR_HTTP2_TOO_MANY_CUSTOM_SETTINGS'\x2C\n  'Number of custom settings exceeds MAX_ADDITIONAL_SETTINGS'\x2C Error);\nE('ERR_HTTP2_TOO_MANY_INVALID_FRAMES'\x2C 'Too many invalid HTTP/2 frames'\x2C Error);\nE('ERR_HTTP2_TRAILERS_ALREADY_SENT'\x2C\n  'Trailing headers have already been sent'\x2C Error);\nE('ERR_HTTP2_TRAILERS_NOT_READY'\x2C\n  'Trailing headers cannot be sent until after the wantTrailers event is ' +\n  'emitted'\x2C Error);\nE('ERR_HTTP2_UNSUPPORTED_PROTOCOL'\x2C 'protocol "%s" is unsupported.'\x2C Error);\nE('ERR_HTTP_BODY_NOT_ALLOWED'\x2C\n  'Adding content for this request method or response status is not allowed.'\x2C Error);\nE('ERR_HTTP_CONTENT_LENGTH_MISMATCH'\x2C\n  'Response body\\'s content-length of %s byte(s) does not match the content-length of %s byte(s) set in header'\x2C Error);\nE('ERR_HTTP_HEADERS_SENT'\x2C\n  'Cannot %s headers after they are sent to the client'\x2C Error);\nE('ERR_HTTP_INVALID_HEADER_VALUE'\x2C\n  'Invalid value "%s" for header "%s"'\x2C TypeError\x2C HideStackFramesError);\nE('ERR_HTTP_INVALID_STATUS_CODE'\x2C 'Invalid status code: %s'\x2C RangeError);\nE('ERR_HTTP_REQUEST_TIMEOUT'\x2C 'Request timeout'\x2C Error);\nE('ERR_HTTP_SOCKET_ASSIGNED'\x2C\n  'ServerResponse has an already assigned socket'\x2C Error);\nE('ERR_HTTP_SOCKET_ENCODING'\x2C\n  'Changing the socket encoding is not allowed per RFC7230 Section 3.'\x2C Error);\nE('ERR_HTTP_TRAILER_INVALID'\x2C\n  'Trailers are invalid with this transfer encoding'\x2C Error);\nE('ERR_ILLEGAL_CONSTRUCTOR'\x2C 'Illegal constructor'\x2C TypeError);\nE('ERR_IMPORT_ATTRIBUTE_MISSING'\x2C\n  'Module "%s" needs an import attribute of "%s: %s"'\x2C TypeError);\nE('ERR_IMPORT_ATTRIBUTE_TYPE_INCOMPATIBLE'\x2C\n  'Module "%s" is not of type "%s"'\x2C TypeError);\nE('ERR_IMPORT_ATTRIBUTE_UNSUPPORTED'\x2C\n  'Import attribute "%s" with value "%s" is not supported'\x2C TypeError);\nE('ERR_INCOMPATIBLE_OPTION_PAIR'\x2C\n  'Option "%s" cannot be used in combination with option "%s"'\x2C TypeError\x2C HideStackFramesError);\nE('ERR_INPUT_TYPE_NOT_ALLOWED'\x2C '--input-type can only be used with string ' +\n  'input via --eval\x2C --print\x2C or STDIN'\x2C Error);\nE('ERR_INSPECTOR_ALREADY_ACTIVATED'\x2C\n  'Inspector is already activated. Close it with inspector.close() ' +\n  'before activating it again.'\x2C\n  Error);\nE('ERR_INSPECTOR_ALREADY_CONNECTED'\x2C '%s is already connected'\x2C Error);\nE('ERR_INSPECTOR_CLOSED'\x2C 'Session was closed'\x2C Error);\nE('ERR_INSPECTOR_COMMAND'\x2C 'Inspector error %d: %s'\x2C Error);\nE('ERR_INSPECTOR_NOT_ACTIVE'\x2C 'Inspector is not active'\x2C Error);\nE('ERR_INSPECTOR_NOT_AVAILABLE'\x2C 'Inspector is not available'\x2C Error);\nE('ERR_INSPECTOR_NOT_CONNECTED'\x2C 'Session is not connected'\x2C Error);\nE('ERR_INSPECTOR_NOT_WORKER'\x2C 'Current thread is not a worker'\x2C Error);\nE('ERR_INTERNAL_ASSERTION'\x2C (message) => {\n  const suffix = 'This is caused by either a bug in Node.js ' +\n    'or incorrect usage of Node.js internals.\\n' +\n    'Please open an issue with this stack trace at ' +\n    'https://github.com/nodejs/node/issues\\n';\n  return message === undefined ? suffix : `${message}\\n${suffix}`;\n}\x2C Error);\nE('ERR_INVALID_ADDRESS_FAMILY'\x2C function(addressType\x2C host\x2C port) {\n  this.host = host;\n  this.port = port;\n  return `Invalid address family: ${addressType} ${host}:${port}`;\n}\x2C RangeError);\nE('ERR_INVALID_ARG_TYPE'\x2C\n  (name\x2C expected\x2C actual) => {\n    assert(typeof name === 'string'\x2C "'name' must be a string");\n    if (!ArrayIsArray(expected)) {\n      expected = [expected];\n    }\n\n    let msg = 'The ';\n    if (StringPrototypeEndsWith(name\x2C ' argument')) {\n      // For cases like 'first argument'\n      msg += `${name} `;\n    } else {\n      const type = StringPrototypeIncludes(name\x2C '.') ? 'property' : 'argument';\n      msg += `"${name}" ${type} `;\n    }\n    msg += 'must be ';\n\n    const types = [];\n    const instances = [];\n    const other = [];\n\n    for (const value of expected) {\n      assert(typeof value === 'string'\x2C\n             'All expected entries have to be of type string');\n      if (ArrayPrototypeIncludes(kTypes\x2C value)) {\n        ArrayPrototypePush(types\x2C StringPrototypeToLowerCase(value));\n      } else if (RegExpPrototypeExec(classRegExp\x2C value) !== null) {\n        ArrayPrototypePush(instances\x2C value);\n      } else {\n        assert(value !== 'object'\x2C\n               'The value "object" should be written as "Object"');\n        ArrayPrototypePush(other\x2C value);\n      }\n    }\n\n    // Special handle `object` in case other instances are allowed to outline\n    // the differences between each other.\n    if (instances.length > 0) {\n      const pos = ArrayPrototypeIndexOf(types\x2C 'object');\n      if (pos !== -1) {\n        ArrayPrototypeSplice(types\x2C pos\x2C 1);\n        ArrayPrototypePush(instances\x2C 'Object');\n      }\n    }\n\n    if (types.length > 0) {\n      msg += `${types.length > 1 ? 'one of type' : 'of type'} ${formatList(types\x2C 'or')}`;\n      if (instances.length > 0 || other.length > 0)\n        msg += ' or ';\n    }\n\n    if (instances.length > 0) {\n      msg += `an instance of ${formatList(instances\x2C 'or')}`;\n      if (other.length > 0)\n        msg += ' or ';\n    }\n\n    if (other.length > 0) {\n      if (other.length > 1) {\n        msg += `one of ${formatList(other\x2C 'or')}`;\n      } else {\n        if (StringPrototypeToLowerCase(other[0]) !== other[0])\n          msg += 'an ';\n        msg += `${other[0]}`;\n      }\n    }\n\n    msg += `. Received ${determineSpecificType(actual)}`;\n\n    return msg;\n  }\x2C TypeError\x2C HideStackFramesError);\nE('ERR_INVALID_ARG_VALUE'\x2C (name\x2C value\x2C reason = 'is invalid') => {\n  let inspected = lazyInternalUtilInspect().inspect(value);\n  if (inspected.length > 128) {\n    inspected = `${StringPrototypeSlice(inspected\x2C 0\x2C 128)}...`;\n  }\n  const type = StringPrototypeIncludes(name\x2C '.') ? 'property' : 'argument';\n  return `The ${type} '${name}' ${reason}. Received ${inspected}`;\n}\x2C TypeError\x2C RangeError\x2C HideStackFramesError);\nE('ERR_INVALID_ASYNC_ID'\x2C 'Invalid %s value: %s'\x2C RangeError);\nE('ERR_INVALID_BUFFER_SIZE'\x2C\n  'Buffer size must be a multiple of %s'\x2C RangeError);\nE('ERR_INVALID_CHAR'\x2C\n  // Using a default argument here is important so the argument is not counted\n  // towards `Function#length`.\n  (name\x2C field = undefined) => {\n    let msg = `Invalid character in ${name}`;\n    if (field !== undefined) {\n      msg += ` ["${field}"]`;\n    }\n    return msg;\n  }\x2C TypeError\x2C HideStackFramesError);\nE('ERR_INVALID_CURSOR_POS'\x2C\n  'Cannot set cursor row without setting its column'\x2C TypeError);\nE('ERR_INVALID_FD'\x2C\n  '"fd" must be a positive integer: %s'\x2C RangeError);\nE('ERR_INVALID_FD_TYPE'\x2C 'Unsupported fd type: %s'\x2C TypeError);\nE('ERR_INVALID_FILE_URL_HOST'\x2C\n  'File URL host must be "localhost" or empty on %s'\x2C TypeError);\nE('ERR_INVALID_FILE_URL_PATH'\x2C 'File URL path %s'\x2C TypeError);\nE('ERR_INVALID_HANDLE_TYPE'\x2C 'This handle type cannot be sent'\x2C TypeError);\nE('ERR_INVALID_HTTP_TOKEN'\x2C '%s must be a valid HTTP token ["%s"]'\x2C TypeError\x2C HideStackFramesError);\nE('ERR_INVALID_IP_ADDRESS'\x2C 'Invalid IP address: %s'\x2C TypeError);\nE('ERR_INVALID_MIME_SYNTAX'\x2C (production\x2C str\x2C invalidIndex) => {\n  const msg = invalidIndex !== -1 ? ` at ${invalidIndex}` : '';\n  return `The MIME syntax for a ${production} in "${str}" is invalid` + msg;\n}\x2C TypeError);\nE('ERR_INVALID_MODULE_SPECIFIER'\x2C (request\x2C reason\x2C base = undefined) => {\n  return `Invalid module "${request}" ${reason}${base ?\n    ` imported from ${base}` : ''}`;\n}\x2C TypeError);\nE('ERR_INVALID_PACKAGE_CONFIG'\x2C (path\x2C base\x2C message) => {\n  return `Invalid package config ${path}${base ? ` while importing ${base}` :\n    ''}${message ? `. ${message}` : ''}`;\n}\x2C Error);\nE('ERR_INVALID_PACKAGE_TARGET'\x2C\n  (pkgPath\x2C key\x2C target\x2C isImport = false\x2C base = undefined) => {\n    const relError = typeof target === 'string' && !isImport &&\n      target.length && !StringPrototypeStartsWith(target\x2C './');\n    if (key === '.') {\n      assert(isImport === false);\n      return `Invalid "exports" main target ${JSONStringify(target)} defined ` +\n        `in the package config ${pkgPath}package.json${base ?\n          ` imported from ${base}` : ''}${relError ?\n          '; targets must start with "./"' : ''}`;\n    }\n    return `Invalid "${isImport ? 'imports' : 'exports'}" target ${\n      JSONStringify(target)} defined for '${key}' in the package config ${\n      pkgPath}package.json${base ? ` imported from ${base}` : ''}${relError ?\n      '; targets must start with "./"' : ''}`;\n  }\x2C Error);\nE('ERR_INVALID_PROTOCOL'\x2C\n  'Protocol "%s" not supported. Expected "%s"'\x2C\n  TypeError);\nE('ERR_INVALID_REPL_EVAL_CONFIG'\x2C\n  'Cannot specify both "breakEvalOnSigint" and "eval" for REPL'\x2C TypeError);\nE('ERR_INVALID_REPL_INPUT'\x2C '%s'\x2C TypeError);\nE('ERR_INVALID_RETURN_PROPERTY'\x2C (input\x2C name\x2C prop\x2C value) => {\n  return `Expected a valid ${input} to be returned for the "${prop}" from the` +\n         ` "${name}" hook but got ${determineSpecificType(value)}.`;\n}\x2C TypeError);\nE('ERR_INVALID_RETURN_PROPERTY_VALUE'\x2C (input\x2C name\x2C prop\x2C value) => {\n  return `Expected ${input} to be returned for the "${prop}" from the` +\n         ` "${name}" hook but got ${determineSpecificType(value)}.`;\n}\x2C TypeError);\nE('ERR_INVALID_RETURN_VALUE'\x2C (input\x2C name\x2C value) => {\n  const type = determineSpecificType(value);\n\n  return `Expected ${input} to be returned from the "${name}"` +\n         ` function but got ${type}.`;\n}\x2C TypeError\x2C RangeError);\nE('ERR_INVALID_STATE'\x2C 'Invalid state: %s'\x2C Error\x2C TypeError\x2C RangeError);\nE('ERR_INVALID_SYNC_FORK_INPUT'\x2C\n  'Asynchronous forks do not support ' +\n    'Buffer\x2C TypedArray\x2C DataView or string input: %s'\x2C\n  TypeError);\nE('ERR_INVALID_THIS'\x2C 'Value of "this" must be of type %s'\x2C TypeError);\nE('ERR_INVALID_TUPLE'\x2C '%s must be an iterable %s tuple'\x2C TypeError);\nE('ERR_INVALID_URI'\x2C 'URI malformed'\x2C URIError);\nE('ERR_INVALID_URL'\x2C function(input\x2C base = null) {\n  this.input = input;\n\n  if (base != null) {\n    this.base = base;\n  }\n\n  // Don't include URL in message.\n  // (See https://github.com/nodejs/node/pull/38614)\n  return 'Invalid URL';\n}\x2C TypeError);\nE('ERR_INVALID_URL_SCHEME'\x2C\n  (expected) => {\n    if (typeof expected === 'string')\n      expected = [expected];\n    assert(expected.length <= 2);\n    const res = expected.length === 2 ?\n      `one of scheme ${expected[0]} or ${expected[1]}` :\n      `of scheme ${expected[0]}`;\n    return `The URL must be ${res}`;\n  }\x2C TypeError);\nE('ERR_IPC_CHANNEL_CLOSED'\x2C 'Channel closed'\x2C Error);\nE('ERR_IPC_DISCONNECTED'\x2C 'IPC channel is already disconnected'\x2C Error);\nE('ERR_IPC_ONE_PIPE'\x2C 'Child process can have only one IPC pipe'\x2C Error);\nE('ERR_IPC_SYNC_FORK'\x2C 'IPC cannot be used with synchronous forks'\x2C Error);\nE(\n  'ERR_LOADER_CHAIN_INCOMPLETE'\x2C\n  '"%s" did not call the next hook in its chain and did not' +\n  ' explicitly signal a short circuit. If this is intentional\x2C include' +\n  ' `shortCircuit: true` in the hook\\'s return.'\x2C\n  Error\x2C\n);\nE('ERR_MANIFEST_ASSERT_INTEGRITY'\x2C\n  (moduleURL\x2C realIntegrities) => {\n    let msg = `The content of "${\n      moduleURL\n    }" does not match the expected integrity.`;\n    if (realIntegrities.size) {\n      const sri = ArrayPrototypeJoin(\n        ArrayFrom(realIntegrities.entries()\x2C\n                  ({ 0: alg\x2C 1: dgs }) => `${alg}-${dgs}`)\x2C\n        ' '\x2C\n      );\n      msg += ` Integrities found are: ${sri}`;\n    } else {\n      msg += ' The resource was not found in the policy.';\n    }\n    return msg;\n  }\x2C Error);\nE('ERR_MANIFEST_DEPENDENCY_MISSING'\x2C\n  'Manifest resource %s does not list %s as a dependency specifier for ' +\n  'conditions: %s'\x2C\n  Error);\nE('ERR_MANIFEST_INTEGRITY_MISMATCH'\x2C\n  'Manifest resource %s has multiple entries but integrity lists do not match'\x2C\n  SyntaxError);\nE('ERR_MANIFEST_INVALID_RESOURCE_FIELD'\x2C\n  'Manifest resource %s has invalid property value for %s'\x2C\n  TypeError);\nE('ERR_MANIFEST_INVALID_SPECIFIER'\x2C\n  'Manifest resource %s has invalid dependency mapping %s'\x2C\n  TypeError);\nE('ERR_MANIFEST_TDZ'\x2C 'Manifest initialization has not yet run'\x2C Error);\nE('ERR_MANIFEST_UNKNOWN_ONERROR'\x2C\n  'Manifest specified unknown error behavior "%s".'\x2C\n  SyntaxError);\nE('ERR_METHOD_NOT_IMPLEMENTED'\x2C 'The %s method is not implemented'\x2C Error);\nE('ERR_MISSING_ARGS'\x2C\n  (...args) => {\n    assert(args.length > 0\x2C 'At least one arg needs to be specified');\n    let msg = 'The ';\n    const len = args.length;\n    const wrap = (a) => `"${a}"`;\n    args = ArrayPrototypeMap(\n      args\x2C\n      (a) => (ArrayIsArray(a) ?\n        ArrayPrototypeJoin(ArrayPrototypeMap(a\x2C wrap)\x2C ' or ') :\n        wrap(a))\x2C\n    );\n    msg += `${formatList(args)} argument${len > 1 ? 's' : ''}`;\n    return `${msg} must be specified`;\n  }\x2C TypeError);\nE('ERR_MISSING_OPTION'\x2C '%s is required'\x2C TypeError);\nE('ERR_MODULE_NOT_FOUND'\x2C function(path\x2C base\x2C exactUrl) {\n  if (exactUrl) {\n    lazyInternalUtil().setOwnProperty(this\x2C 'url'\x2C `${exactUrl}`);\n  }\n  return `Cannot find ${\n    exactUrl ? 'module' : 'package'} '${path}' imported from ${base}`;\n}\x2C Error);\nE('ERR_MULTIPLE_CALLBACK'\x2C 'Callback called multiple times'\x2C Error);\nE('ERR_NAPI_CONS_FUNCTION'\x2C 'Constructor must be a function'\x2C TypeError);\nE('ERR_NAPI_INVALID_DATAVIEW_ARGS'\x2C\n  'byte_offset + byte_length should be less than or equal to the size in ' +\n    'bytes of the array passed in'\x2C\n  RangeError);\nE('ERR_NAPI_INVALID_TYPEDARRAY_ALIGNMENT'\x2C\n  'start offset of %s should be a multiple of %s'\x2C RangeError);\nE('ERR_NAPI_INVALID_TYPEDARRAY_LENGTH'\x2C\n  'Invalid typed array length'\x2C RangeError);\nE('ERR_NETWORK_IMPORT_BAD_RESPONSE'\x2C\n  "import '%s' received a bad response: %s"\x2C Error);\nE('ERR_NETWORK_IMPORT_DISALLOWED'\x2C\n  "import of '%s' by %s is not supported: %s"\x2C Error);\nE('ERR_NOT_BUILDING_SNAPSHOT'\x2C\n  'Operation cannot be invoked when not building startup snapshot'\x2C Error);\nE('ERR_NOT_SUPPORTED_IN_SNAPSHOT'\x2C '%s is not supported in startup snapshot'\x2C Error);\nE('ERR_NO_CRYPTO'\x2C\n  'Node.js is not compiled with OpenSSL crypto support'\x2C Error);\nE('ERR_NO_ICU'\x2C\n  '%s is not supported on Node.js compiled without ICU'\x2C TypeError);\nE('ERR_OPERATION_FAILED'\x2C 'Operation failed: %s'\x2C Error\x2C TypeError);\nE('ERR_OUT_OF_RANGE'\x2C\n  (str\x2C range\x2C input\x2C replaceDefaultBoolean = false) => {\n    assert(range\x2C 'Missing "range" argument');\n    let msg = replaceDefaultBoolean ? str :\n      `The value of "${str}" is out of range.`;\n    let received;\n    if (NumberIsInteger(input) && MathAbs(input) > 2 ** 32) {\n      received = addNumericalSeparator(String(input));\n    } else if (typeof input === 'bigint') {\n      received = String(input);\n      if (input > 2n ** 32n || input < -(2n ** 32n)) {\n        received = addNumericalSeparator(received);\n      }\n      received += 'n';\n    } else {\n      received = lazyInternalUtilInspect().inspect(input);\n    }\n    msg += ` It must be ${range}. Received ${received}`;\n    return msg;\n  }\x2C RangeError\x2C HideStackFramesError);\nE('ERR_PACKAGE_IMPORT_NOT_DEFINED'\x2C (specifier\x2C packagePath\x2C base) => {\n  return `Package import specifier "${specifier}" is not defined${packagePath ?\n    ` in package ${packagePath}package.json` : ''} imported from ${base}`;\n}\x2C TypeError);\nE('ERR_PACKAGE_PATH_NOT_EXPORTED'\x2C (pkgPath\x2C subpath\x2C base = undefined) => {\n  if (subpath === '.')\n    return `No "exports" main defined in ${pkgPath}package.json${base ?\n      ` imported from ${base}` : ''}`;\n  return `Package subpath '${subpath}' is not defined by "exports" in ${\n    pkgPath}package.json${base ? ` imported from ${base}` : ''}`;\n}\x2C Error);\nE('ERR_PARSE_ARGS_INVALID_OPTION_VALUE'\x2C '%s'\x2C TypeError);\nE('ERR_PARSE_ARGS_UNEXPECTED_POSITIONAL'\x2C "Unexpected argument '%s'. This " +\n  'command does not take positional arguments'\x2C TypeError);\nE('ERR_PARSE_ARGS_UNKNOWN_OPTION'\x2C (option\x2C allowPositionals) => {\n  const suggestDashDash = allowPositionals ? '. To specify a positional ' +\n    "argument starting with a '-'\x2C place it at the end of the command after " +\n    `'--'\x2C as in '-- ${JSONStringify(option)}` : '';\n  return `Unknown option '${option}'${suggestDashDash}`;\n}\x2C TypeError);\nE('ERR_PERFORMANCE_INVALID_TIMESTAMP'\x2C\n  '%d is not a valid timestamp'\x2C TypeError);\nE('ERR_PERFORMANCE_MEASURE_INVALID_OPTIONS'\x2C '%s'\x2C TypeError);\nE('ERR_REQUIRE_ESM'\x2C\n  function(filename\x2C hasEsmSyntax\x2C parentPath = null\x2C packageJsonPath = null) {\n    hideInternalStackFrames(this);\n    let msg = `require() of ES Module ${filename}${parentPath ? ` from ${\n      parentPath}` : ''} not supported.`;\n    if (!packageJsonPath) {\n      if (StringPrototypeEndsWith(filename\x2C '.mjs'))\n        msg += `\\nInstead change the require of ${filename} to a dynamic ` +\n            'import() which is available in all CommonJS modules.';\n      return msg;\n    }\n    const path = require('path');\n    const basename = parentPath && path.basename(filename) ===\n      path.basename(parentPath) ? filename : path.basename(filename);\n    if (hasEsmSyntax) {\n      msg += `\\nInstead change the require of ${basename} in ${parentPath} to` +\n        ' a dynamic import() which is available in all CommonJS modules.';\n      return msg;\n    }\n    msg += `\\n${basename} is treated as an ES module file as it is a .js ` +\n      'file whose nearest parent package.json contains "type": "module" ' +\n      'which declares all .js files in that package scope as ES modules.' +\n      `\\nInstead either rename ${basename} to end in .cjs\x2C change the requiring ` +\n      'code to use dynamic import() which is available in all CommonJS ' +\n      'modules\x2C or change "type": "module" to "type": "commonjs" in ' +\n      `${packageJsonPath} to treat all .js files as CommonJS (using .mjs for ` +\n      'all ES modules instead).\\n';\n    return msg;\n  }\x2C Error);\nE('ERR_SCRIPT_EXECUTION_INTERRUPTED'\x2C\n  'Script execution was interrupted by `SIGINT`'\x2C Error);\nE('ERR_SERVER_ALREADY_LISTEN'\x2C\n  'Listen method has been called more than once without closing.'\x2C Error);\nE('ERR_SERVER_NOT_RUNNING'\x2C 'Server is not running.'\x2C Error);\nE('ERR_SOCKET_ALREADY_BOUND'\x2C 'Socket is already bound'\x2C Error);\nE('ERR_SOCKET_BAD_BUFFER_SIZE'\x2C\n  'Buffer size must be a positive integer'\x2C TypeError);\nE('ERR_SOCKET_BAD_PORT'\x2C (name\x2C port\x2C allowZero = true) => {\n  assert(typeof allowZero === 'boolean'\x2C\n         "The 'allowZero' argument must be of type boolean.");\n  const operator = allowZero ? '>=' : '>';\n  return `${name} should be ${operator} 0 and < 65536. Received ${determineSpecificType(port)}.`;\n}\x2C RangeError\x2C HideStackFramesError);\nE('ERR_SOCKET_BAD_TYPE'\x2C\n  'Bad socket type specified. Valid types are: udp4\x2C udp6'\x2C TypeError);\nE('ERR_SOCKET_BUFFER_SIZE'\x2C\n  'Could not get or set buffer size'\x2C\n  SystemError);\nE('ERR_SOCKET_CLOSED'\x2C 'Socket is closed'\x2C Error);\nE('ERR_SOCKET_CLOSED_BEFORE_CONNECTION'\x2C\n  'Socket closed before the connection was established'\x2C\n  Error);\nE('ERR_SOCKET_CONNECTION_TIMEOUT'\x2C\n  'Socket connection timeout'\x2C Error);\nE('ERR_SOCKET_DGRAM_IS_CONNECTED'\x2C 'Already connected'\x2C Error);\nE('ERR_SOCKET_DGRAM_NOT_CONNECTED'\x2C 'Not connected'\x2C Error);\nE('ERR_SOCKET_DGRAM_NOT_RUNNING'\x2C 'Not running'\x2C Error);\nE('ERR_SRI_PARSE'\x2C\n  'Subresource Integrity string %j had an unexpected %j at position %d'\x2C\n  SyntaxError);\nE('ERR_STREAM_ALREADY_FINISHED'\x2C\n  'Cannot call %s after a stream was finished'\x2C\n  Error);\nE('ERR_STREAM_CANNOT_PIPE'\x2C 'Cannot pipe\x2C not readable'\x2C Error);\nE('ERR_STREAM_DESTROYED'\x2C 'Cannot call %s after a stream was destroyed'\x2C Error);\nE('ERR_STREAM_NULL_VALUES'\x2C 'May not write null values to stream'\x2C TypeError);\nE('ERR_STREAM_PREMATURE_CLOSE'\x2C 'Premature close'\x2C Error);\nE('ERR_STREAM_PUSH_AFTER_EOF'\x2C 'stream.push() after EOF'\x2C Error);\nE('ERR_STREAM_UNSHIFT_AFTER_END_EVENT'\x2C\n  'stream.unshift() after end event'\x2C Error);\nE('ERR_STREAM_WRAP'\x2C 'Stream has StringDecoder set or is in objectMode'\x2C Error);\nE('ERR_STREAM_WRITE_AFTER_END'\x2C 'write after end'\x2C Error);\nE('ERR_SYNTHETIC'\x2C 'JavaScript Callstack'\x2C Error);\nE('ERR_SYSTEM_ERROR'\x2C 'A system error occurred'\x2C SystemError\x2C HideStackFramesError);\nE('ERR_TAP_LEXER_ERROR'\x2C function(errorMsg) {\n  hideInternalStackFrames(this);\n  return errorMsg;\n}\x2C Error);\nE('ERR_TAP_PARSER_ERROR'\x2C function(errorMsg\x2C details\x2C tokenCausedError\x2C source) {\n  hideInternalStackFrames(this);\n  this.cause = tokenCausedError;\n  const { column\x2C line\x2C start\x2C end } = tokenCausedError.location;\n  const errorDetails = `${details} at line ${line}\x2C column ${column} (start ${start}\x2C end ${end})`;\n  return errorMsg + errorDetails;\n}\x2C SyntaxError);\nE('ERR_TAP_VALIDATION_ERROR'\x2C function(errorMsg) {\n  hideInternalStackFrames(this);\n  return errorMsg;\n}\x2C Error);\nE('ERR_TEST_FAILURE'\x2C function(error\x2C failureType) {\n  hideInternalStackFrames(this);\n  assert(typeof failureType === 'string' || typeof failureType === 'symbol'\x2C\n         "The 'failureType' argument must be of type string or symbol.");\n\n  let msg = error?.message ?? error;\n\n  if (typeof msg !== 'string') {\n    msg = inspectWithNoCustomRetry(msg);\n  }\n\n  this.failureType = failureType;\n  this.cause = error;\n  return msg;\n}\x2C Error);\nE('ERR_TLS_ALPN_CALLBACK_INVALID_RESULT'\x2C (value\x2C protocols) => {\n  return `ALPN callback returned a value (${\n    value\n  }) that did not match any of the client's offered protocols (${\n    protocols.join('\x2C ')\n  })`;\n}\x2C TypeError);\nE('ERR_TLS_ALPN_CALLBACK_WITH_PROTOCOLS'\x2C\n  'The ALPNCallback and ALPNProtocols TLS options are mutually exclusive'\x2C\n  TypeError);\nE('ERR_TLS_CERT_ALTNAME_FORMAT'\x2C 'Invalid subject alternative name string'\x2C\n  SyntaxError);\nE('ERR_TLS_CERT_ALTNAME_INVALID'\x2C function(reason\x2C host\x2C cert) {\n  this.reason = reason;\n  this.host = host;\n  this.cert = cert;\n  return `Hostname/IP does not match certificate's altnames: ${reason}`;\n}\x2C Error);\nE('ERR_TLS_DH_PARAM_SIZE'\x2C 'DH parameter size %s is less than 2048'\x2C Error);\nE('ERR_TLS_HANDSHAKE_TIMEOUT'\x2C 'TLS handshake timeout'\x2C Error);\nE('ERR_TLS_INVALID_CONTEXT'\x2C '%s must be a SecureContext'\x2C TypeError);\nE('ERR_TLS_INVALID_PROTOCOL_VERSION'\x2C\n  '%j is not a valid %s TLS protocol version'\x2C TypeError);\nE('ERR_TLS_INVALID_STATE'\x2C 'TLS socket connection must be securely established'\x2C\n  Error);\nE('ERR_TLS_PROTOCOL_VERSION_CONFLICT'\x2C\n  'TLS protocol version %j conflicts with secureProtocol %j'\x2C TypeError);\nE('ERR_TLS_RENEGOTIATION_DISABLED'\x2C\n  'TLS session renegotiation disabled for this socket'\x2C Error);\n\n// This should probably be a `TypeError`.\nE('ERR_TLS_REQUIRED_SERVER_NAME'\x2C\n  '"servername" is required parameter for Server.addContext'\x2C Error);\nE('ERR_TLS_SESSION_ATTACK'\x2C 'TLS session renegotiation attack detected'\x2C Error);\nE('ERR_TLS_SNI_FROM_SERVER'\x2C\n  'Cannot issue SNI from a TLS server-side socket'\x2C Error);\nE('ERR_TRACE_EVENTS_CATEGORY_REQUIRED'\x2C\n  'At least one category is required'\x2C TypeError);\nE('ERR_TRACE_EVENTS_UNAVAILABLE'\x2C 'Trace events are unavailable'\x2C Error);\n\n// This should probably be a `RangeError`.\nE('ERR_TTY_INIT_FAILED'\x2C 'TTY initialization failed'\x2C SystemError);\nE('ERR_UNAVAILABLE_DURING_EXIT'\x2C 'Cannot call function in process exit ' +\n  'handler'\x2C Error);\nE('ERR_UNCAUGHT_EXCEPTION_CAPTURE_ALREADY_SET'\x2C\n  '`process.setupUncaughtExceptionCapture()` was called while a capture ' +\n    'callback was already active'\x2C\n  Error);\nE('ERR_UNESCAPED_CHARACTERS'\x2C '%s contains unescaped characters'\x2C TypeError);\nE('ERR_UNHANDLED_ERROR'\x2C\n  // Using a default argument here is important so the argument is not counted\n  // towards `Function#length`.\n  (err = undefined) => {\n    const msg = 'Unhandled error.';\n    if (err === undefined) return msg;\n    return `${msg} (${err})`;\n  }\x2C Error);\nE('ERR_UNKNOWN_BUILTIN_MODULE'\x2C 'No such built-in module: %s'\x2C Error);\nE('ERR_UNKNOWN_CREDENTIAL'\x2C '%s identifier does not exist: %s'\x2C Error);\nE('ERR_UNKNOWN_ENCODING'\x2C 'Unknown encoding: %s'\x2C TypeError);\nE('ERR_UNKNOWN_FILE_EXTENSION'\x2C 'Unknown file extension "%s" for %s'\x2C TypeError);\nE('ERR_UNKNOWN_MODULE_FORMAT'\x2C 'Unknown module format: %s for URL %s'\x2C\n  RangeError);\nE('ERR_UNKNOWN_SIGNAL'\x2C 'Unknown signal: %s'\x2C TypeError\x2C HideStackFramesError);\nE('ERR_UNSUPPORTED_DIR_IMPORT'\x2C function(path\x2C base\x2C exactUrl) {\n  lazyInternalUtil().setOwnProperty(this\x2C 'url'\x2C exactUrl);\n  return `Directory import '${path}' is not supported ` +\n    `resolving ES modules imported from ${base}`;\n}\x2C Error);\nE('ERR_UNSUPPORTED_ESM_URL_SCHEME'\x2C (url\x2C supported) => {\n  let msg = `Only URLs with a scheme in: ${formatList(supported)} are supported by the default ESM loader`;\n  if (isWindows && url.protocol.length === 2) {\n    msg +=\n      '. On Windows\x2C absolute paths must be valid file:// URLs';\n  }\n  msg += `. Received protocol '${url.protocol}'`;\n  return msg;\n}\x2C Error);\nE('ERR_USE_AFTER_CLOSE'\x2C '%s was closed'\x2C Error);\n\n// This should probably be a `TypeError`.\nE('ERR_VALID_PERFORMANCE_ENTRY_TYPE'\x2C\n  'At least one valid performance entry type is required'\x2C Error);\nE('ERR_VM_DYNAMIC_IMPORT_CALLBACK_MISSING'\x2C\n  'A dynamic import callback was not specified.'\x2C TypeError);\nE('ERR_VM_DYNAMIC_IMPORT_CALLBACK_MISSING_FLAG'\x2C\n  'A dynamic import callback was invoked without --experimental-vm-modules'\x2C\n  TypeError);\nE('ERR_VM_MODULE_ALREADY_LINKED'\x2C 'Module has already been linked'\x2C Error);\nE('ERR_VM_MODULE_CANNOT_CREATE_CACHED_DATA'\x2C\n  'Cached data cannot be created for a module which has been evaluated'\x2C Error);\nE('ERR_VM_MODULE_DIFFERENT_CONTEXT'\x2C\n  'Linked modules must use the same context'\x2C Error);\nE('ERR_VM_MODULE_LINK_FAILURE'\x2C function(message\x2C cause) {\n  this.cause = cause;\n  return message;\n}\x2C Error);\nE('ERR_VM_MODULE_NOT_MODULE'\x2C\n  'Provided module is not an instance of Module'\x2C Error);\nE('ERR_VM_MODULE_STATUS'\x2C 'Module status %s'\x2C Error);\nE('ERR_WASI_ALREADY_STARTED'\x2C 'WASI instance has already started'\x2C Error);\nE('ERR_WEBASSEMBLY_RESPONSE'\x2C 'WebAssembly response %s'\x2C TypeError);\nE('ERR_WORKER_INIT_FAILED'\x2C 'Worker initialization failure: %s'\x2C Error);\nE('ERR_WORKER_INVALID_EXEC_ARGV'\x2C (errors\x2C msg = 'invalid execArgv flags') =>\n  `Initiated Worker with ${msg}: ${ArrayPrototypeJoin(errors\x2C '\x2C ')}`\x2C\n  Error);\nE('ERR_WORKER_NOT_RUNNING'\x2C 'Worker instance not running'\x2C Error);\nE('ERR_WORKER_OUT_OF_MEMORY'\x2C\n  'Worker terminated due to reaching memory limit: %s'\x2C Error);\nE('ERR_WORKER_PATH'\x2C (filename) =>\n  'The worker script or module filename must be an absolute path or a ' +\n  'relative path starting with \\'./\\' or \\'../\\'.' +\n  (StringPrototypeStartsWith(filename\x2C 'file://') ?\n    ' Wrap file:// URLs with `new URL`.' : ''\n  ) +\n  (StringPrototypeStartsWith(filename\x2C 'data:text/javascript') ?\n    ' Wrap data: URLs with `new URL`.' : ''\n  ) +\n  ` Received "${filename}"`\x2C\n  TypeError);\nE('ERR_WORKER_UNSERIALIZABLE_ERROR'\x2C\n  'Serializing an uncaught exception failed'\x2C Error);\nE('ERR_WORKER_UNSUPPORTED_OPERATION'\x2C\n  '%s is not supported in workers'\x2C TypeError);\nE('ERR_ZLIB_INITIALIZATION_FAILED'\x2C 'Initialization failed'\x2C Error);\n
code-source-info,0x72b21165e4,10,2808,2862,C0O2823C2O2849C9O2861,,
tick,0x7ff8093038b3,50473,0,0x0,3,0x109ba30d0,0x72b21145f4,0x72b21143e1,0x72b2102e2e,0x723b73ff14,0x723b73f9b2
tick,0x10989d31d,50488,0,0x0,3,0x109ba30d0,0x72b21145f4,0x72b21143e1,0x72b2102e2e,0x723b73ff14,0x723b73f9b2
tick,0x7ff8092271f2,50495,0,0x0,3,0x109ba30d0,0x72b21145f4,0x72b21143e1,0x72b2102e2e,0x723b73ff14,0x723b73f9b2
tick,0x1092fe2df,50501,0,0x0,3,0x109ba30d0,0x72b21145f4,0x72b21143e1,0x72b2102e2e,0x723b73ff14,0x723b73f9b2
tick,0x7ff8091ca4d1,50507,0,0x0,3,0x109ba30d0,0x72b21145f4,0x72b21143e1,0x72b2102e2e,0x723b73ff14,0x723b73f9b2
tick,0x7ff809303ad2,50513,0,0x0,3,0x109ba30d0,0x72b21145f4,0x72b21143e1,0x72b2102e2e,0x723b73ff14,0x723b73f9b2
code-creation,JS,10,50606,0x72b211a74c,348,initializeDeprecations node:internal/process/pre_execution:519:32,0x72e2eba728,~
code-source-info,0x72b211a74c,67,16193,18114,C0O16222C6O16222C11O16208C16O16277C24O16277C29O16468C35O16468C40O16509C46O16509C51O16562C73O16554C101O16554C104O16880C112O16900C116O16942C127O17016C138O17106C149O17061C158O16927C167O17165C170O16898C174O16543C239O17442C245O17442C250O17421C255O17471C257O17499C268O17520C275O17661C279O17499C284O17694C288O17724C294O17760C304O17837C311O17742C316O17740C320O17923C326O17965C337O17947C342O17945C347O18113,,
code-creation,JS,10,50750,0x72b211ab34,65,initializeDns node:internal/dns/utils:204:23,0x72e2ebcce0,~
script-source,71,node:internal/dns/utils,'use strict';\n\nconst {\n  ArrayPrototypeForEach\x2C\n  ArrayPrototypeMap\x2C\n  ArrayPrototypePush\x2C\n  FunctionPrototypeBind\x2C\n  NumberParseInt\x2C\n  RegExpPrototypeExec\x2C\n  RegExpPrototypeSymbolReplace\x2C\n  Symbol\x2C\n} = primordials;\n\nconst errors = require('internal/errors');\nconst { isIP } = require('internal/net');\nconst { getOptionValue } = require('internal/options');\nconst {\n  validateArray\x2C\n  validateInt32\x2C\n  validateOneOf\x2C\n  validateString\x2C\n} = require('internal/validators');\nlet binding;\nfunction lazyBinding() {\n  binding ??= internalBinding('cares_wrap');\n  return binding;\n}\nconst IANA_DNS_PORT = 53;\nconst IPv6RE = /^\\[([^[\\]]*)\\]/;\nconst addrSplitRE = /(^.+?)(?::(\\d+))?$/;\nconst {\n  ERR_DNS_SET_SERVERS_FAILED\x2C\n  ERR_INVALID_ARG_VALUE\x2C\n  ERR_INVALID_IP_ADDRESS\x2C\n} = errors.codes;\n\nconst {\n  namespace: {\n    addSerializeCallback\x2C\n    addDeserializeCallback\x2C\n    isBuildingSnapshot\x2C\n  }\x2C\n} = require('internal/v8/startup_snapshot');\n\nfunction validateTimeout(options) {\n  const { timeout = -1 } = { ...options };\n  validateInt32(timeout\x2C 'options.timeout'\x2C -1);\n  return timeout;\n}\n\nfunction validateTries(options) {\n  const { tries = 4 } = { ...options };\n  validateInt32(tries\x2C 'options.tries'\x2C 1);\n  return tries;\n}\n\nconst kSerializeResolver = Symbol('dns:resolver:serialize');\nconst kDeserializeResolver = Symbol('dns:resolver:deserialize');\nconst kSnapshotStates = Symbol('dns:resolver:config');\nconst kInitializeHandle = Symbol('dns:resolver:initializeHandle');\nconst kSetServersInteral = Symbol('dns:resolver:setServers');\n\n// Resolver instances correspond 1:1 to c-ares channels.\n\nclass ResolverBase {\n  constructor(options = undefined) {\n    const timeout = validateTimeout(options);\n    const tries = validateTries(options);\n    // If we are building snapshot\x2C save the states of the resolver along\n    // the way.\n    if (isBuildingSnapshot()) {\n      this[kSnapshotStates] = { timeout\x2C tries };\n    }\n    this[kInitializeHandle](timeout\x2C tries);\n  }\n\n  [kInitializeHandle](timeout\x2C tries) {\n    const { ChannelWrap } = lazyBinding();\n    this._handle = new ChannelWrap(timeout\x2C tries);\n  }\n\n  cancel() {\n    this._handle.cancel();\n  }\n\n  getServers() {\n    return ArrayPrototypeMap(this._handle.getServers() || []\x2C (val) => {\n      if (!val[1] || val[1] === IANA_DNS_PORT)\n        return val[0];\n\n      const host = isIP(val[0]) === 6 ? `[${val[0]}]` : val[0];\n      return `${host}:${val[1]}`;\n    });\n  }\n\n  setServers(servers) {\n    validateArray(servers\x2C 'servers');\n\n    // Cache the original servers because in the event of an error while\n    // setting the servers\x2C c-ares won't have any servers available for\n    // resolution.\n    const newSet = [];\n    ArrayPrototypeForEach(servers\x2C (serv\x2C index) => {\n      validateString(serv\x2C `servers[${index}]`);\n      let ipVersion = isIP(serv);\n\n      if (ipVersion !== 0)\n        return ArrayPrototypePush(newSet\x2C [ipVersion\x2C serv\x2C IANA_DNS_PORT]);\n\n      const match = RegExpPrototypeExec(IPv6RE\x2C serv);\n\n      // Check for an IPv6 in brackets.\n      if (match) {\n        ipVersion = isIP(match[1]);\n\n        if (ipVersion !== 0) {\n          const port = NumberParseInt(\n            RegExpPrototypeSymbolReplace(addrSplitRE\x2C serv\x2C '$2')) || IANA_DNS_PORT;\n          return ArrayPrototypePush(newSet\x2C [ipVersion\x2C match[1]\x2C port]);\n        }\n      }\n\n      // addr::port\n      const addrSplitMatch = RegExpPrototypeExec(addrSplitRE\x2C serv);\n\n      if (addrSplitMatch) {\n        const hostIP = addrSplitMatch[1];\n        const port = addrSplitMatch[2] || IANA_DNS_PORT;\n\n        ipVersion = isIP(hostIP);\n\n        if (ipVersion !== 0) {\n          return ArrayPrototypePush(\n            newSet\x2C [ipVersion\x2C hostIP\x2C NumberParseInt(port)]);\n        }\n      }\n\n      throw new ERR_INVALID_IP_ADDRESS(serv);\n    });\n\n    this[kSetServersInteral](newSet\x2C servers);\n  }\n\n  [kSetServersInteral](newSet\x2C servers) {\n    const orig = ArrayPrototypeMap(this._handle.getServers() || []\x2C (val) => {\n      val.unshift(isIP(val[0]));\n      return val;\n    });\n    const errorNumber = this._handle.setServers(newSet);\n\n    if (errorNumber !== 0) {\n      // Reset the servers to the old servers\x2C because ares probably unset them.\n      this._handle.setServers(orig);\n      const { strerror } = lazyBinding();\n      const err = strerror(errorNumber);\n      throw new ERR_DNS_SET_SERVERS_FAILED(err\x2C servers);\n    }\n\n    if (isBuildingSnapshot()) {\n      this[kSnapshotStates].servers = newSet;\n    }\n  }\n\n\n  setLocalAddress(ipv4\x2C ipv6) {\n    validateString(ipv4\x2C 'ipv4');\n\n    if (ipv6 !== undefined) {\n      validateString(ipv6\x2C 'ipv6');\n    }\n\n    this._handle.setLocalAddress(ipv4\x2C ipv6);\n\n    if (isBuildingSnapshot()) {\n      this[kSnapshotStates].localAddress = { ipv4\x2C ipv6 };\n    }\n  }\n\n  // TODO(joyeecheung): consider exposing this if custom DNS resolvers\n  // end up being useful for snapshot users.\n  [kSerializeResolver]() {\n    this._handle = null;  // We'll restore it during deserialization.\n    addDeserializeCallback(function deserializeResolver(resolver) {\n      resolver[kDeserializeResolver]();\n    }\x2C this);\n  }\n\n  [kDeserializeResolver]() {\n    const { timeout\x2C tries\x2C localAddress\x2C servers } = this[kSnapshotStates];\n    this[kInitializeHandle](timeout\x2C tries);\n    if (localAddress) {\n      const { ipv4\x2C ipv6 } = localAddress;\n      this._handle.setLocalAddress(ipv4\x2C ipv6);\n    }\n    if (servers) {\n      this[kSetServersInteral](servers\x2C servers);\n    }\n  }\n}\n\nlet defaultResolver;\nlet dnsOrder;\n\nfunction initializeDns() {\n  const orderFromCLI = getOptionValue('--dns-result-order');\n  if (!orderFromCLI) {\n    dnsOrder ??= 'verbatim';\n  } else {\n    // Allow the deserialized application to override order from CLI.\n    dnsOrder = orderFromCLI;\n  }\n\n  if (!isBuildingSnapshot()) {\n    return;\n  }\n\n  addSerializeCallback(() => {\n    defaultResolver?.[kSerializeResolver]();\n  });\n}\n\nconst resolverKeys = [\n  'getServers'\x2C\n  'resolve'\x2C\n  'resolve4'\x2C\n  'resolve6'\x2C\n  'resolveAny'\x2C\n  'resolveCaa'\x2C\n  'resolveCname'\x2C\n  'resolveMx'\x2C\n  'resolveNaptr'\x2C\n  'resolveNs'\x2C\n  'resolvePtr'\x2C\n  'resolveSoa'\x2C\n  'resolveSrv'\x2C\n  'resolveTxt'\x2C\n  'reverse'\x2C\n];\n\nfunction getDefaultResolver() {\n  // We do this here instead of pre-execution so that the default resolver is\n  // only ever created when the user loads any dns module.\n  if (defaultResolver === undefined) {\n    defaultResolver = new ResolverBase();\n  }\n  return defaultResolver;\n}\n\nfunction setDefaultResolver(resolver) {\n  defaultResolver = resolver;\n}\n\nfunction bindDefaultResolver(target\x2C source) {\n  const defaultResolver = getDefaultResolver();\n  ArrayPrototypeForEach(resolverKeys\x2C (key) => {\n    target[key] = FunctionPrototypeBind(source[key]\x2C defaultResolver);\n  });\n}\n\nfunction validateHints(hints) {\n  const { AI_ADDRCONFIG\x2C AI_ALL\x2C AI_V4MAPPED } = lazyBinding();\n  if ((hints & ~(AI_ADDRCONFIG | AI_ALL | AI_V4MAPPED)) !== 0) {\n    throw new ERR_INVALID_ARG_VALUE('hints'\x2C hints);\n  }\n}\n\nlet invalidHostnameWarningEmitted = false;\nfunction emitInvalidHostnameWarning(hostname) {\n  if (!invalidHostnameWarningEmitted) {\n    process.emitWarning(\n      `The provided hostname "${hostname}" is not a valid ` +\n      'hostname\x2C and is supported in the dns module solely for compatibility.'\x2C\n      'DeprecationWarning'\x2C\n      'DEP0118'\x2C\n    );\n    invalidHostnameWarningEmitted = true;\n  }\n}\n\nfunction getDefaultVerbatim() {\n  return dnsOrder !== 'ipv4first';\n}\n\nfunction setDefaultResultOrder(value) {\n  validateOneOf(value\x2C 'dnsOrder'\x2C ['verbatim'\x2C 'ipv4first']);\n  dnsOrder = value;\n}\n\nfunction getDefaultResultOrder() {\n  return dnsOrder;\n}\n\nfunction createResolverClass(resolver) {\n  const resolveMap = { __proto__: null };\n\n  class Resolver extends ResolverBase {}\n\n  Resolver.prototype.resolveAny = resolveMap.ANY = resolver('queryAny');\n  Resolver.prototype.resolve4 = resolveMap.A = resolver('queryA');\n  Resolver.prototype.resolve6 = resolveMap.AAAA = resolver('queryAaaa');\n  Resolver.prototype.resolveCaa = resolveMap.CAA = resolver('queryCaa');\n  Resolver.prototype.resolveCname = resolveMap.CNAME = resolver('queryCname');\n  Resolver.prototype.resolveMx = resolveMap.MX = resolver('queryMx');\n  Resolver.prototype.resolveNs = resolveMap.NS = resolver('queryNs');\n  Resolver.prototype.resolveTxt = resolveMap.TXT = resolver('queryTxt');\n  Resolver.prototype.resolveSrv = resolveMap.SRV = resolver('querySrv');\n  Resolver.prototype.resolvePtr = resolveMap.PTR = resolver('queryPtr');\n  Resolver.prototype.resolveNaptr = resolveMap.NAPTR = resolver('queryNaptr');\n  Resolver.prototype.resolveSoa = resolveMap.SOA = resolver('querySoa');\n  Resolver.prototype.reverse = resolver('getHostByAddr');\n\n  return {\n    resolveMap\x2C\n    Resolver\x2C\n  };\n}\n\n// ERROR CODES\nconst errorCodes = {\n  NODATA: 'ENODATA'\x2C\n  FORMERR: 'EFORMERR'\x2C\n  SERVFAIL: 'ESERVFAIL'\x2C\n  NOTFOUND: 'ENOTFOUND'\x2C\n  NOTIMP: 'ENOTIMP'\x2C\n  REFUSED: 'EREFUSED'\x2C\n  BADQUERY: 'EBADQUERY'\x2C\n  BADNAME: 'EBADNAME'\x2C\n  BADFAMILY: 'EBADFAMILY'\x2C\n  BADRESP: 'EBADRESP'\x2C\n  CONNREFUSED: 'ECONNREFUSED'\x2C\n  TIMEOUT: 'ETIMEOUT'\x2C\n  EOF: 'EOF'\x2C\n  FILE: 'EFILE'\x2C\n  NOMEM: 'ENOMEM'\x2C\n  DESTRUCTION: 'EDESTRUCTION'\x2C\n  BADSTR: 'EBADSTR'\x2C\n  BADFLAGS: 'EBADFLAGS'\x2C\n  NONAME: 'ENONAME'\x2C\n  BADHINTS: 'EBADHINTS'\x2C\n  NOTINITIALIZED: 'ENOTINITIALIZED'\x2C\n  LOADIPHLPAPI: 'ELOADIPHLPAPI'\x2C\n  ADDRGETNETWORKPARAMS: 'EADDRGETNETWORKPARAMS'\x2C\n  CANCELLED: 'ECANCELLED'\x2C\n};\n\nmodule.exports = {\n  bindDefaultResolver\x2C\n  getDefaultResolver\x2C\n  setDefaultResolver\x2C\n  validateHints\x2C\n  validateTimeout\x2C\n  validateTries\x2C\n  emitInvalidHostnameWarning\x2C\n  getDefaultVerbatim\x2C\n  getDefaultResultOrder\x2C\n  setDefaultResultOrder\x2C\n  errorCodes\x2C\n  createResolverClass\x2C\n  initializeDns\x2C\n};\n
code-source-info,0x72b211ab34,71,5490,5854,C0O5518C8O5518C13O5558C15O5583C25O5592C29O5693C31O5702C37O5725C42O5730C47O5758C48O5765C49O5773C59O5773C64O5853,,
tick,0x7ff809303aef,51347,0,0x0,3,0x109ba30d0,0x72b2102e47,0x723b73ff14,0x723b73f9b2
code-creation,JS,10,51368,0x72b211b914,84,setupSymbolDisposePolyfill node:internal/process/pre_execution:159:36,0x72e2eba020,~
code-source-info,0x72b211b914,67,4503,5203,C0O4673C5O4691C13O4719C24O4740C31O4849C37O4719C42O4961C45O4979C53O5012C64O5033C71O5147C77O5012C83O5202,,
code-creation,JS,10,51444,0x72b211bad4,21,assert node:internal/assert:11:16,0x722077a0d0,~
script-source,11,node:internal/assert,'use strict';\n\nlet error;\nfunction lazyError() {\n  if (!error) {\n    error = require('internal/errors').codes.ERR_INTERNAL_ASSERTION;\n  }\n  return error;\n}\n\nfunction assert(value\x2C message) {\n  if (!value) {\n    const ERR_INTERNAL_ASSERTION = lazyError();\n    throw new ERR_INTERNAL_ASSERTION(message);\n  }\n}\n\nfunction fail(message) {\n  const ERR_INTERNAL_ASSERTION = lazyError();\n  throw new ERR_INTERNAL_ASSERTION(message);\n}\n\nassert.fail = fail;\n\nmodule.exports = assert;\n
code-source-info,0x72b211bad4,11,172,307,C0O193C4O242C7O242C11O259C13O265C18O259C20O306,,
code-creation,JS,10,51575,0x72b211c044,430,readPolicyFromDisk node:internal/process/pre_execution:672:28,0x72e2eba8c0,~
code-source-info,0x72b211c
code-creation,JS,10,51713,0x72b211c454,49,setupStacktracePrinterOnSigint node:internal/process/pre_execution:433:40,0x72e2eba470,~
code-source-info,0x72b211c454,67,13466,13652,C0O13473C8O13478C14O13518C15O13525C16O13559C22O13559C27O13540C32O13609C38O13642C43O13642C48O13651,,
code-creation,JS,10,51768,0x72b211c5f4,35,initializeReportSignalHandlers node:internal/process/pre_execution:463:40,0x72e2eba5a0,~
code-source-info,0x72b211c5f4,67,14237,14386,C0O14244C8O14248C14O14321C20O14321C25O14300C30O14361C34O14385,,
code-creation,JS,10,51820,0x72b211c8fc,153,initializeHeapSnapshotSignalHandlers node:internal/process/pre_execution:470:46,0x72e2eba5f8,~
code-source-info,0x72b211c8fc,67,14433,15122,C0O14433C20O14455C30O14455C34O14455C36O14520C44O14520C48O14520C50O14559C54O14576C55O14583C56O14587C64O14587C69O14617C77O14618C82O14678C90O14678C95O14656C101O14853C106O14861C117O14861C123O14989C130O14993C135O15021C147O15021C152O15121,,
code-creation,JS,10,51879,0x72b211cc3c,138,setupChildProcessIpcChannel node:internal/process/pre_execution:580:37,0x72e2eba780,~
code-source-info,0x72b211cc3c,67,18152,18681,C0O18159C3O18171C8O18175C14O18213C20O18213C25O18257C33O18280C38O18284C46O18257C52O18310C53O18320C57O18310C61O18401C64O18416C73O18474C76O18482C81O18486C90O18533C93O18548C102O18590C108O18590C113O18614C118O18615C124O18654C127O18669C132O18654C137O18680,,
code-creation,JS,10,51930,0x72b211ce5c,63,initializeClusterIPC node:internal/process/pre_execution:599:30,0x72e2eba7d8,~
code-source-info,0x72b211ce5c,67,18712,18953,C0O18719C3O18731C10O18735C18O18750C23O18754C29O18792C35O18792C40O18824C45O18824C49O18913C52O18928C62O18952,,
code-creation,JS,10,51999,0x72b211cf9c,52,runDeserializeCallbacks node:internal/v8/startup_snapshot:39:33,0x72e2ea93c8,~
script-source,53,node:internal/v8/startup_snapshot,'use strict';\n\nconst {\n  validateFunction\x2C\n} = require('internal/validators');\nconst {\n  codes: {\n    ERR_NOT_BUILDING_SNAPSHOT\x2C\n    ERR_NOT_SUPPORTED_IN_SNAPSHOT\x2C\n    ERR_DUPLICATE_STARTUP_SNAPSHOT_MAIN_FUNCTION\x2C\n  }\x2C\n} = require('internal/errors');\n\nconst {\n  setSerializeCallback\x2C\n  setDeserializeCallback\x2C\n  setDeserializeMainFunction: _setDeserializeMainFunction\x2C\n  isBuildingSnapshotBuffer\x2C\n} = internalBinding('mksnapshot');\n\nfunction isBuildingSnapshot() {\n  return isBuildingSnapshotBuffer[0];\n}\n\nfunction throwIfNotBuildingSnapshot() {\n  if (!isBuildingSnapshot()) {\n    throw new ERR_NOT_BUILDING_SNAPSHOT();\n  }\n}\n\nfunction throwIfBuildingSnapshot(reason) {\n  if (isBuildingSnapshot()) {\n    throw new ERR_NOT_SUPPORTED_IN_SNAPSHOT(reason);\n  }\n}\n\nconst deserializeCallbacks = [];\nlet deserializeCallbackIsSet = false;\nfunction runDeserializeCallbacks() {\n  while (deserializeCallbacks.length > 0) {\n    const { 0: callback\x2C 1: data } = deserializeCallbacks.shift();\n    callback(data);\n  }\n}\n\nfunction addDeserializeCallback(callback\x2C data) {\n  throwIfNotBuildingSnapshot();\n  validateFunction(callback\x2C 'callback');\n  if (!deserializeCallbackIsSet) {\n    // TODO(joyeecheung): when the main function handling is done in JS\x2C\n    // the deserialize callbacks can always be invoked. For now only\n    // store it in C++ when it's actually used to avoid unnecessary\n    // C++ -> JS costs.\n    setDeserializeCallback(runDeserializeCallbacks);\n    deserializeCallbackIsSet = true;\n  }\n  deserializeCallbacks.push([callback\x2C data]);\n}\n\nconst serializeCallbacks = [];\nfunction runSerializeCallbacks() {\n  while (serializeCallbacks.length > 0) {\n    const { 0: callback\x2C 1: data } = serializeCallbacks.shift();\n    callback(data);\n  }\n}\n\nfunction addSerializeCallback(callback\x2C data) {\n  throwIfNotBuildingSnapshot();\n  validateFunction(callback\x2C 'callback');\n  serializeCallbacks.push([callback\x2C data]);\n}\n\nfunction initializeCallbacks() {\n  // Only run the serialize callbacks in snapshot building mode\x2C otherwise\n  // they throw.\n  if (isBuildingSnapshot()) {\n    setSerializeCallback(runSerializeCallbacks);\n  }\n}\n\nlet deserializeMainIsSet = false;\nfunction setDeserializeMainFunction(callback\x2C data) {\n  throwIfNotBuildingSnapshot();\n  // TODO(joyeecheung): In lib/internal/bootstrap/node.js\x2C create a default\n  // main function to run the lib/internal/main scripts and make sure that\n  // the main function set in the snapshot building process takes precedence.\n  validateFunction(callback\x2C 'callback');\n  if (deserializeMainIsSet) {\n    throw new ERR_DUPLICATE_STARTUP_SNAPSHOT_MAIN_FUNCTION();\n  }\n  deserializeMainIsSet = true;\n\n  _setDeserializeMainFunction(function deserializeMain() {\n    const {\n      prepareMainThreadExecution\x2C\n      markBootstrapComplete\x2C\n    } = require('internal/process/pre_execution');\n\n    // This should be in sync with run_main_module.js until we make that\n    // a built-in main function.\n    // TODO(joyeecheung): make a copy of argv[0] and insert it as argv[1].\n    prepareMainThreadExecution(false);\n    markBootstrapComplete();\n    callback(data);\n  });\n}\n\nmodule.exports = {\n  initializeCallbacks\x2C\n  runDeserializeCallbacks\x2C\n  throwIfBuildingSnapshot\x2C\n  // Exposed to require('v8').startupSnapshot\n  namespace: {\n    addDeserializeCallback\x2C\n    addSerializeCallback\x2C\n    setDeserializeMainFunction\x2C\n    isBuildingSnapshot\x2C\n  }\x2C\n};\n
code-source-info,0x72b211cf9c,53,863,1004,C0O905C5O898C11O905C16O949C19O970C24O970C31O927C38O940C42O983C46O870C51O1003,,
code-creation,JS,10,52239,0x72b211d4c4,67,setupUserModules node:internal/process/pre_execution:184:26,0x72e2eba078,~
code-source-info,0x72b211d4c4,67,5230,5783,C10O5263C13O5263C16O5288C19O5288C23O5349C29O5349C34O5391C39O5409C45O5391C49O5649C53O5680C56O5680C59O5752C62O5752C66O5782,,
code-creation,JS,10,52278,0x72b211d604,21,initializeCJSLoader node:internal/process/pre_execution:722:29,0x72e2eba918,~
code-source-info,0x72b211d604,67,22737,22830,C0O22770C6O22770C11O22752C16O22812C20O22829,,
code-creation,JS,10,52403,0x72b211d764,90,initializeCJS node:internal/modules/cjs/loader:389:23,0x72e2eb7050,~
script-source,63,node:internal/modules/cjs/loader,// Copyright Joyent\x2C Inc. and other Node contributors.\n//\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\n// copy of this software and associated documentation files (the\n// "Software")\x2C to deal in the Software without restriction\x2C including\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\n// persons to whom the Software is furnished to do so\x2C subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nconst {\n  ArrayIsArray\x2C\n  ArrayPrototypeFilter\x2C\n  ArrayPrototypeIncludes\x2C\n  ArrayPrototypeIndexOf\x2C\n  ArrayPrototypeJoin\x2C\n  ArrayPrototypeMap\x2C\n  ArrayPrototypePush\x2C\n  ArrayPrototypePushApply\x2C\n  ArrayPrototypeSlice\x2C\n  ArrayPrototypeSplice\x2C\n  ArrayPrototypeUnshift\x2C\n  ArrayPrototypeUnshiftApply\x2C\n  Boolean\x2C\n  Error\x2C\n  JSONParse\x2C\n  ObjectDefineProperty\x2C\n  ObjectFreeze\x2C\n  ObjectGetOwnPropertyDescriptor\x2C\n  ObjectGetPrototypeOf\x2C\n  ObjectKeys\x2C\n  ObjectPrototype\x2C\n  ObjectPrototypeHasOwnProperty\x2C\n  ObjectSetPrototypeOf\x2C\n  Proxy\x2C\n  ReflectApply\x2C\n  ReflectSet\x2C\n  RegExpPrototypeExec\x2C\n  SafeMap\x2C\n  SafeWeakMap\x2C\n  String\x2C\n  Symbol\x2C\n  StringPrototypeCharAt\x2C\n  StringPrototypeCharCodeAt\x2C\n  StringPrototypeEndsWith\x2C\n  StringPrototypeIndexOf\x2C\n  StringPrototypeRepeat\x2C\n  StringPrototypeSlice\x2C\n  StringPrototypeSplit\x2C\n  StringPrototypeStartsWith\x2C\n} = primordials;\n\n// Map used to store CJS parsing data.\nconst cjsParseCache = new SafeWeakMap();\n/**\n * Map of already-loaded CJS modules to use.\n */\nconst cjsExportsCache = new SafeWeakMap();\n\n// Set first due to cycle with ESM loader functions.\nmodule.exports = {\n  cjsExportsCache\x2C\n  cjsParseCache\x2C\n  initializeCJS\x2C\n  Module\x2C\n  wrapSafe\x2C\n  get hasLoadedAnyUserCJSModule() { return hasLoadedAnyUserCJSModule; }\x2C\n};\n\nconst { BuiltinModule } = require('internal/bootstrap/realm');\nconst {\n  maybeCacheSourceMap\x2C\n} = require('internal/source_map/source_map_cache');\nconst { pathToFileURL\x2C fileURLToPath\x2C isURL } = require('internal/url');\nconst {\n  pendingDeprecate\x2C\n  emitExperimentalWarning\x2C\n  kEmptyObject\x2C\n  setOwnProperty\x2C\n  getLazy\x2C\n} = require('internal/util');\nconst {\n  internalCompileFunction\x2C\n  makeContextifyScript\x2C\n  runScriptInThisContext\x2C\n} = require('internal/vm');\nconst { containsModuleSyntax } = internalBinding('contextify');\n\nconst assert = require('internal/assert');\nconst fs = require('fs');\nconst path = require('path');\nconst { internalModuleStat } = internalBinding('fs');\nconst { safeGetenv } = internalBinding('credentials');\nconst {\n  privateSymbols: {\n    require_private_symbol\x2C\n  }\x2C\n} = internalBinding('util');\nconst {\n  getCjsConditions\x2C\n  initializeCjsConditions\x2C\n  loadBuiltinModule\x2C\n  makeRequireFunction\x2C\n  normalizeReferrerURL\x2C\n  stripBOM\x2C\n  toRealPath\x2C\n} = require('internal/modules/helpers');\nconst packageJsonReader = require('internal/modules/package_json_reader');\nconst { getOptionValue\x2C getEmbedderOptions } = require('internal/options');\nconst policy = getLazy(\n  () => (getOptionValue('--experimental-policy') ? require('internal/process/policy') : null)\x2C\n);\nconst shouldReportRequiredModules = getLazy(() => process.env.WATCH_REPORT_DEPENDENCIES);\n\nconst getCascadedLoader = getLazy(\n  () => require('internal/process/esm_loader').esmLoader\x2C\n);\n\nconst permission = require('internal/process/permission');\n\n// Whether any user-provided CJS modules had been loaded (executed).\n// Used for internal assertions.\nlet hasLoadedAnyUserCJSModule = false;\n\nconst {\n  codes: {\n    ERR_INVALID_ARG_VALUE\x2C\n    ERR_INVALID_MODULE_SPECIFIER\x2C\n    ERR_REQUIRE_ESM\x2C\n    ERR_UNKNOWN_BUILTIN_MODULE\x2C\n  }\x2C\n  setArrowMessage\x2C\n} = require('internal/errors');\nconst { validateString } = require('internal/validators');\n\nconst {\n  CHAR_BACKWARD_SLASH\x2C\n  CHAR_COLON\x2C\n  CHAR_DOT\x2C\n  CHAR_FORWARD_SLASH\x2C\n} = require('internal/constants');\n\nconst {\n  isProxy\x2C\n} = require('internal/util/types');\n\nconst isWindows = process.platform === 'win32';\n\nconst relativeResolveCache = { __proto__: null };\n\nlet requireDepth = 0;\nlet isPreloading = false;\nlet statCache = null;\n\n/**\n * Our internal implementation of `require`.\n * @param {Module} module Parent module of what is being required\n * @param {string} id Specifier of the child module being imported\n */\nfunction internalRequire(module\x2C id) {\n  validateString(id\x2C 'id');\n  if (id === '') {\n    throw new ERR_INVALID_ARG_VALUE('id'\x2C id\x2C\n                                    'must be a non-empty string');\n  }\n  requireDepth++;\n  try {\n    return Module._load(id\x2C module\x2C /* isMain */ false);\n  } finally {\n    requireDepth--;\n  }\n}\n\n/**\n * Get a path's properties\x2C using an in-memory cache to minimize lookups.\n * @param {string} filename Absolute path to the file\n */\nfunction stat(filename) {\n  filename = path.toNamespacedPath(filename);\n  if (statCache !== null) {\n    const result = statCache.get(filename);\n    if (result !== undefined) { return result; }\n  }\n  const result = internalModuleStat(filename);\n  if (statCache !== null && result >= 0) {\n    // Only set cache when `internalModuleStat(filename)` succeeds.\n    statCache.set(filename\x2C result);\n  }\n  return result;\n}\n\nlet _stat = stat;\nObjectDefineProperty(Module\x2C '_stat'\x2C {\n  __proto__: null\x2C\n  get() { return _stat; }\x2C\n  set(stat) {\n    emitExperimentalWarning('Module._stat');\n    _stat = stat;\n    return true;\n  }\x2C\n  configurable: true\x2C\n});\n\n/**\n * Update the parent's children array with the child module.\n * @param {Module} parent Module requiring the children\n * @param {Module} child Module being required\n * @param {boolean} scan Add the child to the parent's children if not already present\n */\nfunction updateChildren(parent\x2C child\x2C scan) {\n  const children = parent?.children;\n  if (children && !(scan && ArrayPrototypeIncludes(children\x2C child))) {\n    ArrayPrototypePush(children\x2C child);\n  }\n}\n\n/**\n * Tell the watch mode that a module was required.\n * @param {string} filename Absolute path of the module\n */\nfunction reportModuleToWatchMode(filename) {\n  if (shouldReportRequiredModules() && process.send) {\n    process.send({ 'watch:require': [filename] });\n  }\n}\n\n/**\n * Tell the watch mode that a module was not found.\n * @param {string} basePath The absolute path that errored\n * @param {string[]} extensions The extensions that were tried\n */\nfunction reportModuleNotFoundToWatchMode(basePath\x2C extensions) {\n  if (shouldReportRequiredModules() && process.send) {\n    process.send({ 'watch:require': ArrayPrototypeMap(extensions\x2C (ext) => path.resolve(`${basePath}${ext}`)) });\n  }\n}\n\n/** @type {Map<Module\x2C Module>} */\nconst moduleParentCache = new SafeWeakMap();\n/**\n * Create a new module instance.\n * @param {string} id\n * @param {Module} parent\n */\nfunction Module(id = ''\x2C parent) {\n  this.id = id;\n  this.path = path.dirname(id);\n  setOwnProperty(this\x2C 'exports'\x2C {});\n  moduleParentCache.set(this\x2C parent);\n  updateChildren(parent\x2C this\x2C false);\n  this.filename = null;\n  this.loaded = false;\n  this.children = [];\n  let redirects;\n  const manifest = policy()?.manifest;\n  if (manifest) {\n    const moduleURL = pathToFileURL(id);\n    redirects = manifest.getDependencyMapper(moduleURL);\n    // TODO(rafaelgss): remove the necessity of this branch\n    setOwnProperty(this\x2C 'require'\x2C makeRequireFunction(this\x2C redirects));\n    // eslint-disable-next-line no-proto\n    setOwnProperty(this.__proto__\x2C 'require'\x2C makeRequireFunction(this\x2C redirects));\n  }\n  this[require_private_symbol] = internalRequire;\n}\n\n/** @type {Record<string\x2C Module>} */\nModule._cache = { __proto__: null };\n/** @type {Record<string\x2C string>} */\nModule._pathCache = { __proto__: null };\n/** @type {Record<string\x2C (module: Module\x2C filename: string) => void>} */\nModule._extensions = { __proto__: null };\n/** @type {string[]} */\nlet modulePaths = [];\n/** @type {string[]} */\nModule.globalPaths = [];\n\nlet patched = false;\n\n/**\n * Add the CommonJS wrapper around a module's source code.\n * @param {string} script Module source code\n */\nlet wrap = function(script) { // eslint-disable-line func-style\n  return Module.wrapper[0] + script + Module.wrapper[1];\n};\n\nconst wrapper = [\n  '(function (exports\x2C require\x2C module\x2C __filename\x2C __dirname) { '\x2C\n  '\\n});'\x2C\n];\n\nlet wrapperProxy = new Proxy(wrapper\x2C {\n  __proto__: null\x2C\n\n  set(target\x2C property\x2C value\x2C receiver) {\n    patched = true;\n    return ReflectSet(target\x2C property\x2C value\x2C receiver);\n  }\x2C\n\n  defineProperty(target\x2C property\x2C descriptor) {\n    patched = true;\n    return ObjectDefineProperty(target\x2C property\x2C descriptor);\n  }\x2C\n});\n\nObjectDefineProperty(Module\x2C 'wrap'\x2C {\n  __proto__: null\x2C\n  get() {\n    return wrap;\n  }\x2C\n\n  set(value) {\n    patched = true;\n    wrap = value;\n  }\x2C\n});\n\nObjectDefineProperty(Module\x2C 'wrapper'\x2C {\n  __proto__: null\x2C\n  get() {\n    return wrapperProxy;\n  }\x2C\n\n  set(value) {\n    patched = true;\n    wrapperProxy = value;\n  }\x2C\n});\n\nconst isPreloadingDesc = { get() { return isPreloading; } };\nObjectDefineProperty(Module.prototype\x2C 'isPreloading'\x2C isPreloadingDesc);\nObjectDefineProperty(BuiltinModule.prototype\x2C 'isPreloading'\x2C isPreloadingDesc);\n\n/**\n * Get the parent of the current module from our cache.\n */\nfunction getModuleParent() {\n  return moduleParentCache.get(this);\n}\n\n/**\n * Set the parent of the current module in our cache.\n * @param {Module} value\n */\nfunction setModuleParent(value) {\n  moduleParentCache.set(this\x2C value);\n}\n\nlet debug = require('internal/util/debuglog').debuglog('module'\x2C (fn) => {\n  debug = fn;\n});\n\nObjectDefineProperty(Module.prototype\x2C 'parent'\x2C {\n  __proto__: null\x2C\n  get: pendingDeprecate(\n    getModuleParent\x2C\n    'module.parent is deprecated due to accuracy issues. Please use ' +\n      'require.main to find program entry point instead.'\x2C\n    'DEP0144'\x2C\n  )\x2C\n  set: pendingDeprecate(\n    setModuleParent\x2C\n    'module.parent is deprecated due to accuracy issues. Please use ' +\n      'require.main to find program entry point instead.'\x2C\n    'DEP0144'\x2C\n  )\x2C\n});\nModule._debug = pendingDeprecate(debug\x2C 'Module._debug is deprecated.'\x2C 'DEP0077');\nModule.isBuiltin = BuiltinModule.isBuiltin;\n\n/**\n * Prepare to run CommonJS code.\n * This function is called during pre-execution\x2C before any user code is run.\n */\nfunction initializeCJS() {\n  // This need to be done at runtime in case --expose-internals is set.\n  const builtinModules = BuiltinModule.getCanBeRequiredByUsersWithoutSchemeList();\n  Module.builtinModules = ObjectFreeze(builtinModules);\n\n  initializeCjsConditions();\n\n  if (!getEmbedderOptions().noGlobalSearchPaths) {\n    Module._initPaths();\n  }\n\n  // TODO(joyeecheung): deprecate this in favor of a proper hook?\n  Module.runMain =\n    require('internal/modules/run_main').executeUserEntryPoint;\n}\n\n// Given a module name\x2C and a list of paths to test\x2C returns the first\n// matching file in the following precedence.\n//\n// require("a.<ext>")\n//   -> a.<ext>\n//\n// require("a")\n//   -> a\n//   -> a.<ext>\n//   -> a/index.<ext>\n\nlet _readPackage = packageJsonReader.readPackage;\nObjectDefineProperty(Module\x2C '_readPackage'\x2C {\n  __proto__: null\x2C\n  get() { return _readPackage; }\x2C\n  set(readPackage) {\n    emitExperimentalWarning('Module._readPackage');\n    _readPackage = readPackage;\n    return true;\n  }\x2C\n  configurable: true\x2C\n});\n\n/**\n * Try to load a specifier as a package.\n * @param {string} requestPath The path to what we are trying to load\n * @param {string[]} exts File extensions to try appending in order to resolve the file\n * @param {boolean} isMain Whether the file is the main entry point of the app\n * @param {string} originalPath The specifier passed to `require`\n */\nfunction tryPackage(requestPath\x2C exts\x2C isMain\x2C originalPath) {\n  const { main: pkg\x2C pjsonPath } = _readPackage(requestPath);\n\n  if (!pkg) {\n    return tryExtensions(path.resolve(requestPath\x2C 'index')\x2C exts\x2C isMain);\n  }\n\n  const filename = path.resolve(requestPath\x2C pkg);\n  let actual = tryFile(filename\x2C isMain) ||\n    tryExtensions(filename\x2C exts\x2C isMain) ||\n    tryExtensions(path.resolve(filename\x2C 'index')\x2C exts\x2C isMain);\n  if (actual === false) {\n    actual = tryExtensions(path.resolve(requestPath\x2C 'index')\x2C exts\x2C isMain);\n    if (!actual) {\n      // eslint-disable-next-line no-restricted-syntax\n      const err = new Error(\n        `Cannot find module '${filename}'. ` +\n        'Please verify that the package.json has a valid "main" entry'\x2C\n      );\n      err.code = 'MODULE_NOT_FOUND';\n      err.path = pjsonPath;\n      err.requestPath = originalPath;\n      // TODO(BridgeAR): Add the requireStack as well.\n      throw err;\n    } else {\n      process.emitWarning(\n        `Invalid 'main' field in '${pjsonPath}' of '${pkg}'. ` +\n          'Please either fix that or report it to the module author'\x2C\n        'DeprecationWarning'\x2C\n        'DEP0128'\x2C\n      );\n    }\n  }\n  return actual;\n}\n\n/**\n * Check if the file exists and is not a directory if using `--preserve-symlinks` and `isMain` is false\x2C keep symlinks\n * intact\x2C otherwise resolve to the absolute realpath.\n * @param {string} requestPath The path to the file to load.\n * @param {boolean} isMain Whether the file is the main module.\n */\nfunction tryFile(requestPath\x2C isMain) {\n  const rc = _stat(requestPath);\n  if (rc !== 0) { return; }\n  if (getOptionValue('--preserve-symlinks') && !isMain) {\n    return path.resolve(requestPath);\n  }\n  return toRealPath(requestPath);\n}\n\n/**\n * Given a path\x2C check if the file exists with any of the set extensions.\n * @param {string} basePath The path and filename without extension\n * @param {string[]} exts The extensions to try\n * @param {boolean} isMain Whether the module is the main module\n */\nfunction tryExtensions(basePath\x2C exts\x2C isMain) {\n  for (let i = 0; i < exts.length; i++) {\n    const filename = tryFile(basePath + exts[i]\x2C isMain);\n\n    if (filename) {\n      return filename;\n    }\n  }\n  return false;\n}\n\n/**\n * Find the longest (possibly multi-dot) extension registered in `Module._extensions`.\n * @param {string} filename The filename to find the longest registered extension for.\n */\nfunction findLongestRegisteredExtension(filename) {\n  const name = path.basename(filename);\n  let currentExtension;\n  let index;\n  let startIndex = 0;\n  while ((index = StringPrototypeIndexOf(name\x2C '.'\x2C startIndex)) !== -1) {\n    startIndex = index + 1;\n    if (index === 0) { continue; } // Skip dotfiles like .gitignore\n    currentExtension = StringPrototypeSlice(name\x2C index);\n    if (Module._extensions[currentExtension]) { return currentExtension; }\n  }\n  return '.js';\n}\n\n/**\n * Tries to get the absolute file path of the parent module.\n * @param {Module} parent The parent module object.\n */\nfunction trySelfParentPath(parent) {\n  if (!parent) { return false; }\n\n  if (parent.filename) {\n    return parent.filename;\n  } else if (parent.id === '<repl>' || parent.id === 'internal/preload') {\n    try {\n      return process.cwd() + path.sep;\n    } catch {\n      return false;\n    }\n  }\n}\n\n/**\n * Attempt to resolve a module request using the parent module package metadata.\n * @param {string} parentPath The path of the parent module\n * @param {string} request The module request to resolve\n */\nfunction trySelf(parentPath\x2C request) {\n  if (!parentPath) { return false; }\n\n  const pkg = packageJsonReader.getNearestParentPackageJSON(parentPath);\n  if (pkg?.data.exports === undefined || pkg.data.name === undefined) {\n    return false;\n  }\n\n  let expansion;\n  if (request === pkg.data.name) {\n    expansion = '.';\n  } else if (StringPrototypeStartsWith(request\x2C `${pkg.data.name}/`)) {\n    expansion = '.' + StringPrototypeSlice(request\x2C pkg.data.name.length);\n  } else {\n    return false;\n  }\n\n  try {\n    const { packageExportsResolve } = require('internal/modules/esm/resolve');\n    return finalizeEsmResolution(packageExportsResolve(\n      pathToFileURL(pkg.path + '/package.json')\x2C expansion\x2C pkg.data\x2C\n      pathToFileURL(parentPath)\x2C getCjsConditions())\x2C parentPath\x2C pkg.path);\n  } catch (e) {\n    if (e.code === 'ERR_MODULE_NOT_FOUND') {\n      throw createEsmNotFoundErr(request\x2C pkg.path + '/package.json');\n    }\n    throw e;\n  }\n}\n\n/**\n * This only applies to requests of a specific form:\n * 1. `name/.*`\n * 2. `@scope/name/.*`\n */\nconst EXPORTS_PATTERN = /^((?:@[^/\\\\%]+\\/)?[^./\\\\%][^/\\\\%]*)(\\/.*)?$/;\n\n/**\n * Resolves the exports for a given module path and request.\n * @param {string} nmPath The path to the module.\n * @param {string} request The request for the module.\n */\nfunction resolveExports(nmPath\x2C request) {\n  // The implementation's behavior is meant to mirror resolution in ESM.\n  const { 1: name\x2C 2: expansion = '' } =\n    RegExpPrototypeExec(EXPORTS_PATTERN\x2C request) || kEmptyObject;\n  if (!name) { return; }\n  const pkgPath = path.resolve(nmPath\x2C name);\n  const pkg = _readPackage(pkgPath);\n  if (pkg.exists && pkg.exports != null) {\n    try {\n      const { packageExportsResolve } = require('internal/modules/esm/resolve');\n      return finalizeEsmResolution(packageExportsResolve(\n        pathToFileURL(pkgPath + '/package.json')\x2C '.' + expansion\x2C pkg\x2C null\x2C\n        getCjsConditions())\x2C null\x2C pkgPath);\n    } catch (e) {\n      if (e.code === 'ERR_MODULE_NOT_FOUND') {\n        throw createEsmNotFoundErr(request\x2C pkgPath + '/package.json');\n      }\n      throw e;\n    }\n  }\n}\n\n/**\n * Get the absolute path to a module.\n * @param {string} request Relative or absolute file path\n * @param {Array<string>} paths Folders to search as file paths\n * @param {boolean} isMain Whether the request is the main app entry point\n * @returns {string | false}\n */\nModule._findPath = function(request\x2C paths\x2C isMain) {\n  const absoluteRequest = path.isAbsolute(request);\n  if (absoluteRequest) {\n    paths = [''];\n  } else if (!paths || paths.length === 0) {\n    return false;\n  }\n\n  const cacheKey = request + '\\x00' + ArrayPrototypeJoin(paths\x2C '\\x00');\n  const entry = Module._pathCache[cacheKey];\n  if (entry) {\n    return entry;\n  }\n\n  let exts;\n  const trailingSlash = request.length > 0 &&\n    (StringPrototypeCharCodeAt(request\x2C request.length - 1) === CHAR_FORWARD_SLASH || (\n      StringPrototypeCharCodeAt(request\x2C request.length - 1) === CHAR_DOT &&\n      (\n        request.length === 1 ||\n        StringPrototypeCharCodeAt(request\x2C request.length - 2) === CHAR_FORWARD_SLASH ||\n        (StringPrototypeCharCodeAt(request\x2C request.length - 2) === CHAR_DOT && (\n          request.length === 2 ||\n          StringPrototypeCharCodeAt(request\x2C request.length - 3) === CHAR_FORWARD_SLASH\n        ))\n      )\n    ));\n\n  const isRelative = StringPrototypeCharCodeAt(request\x2C 0) === CHAR_DOT &&\n    (\n      request.length === 1 ||\n      StringPrototypeCharCodeAt(request\x2C 1) === CHAR_FORWARD_SLASH ||\n      (isWindows && StringPrototypeCharCodeAt(request\x2C 1) === CHAR_BACKWARD_SLASH) ||\n      (StringPrototypeCharCodeAt(request\x2C 1) === CHAR_DOT && ((\n        request.length === 2 ||\n        StringPrototypeCharCodeAt(request\x2C 2) === CHAR_FORWARD_SLASH) ||\n        (isWindows && StringPrototypeCharCodeAt(request\x2C 2) === CHAR_BACKWARD_SLASH)))\n    );\n  let insidePath = true;\n  if (isRelative) {\n    const normalizedRequest = path.normalize(request);\n    if (StringPrototypeStartsWith(normalizedRequest\x2C '..')) {\n      insidePath = false;\n    }\n  }\n\n  // For each path\n  for (let i = 0; i < paths.length; i++) {\n    // Don't search further if path doesn't exist\n    // or doesn't have permission to it\n    const curPath = paths[i];\n    if (insidePath && curPath &&\n      ((permission.isEnabled() && !permission.has('fs.read'\x2C curPath)) || _stat(curPath) < 1)\n    ) {\n      continue;\n    }\n\n    if (!absoluteRequest) {\n      const exportsResolved = resolveExports(curPath\x2C request);\n      if (exportsResolved) {\n        return exportsResolved;\n      }\n    }\n\n    const basePath = path.resolve(curPath\x2C request);\n    let filename;\n\n    const rc = _stat(basePath);\n    if (!trailingSlash) {\n      if (rc === 0) {  // File.\n        if (!isMain) {\n          if (getOptionValue('--preserve-symlinks')) {\n            filename = path.resolve(basePath);\n          } else {\n            filename = toRealPath(basePath);\n          }\n        } else if (getOptionValue('--preserve-symlinks-main')) {\n          // For the main module\x2C we use the --preserve-symlinks-main flag instead\n          // mainly for backward compatibility\x2C as the preserveSymlinks flag\n          // historically has not applied to the main module.  Most likely this\n          // was intended to keep .bin/ binaries working\x2C as following those\n          // symlinks is usually required for the imports in the corresponding\n          // files to resolve; that said\x2C in some use cases following symlinks\n          // causes bigger problems which is why the --preserve-symlinks-main option\n          // is needed.\n          filename = path.resolve(basePath);\n        } else {\n          filename = toRealPath(basePath);\n        }\n      }\n\n      if (!filename) {\n        // Try it with each of the extensions\n        if (exts === undefined) {\n          exts = ObjectKeys(Module._extensions);\n        }\n        filename = tryExtensions(basePath\x2C exts\x2C isMain);\n      }\n    }\n\n    if (!filename && rc === 1) {  // Directory.\n      // try it with each of the extensions at "index"\n      if (exts === undefined) {\n        exts = ObjectKeys(Module._extensions);\n      }\n      filename = tryPackage(basePath\x2C exts\x2C isMain\x2C request);\n    }\n\n    if (filename) {\n      Module._pathCache[cacheKey] = filename;\n      return filename;\n    }\n\n    const extensions = [''];\n    if (exts !== undefined) {\n      ArrayPrototypePushApply(extensions\x2C exts);\n    }\n    reportModuleNotFoundToWatchMode(basePath\x2C extensions);\n  }\n\n  return false;\n};\n\n/** `node_modules` character codes reversed */\nconst nmChars = [ 115\x2C 101\x2C 108\x2C 117\x2C 100\x2C 111\x2C 109\x2C 95\x2C 101\x2C 100\x2C 111\x2C 110 ];\nconst nmLen = nmChars.length;\nif (isWindows) {\n  /**\n   * Get the paths to the `node_modules` folder for a given path.\n   * @param {string} from `__dirname` of the module\n   */\n  Module._nodeModulePaths = function(from) {\n    // Guarantee that 'from' is absolute.\n    from = path.resolve(from);\n\n    // note: this approach *only* works when the path is guaranteed\n    // to be absolute.  Doing a fully-edge-case-correct path.split\n    // that works on both Windows and Posix is non-trivial.\n\n    // return root node_modules when path is 'D:\\\\'.\n    // path.resolve will make sure from.length >=3 in Windows.\n    if (StringPrototypeCharCodeAt(from\x2C from.length - 1) ===\n          CHAR_BACKWARD_SLASH &&\n        StringPrototypeCharCodeAt(from\x2C from.length - 2) === CHAR_COLON) {\n      return [from + 'node_modules'];\n    }\n\n    /** @type {string[]} */\n    const paths = [];\n    for (let i = from.length - 1\x2C p = 0\x2C last = from.length; i >= 0; --i) {\n      const code = StringPrototypeCharCodeAt(from\x2C i);\n      // The path segment separator check ('\\' and '/') was used to get\n      // node_modules path for every path segment.\n      // Use colon as an extra condition since we can get node_modules\n      // path for drive root like 'C:\\node_modules' and don't need to\n      // parse drive name.\n      if (code === CHAR_BACKWARD_SLASH ||\n          code === CHAR_FORWARD_SLASH ||\n          code === CHAR_COLON) {\n        if (p !== nmLen) {\n          ArrayPrototypePush(\n            paths\x2C\n            StringPrototypeSlice(from\x2C 0\x2C last) + '\\\\node_modules'\x2C\n          );\n        }\n        last = i;\n        p = 0;\n      } else if (p !== -1) {\n        if (nmChars[p] === code) {\n          ++p;\n        } else {\n          p = -1;\n        }\n      }\n    }\n\n    return paths;\n  };\n} else { // posix\n  /**\n   * Get the paths to the `node_modules` folder for a given path.\n   * @param {string} from `__dirname` of the module\n   */\n  Module._nodeModulePaths = function(from) {\n    // Guarantee that 'from' is absolute.\n    from = path.resolve(from);\n    // Return early not only to avoid unnecessary work\x2C but to *avoid* returning\n    // an array of two items for a root: [ '//node_modules'\x2C '/node_modules' ]\n    if (from === '/') {\n      return ['/node_modules'];\n    }\n\n    // note: this approach *only* works when the path is guaranteed\n    // to be absolute.  Doing a fully-edge-case-correct path.split\n    // that works on both Windows and Posix is non-trivial.\n    /** @type {string[]} */\n    const paths = [];\n    for (let i = from.length - 1\x2C p = 0\x2C last = from.length; i >= 0; --i) {\n      const code = StringPrototypeCharCodeAt(from\x2C i);\n      if (code === CHAR_FORWARD_SLASH) {\n        if (p !== nmLen) {\n          ArrayPrototypePush(\n            paths\x2C\n            StringPrototypeSlice(from\x2C 0\x2C last) + '/node_modules'\x2C\n          );\n        }\n        last = i;\n        p = 0;\n      } else if (p !== -1) {\n        if (nmChars[p] === code) {\n          ++p;\n        } else {\n          p = -1;\n        }\n      }\n    }\n\n    // Append /node_modules to handle root paths.\n    ArrayPrototypePush(paths\x2C '/node_modules');\n\n    return paths;\n  };\n}\n\n/**\n * Get the paths for module resolution.\n * @param {string} request\n * @param {Module} parent\n */\nModule._resolveLookupPaths = function(request\x2C parent) {\n  if (BuiltinModule.normalizeRequirableId(request)) {\n    debug('looking for %j in []'\x2C request);\n    return null;\n  }\n\n  // Check for node modules paths.\n  if (StringPrototypeCharAt(request\x2C 0) !== '.' ||\n      (request.length > 1 &&\n      StringPrototypeCharAt(request\x2C 1) !== '.' &&\n      StringPrototypeCharAt(request\x2C 1) !== '/' &&\n      (!isWindows || StringPrototypeCharAt(request\x2C 1) !== '\\\\'))) {\n\n    /** @type {string[]} */\n    let paths;\n    if (parent?.paths?.length) {\n      paths = ArrayPrototypeSlice(modulePaths);\n      ArrayPrototypeUnshiftApply(paths\x2C parent.paths);\n    } else {\n      paths = modulePaths;\n    }\n\n    debug('looking for %j in %j'\x2C request\x2C paths);\n    return paths.length > 0 ? paths : null;\n  }\n\n  // In REPL\x2C parent.filename is null.\n  if (!parent || !parent.id || !parent.filename) {\n    // Make require('./path/to/foo') work - normally the path is taken\n    // from realpath(__filename) but in REPL there is no filename\n    const mainPaths = ['.'];\n\n    debug('looking for %j in %j'\x2C request\x2C mainPaths);\n    return mainPaths;\n  }\n\n  debug('RELATIVE: requested: %s from parent.id %s'\x2C request\x2C parent.id);\n\n  const parentDir = [path.dirname(parent.filename)];\n  debug('looking for %j'\x2C parentDir);\n  return parentDir;\n};\n\n/**\n * Emits a warning when a non-existent property of module exports is accessed inside a circular dependency.\n * @param {string} prop The name of the non-existent property.\n */\nfunction emitCircularRequireWarning(prop) {\n  process.emitWarning(\n    `Accessing non-existent property '${String(prop)}' of module exports ` +\n    'inside circular dependency'\x2C\n  );\n}\n\n// A Proxy that can be used as the prototype of a module.exports object and\n// warns when non-existent properties are accessed.\nconst CircularRequirePrototypeWarningProxy = new Proxy({}\x2C {\n  __proto__: null\x2C\n\n  get(target\x2C prop) {\n    // Allow __esModule access in any case because it is used in the output\n    // of transpiled code to determine whether something comes from an\n    // ES module\x2C and is not used as a regular key of `module.exports`.\n    if (prop in target || prop === '__esModule') { return target[prop]; }\n    emitCircularRequireWarning(prop);\n    return undefined;\n  }\x2C\n\n  getOwnPropertyDescriptor(target\x2C prop) {\n    if (ObjectPrototypeHasOwnProperty(target\x2C prop) || prop === '__esModule') {\n      return ObjectGetOwnPropertyDescriptor(target\x2C prop);\n    }\n    emitCircularRequireWarning(prop);\n    return undefined;\n  }\x2C\n});\n\n/**\n * Returns the exports object for a module that has a circular `require`.\n * If the exports object is a plain object\x2C it is wrapped in a proxy that warns\n * about circular dependencies.\n * @param {Module} module The module instance\n */\nfunction getExportsForCircularRequire(module) {\n  if (module.exports &&\n      !isProxy(module.exports) &&\n      ObjectGetPrototypeOf(module.exports) === ObjectPrototype &&\n      // Exclude transpiled ES6 modules / TypeScript code because those may\n      // employ unusual patterns for accessing 'module.exports'. That should\n      // be okay because ES6 modules have a different approach to circular\n      // dependencies anyway.\n      !module.exports.__esModule) {\n    // This is later unset once the module is done loading.\n    ObjectSetPrototypeOf(\n      module.exports\x2C CircularRequirePrototypeWarningProxy);\n  }\n\n  return module.exports;\n}\n\n/**\n * Load a module from cache if it exists\x2C otherwise create a new module instance.\n * 1. If a module already exists in the cache: return its exports object.\n * 2. If the module is native: call\n *    `BuiltinModule.prototype.compileForPublicLoader()` and return the exports.\n * 3. Otherwise\x2C create a new module for the file and save it to the cache.\n *    Then have it load the file contents before returning its exports object.\n * @param {string} request Specifier of module to load via `require`\n * @param {string} parent Absolute path of the module importing the child\n * @param {boolean} isMain Whether the module is the main entry point\n */\nModule._load = function(request\x2C parent\x2C isMain) {\n  let relResolveCacheIdentifier;\n  if (parent) {\n    debug('Module._load REQUEST %s parent: %s'\x2C request\x2C parent.id);\n    // Fast path for (lazy loaded) modules in the same directory. The indirect\n    // caching is required to allow cache invalidation without changing the old\n    // cache key names.\n    relResolveCacheIdentifier = `${parent.path}\\x00${request}`;\n    const filename = relativeResolveCache[relResolveCacheIdentifier];\n    reportModuleToWatchMode(filename);\n    if (filename !== undefined) {\n      const cachedModule = Module._cache[filename];\n      if (cachedModule !== undefined) {\n        updateChildren(parent\x2C cachedModule\x2C true);\n        if (!cachedModule.loaded) {\n          return getExportsForCircularRequire(cachedModule);\n        }\n        return cachedModule.exports;\n      }\n      delete relativeResolveCache[relResolveCacheIdentifier];\n    }\n  }\n\n  if (StringPrototypeStartsWith(request\x2C 'node:')) {\n    // Slice 'node:' prefix\n    const id = StringPrototypeSlice(request\x2C 5);\n\n    if (!BuiltinModule.canBeRequiredByUsers(id)) {\n      throw new ERR_UNKNOWN_BUILTIN_MODULE(request);\n    }\n\n    const module = loadBuiltinModule(id\x2C request);\n    return module.exports;\n  }\n\n  const filename = Module._resolveFilename(request\x2C parent\x2C isMain);\n  const cachedModule = Module._cache[filename];\n  if (cachedModule !== undefined) {\n    updateChildren(parent\x2C cachedModule\x2C true);\n    if (!cachedModule.loaded) {\n      const parseCachedModule = cjsParseCache.get(cachedModule);\n      if (!parseCachedModule || parseCachedModule.loaded) {\n        return getExportsForCircularRequire(cachedModule);\n      }\n      parseCachedModule.loaded = true;\n    } else {\n      return cachedModule.exports;\n    }\n  }\n\n  if (BuiltinModule.canBeRequiredWithoutScheme(filename)) {\n    const mod = loadBuiltinModule(filename\x2C request);\n    return mod.exports;\n  }\n\n  // Don't call updateChildren()\x2C Module constructor already does.\n  const module = cachedModule || new Module(filename\x2C parent);\n\n  if (isMain) {\n    setOwnProperty(process\x2C 'mainModule'\x2C module);\n    setOwnProperty(module.require\x2C 'main'\x2C process.mainModule);\n    module.id = '.';\n  }\n\n  reportModuleToWatchMode(filename);\n\n  Module._cache[filename] = module;\n  if (parent !== undefined) {\n    relativeResolveCache[relResolveCacheIdentifier] = filename;\n  }\n\n  let threw = true;\n  try {\n    module.load(filename);\n    threw = false;\n  } finally {\n    if (threw) {\n      delete Module._cache[filename];\n      if (parent !== undefined) {\n        delete relativeResolveCache[relResolveCacheIdentifier];\n        const children = parent?.children;\n        if (ArrayIsArray(children)) {\n          const index = ArrayPrototypeIndexOf(children\x2C module);\n          if (index !== -1) {\n            ArrayPrototypeSplice(children\x2C index\x2C 1);\n          }\n        }\n      }\n    } else if (module.exports &&\n               !isProxy(module.exports) &&\n               ObjectGetPrototypeOf(module.exports) ===\n                 CircularRequirePrototypeWarningProxy) {\n      ObjectSetPrototypeOf(module.exports\x2C ObjectPrototype);\n    }\n  }\n\n  return module.exports;\n};\n\n/**\n * Given a `require` string and its context\x2C get its absolute file path.\n * @param {string} request The specifier to resolve\n * @param {Module} parent The module containing the `require` call\n * @param {boolean} isMain Whether the module is the main entry point\n * @param {ResolveFilenameOptions} options Options object\n * @typedef {object} ResolveFilenameOptions\n * @property {string[]} paths Paths to search for modules in\n */\nModule._resolveFilename = function(request\x2C parent\x2C isMain\x2C options) {\n  if (BuiltinModule.normalizeRequirableId(request)) {\n    return request;\n  }\n\n  let paths;\n\n  if (typeof options === 'object' && options !== null) {\n    if (ArrayIsArray(options.paths)) {\n      const isRelative = StringPrototypeStartsWith(request\x2C './') ||\n          StringPrototypeStartsWith(request\x2C '../') ||\n          ((isWindows && StringPrototypeStartsWith(request\x2C '.\\\\')) ||\n          StringPrototypeStartsWith(request\x2C '..\\\\'));\n\n      if (isRelative) {\n        paths = options.paths;\n      } else {\n        const fakeParent = new Module(''\x2C null);\n\n        paths = [];\n\n        for (let i = 0; i < options.paths.length; i++) {\n          const path = options.paths[i];\n          fakeParent.paths = Module._nodeModulePaths(path);\n          const lookupPaths = Module._resolveLookupPaths(request\x2C fakeParent);\n\n          for (let j = 0; j < lookupPaths.length; j++) {\n            if (!ArrayPrototypeIncludes(paths\x2C lookupPaths[j])) {\n              ArrayPrototypePush(paths\x2C lookupPaths[j]);\n            }\n          }\n        }\n      }\n    } else if (options.paths === undefined) {\n      paths = Module._resolveLookupPaths(request\x2C parent);\n    } else {\n      throw new ERR_INVALID_ARG_VALUE('options.paths'\x2C options.paths);\n    }\n  } else {\n    paths = Module._resolveLookupPaths(request\x2C parent);\n  }\n\n  if (request[0] === '#' && (parent?.filename || parent?.id === '<repl>')) {\n    const parentPath = parent?.filename ?? process.cwd() + path.sep;\n    const pkg = packageJsonReader.getNearestParentPackageJSON(parentPath) || { __proto__: null };\n    if (pkg.data?.imports != null) {\n      try {\n        const { packageImportsResolve } = require('internal/modules/esm/resolve');\n        return finalizeEsmResolution(\n          packageImportsResolve(request\x2C pathToFileURL(parentPath)\x2C\n                                getCjsConditions())\x2C parentPath\x2C\n          pkg.path);\n      } catch (e) {\n        if (e.code === 'ERR_MODULE_NOT_FOUND') {\n          throw createEsmNotFoundErr(request);\n        }\n        throw e;\n      }\n    }\n  }\n\n  // Try module self resolution first\n  const parentPath = trySelfParentPath(parent);\n  const selfResolved = trySelf(parentPath\x2C request);\n  if (selfResolved) {\n    const cacheKey = request + '\\x00' +\n         (paths.length === 1 ? paths[0] : ArrayPrototypeJoin(paths\x2C '\\x00'));\n    Module._pathCache[cacheKey] = selfResolved;\n    return selfResolved;\n  }\n\n  // Look up the filename first\x2C since that's the cache key.\n  const filename = Module._findPath(request\x2C paths\x2C isMain);\n  if (filename) { return filename; }\n  const requireStack = [];\n  for (let cursor = parent;\n    cursor;\n    cursor = moduleParentCache.get(cursor)) {\n    ArrayPrototypePush(requireStack\x2C cursor.filename || cursor.id);\n  }\n  let message = `Cannot find module '${request}'`;\n  if (requireStack.length > 0) {\n    message = message + '\\nRequire stack:\\n- ' +\n              ArrayPrototypeJoin(requireStack\x2C '\\n- ');\n  }\n  // eslint-disable-next-line no-restricted-syntax\n  const err = new Error(message);\n  err.code = 'MODULE_NOT_FOUND';\n  err.requireStack = requireStack;\n  throw err;\n};\n\n/**\n * Finishes resolving an ES module specifier into an absolute file path.\n * @param {string} resolved The resolved module specifier\n * @param {string} parentPath The path of the parent module\n * @param {string} pkgPath The path of the package.json file\n * @throws {ERR_INVALID_MODULE_SPECIFIER} If the resolved module specifier contains encoded `/` or `\\\\` characters\n * @throws {Error} If the module cannot be found\n */\nfunction finalizeEsmResolution(resolved\x2C parentPath\x2C pkgPath) {\n  const { encodedSepRegEx } = require('internal/modules/esm/resolve');\n  if (RegExpPrototypeExec(encodedSepRegEx\x2C resolved) !== null) {\n    throw new ERR_INVALID_MODULE_SPECIFIER(\n      resolved\x2C 'must not include encoded "/" or "\\\\" characters'\x2C parentPath);\n  }\n  const filename = fileURLToPath(resolved);\n  const actual = tryFile(filename);\n  if (actual) {\n    return actual;\n  }\n  const err = createEsmNotFoundErr(filename\x2C\n                                   path.resolve(pkgPath\x2C 'package.json'));\n  throw err;\n}\n\n/**\n * Creates an error object for when a requested ES module cannot be found.\n * @param {string} request The name of the requested module\n * @param {string} [path] The path to the requested module\n */\nfunction createEsmNotFoundErr(request\x2C path) {\n  // eslint-disable-next-line no-restricted-syntax\n  const err = new Error(`Cannot find module '${request}'`);\n  err.code = 'MODULE_NOT_FOUND';\n  if (path) {\n    err.path = path;\n  }\n  // TODO(BridgeAR): Add the requireStack as well.\n  return err;\n}\n\n/**\n * Given a file name\x2C pass it to the proper extension handler.\n * @param {string} filename The `require` specifier\n */\nModule.prototype.load = function(filename) {\n  debug('load %j for module %j'\x2C filename\x2C this.id);\n\n  assert(!this.loaded);\n  this.filename = filename;\n  this.paths = Module._nodeModulePaths(path.dirname(filename));\n\n  const extension = findLongestRegisteredExtension(filename);\n  // allow .mjs to be overridden\n  if (StringPrototypeEndsWith(filename\x2C '.mjs') && !Module._extensions['.mjs']) {\n    throw new ERR_REQUIRE_ESM(filename\x2C true);\n  }\n\n  Module._extensions[extension](this\x2C filename);\n  this.loaded = true;\n\n  // Create module entry at load time to snapshot exports correctly\n  const exports = this.exports;\n  // Preemptively cache for ESM loader.\n  if (!cjsExportsCache.has(this)) {\n    cjsExportsCache.set(this\x2C exports);\n  }\n};\n\n/**\n * Loads a module at the given file path. Returns that module's `exports` property.\n * Note: when using the experimental policy mechanism this function is overridden.\n * @param {string} id\n * @throws {ERR_INVALID_ARG_TYPE} When `id` is not a string\n */\nModule.prototype.require = function(id) {\n  validateString(id\x2C 'id');\n  if (id === '') {\n    throw new ERR_INVALID_ARG_VALUE('id'\x2C id\x2C\n                                    'must be a non-empty string');\n  }\n  requireDepth++;\n  try {\n    return Module._load(id\x2C this\x2C /* isMain */ false);\n  } finally {\n    requireDepth--;\n  }\n};\n\n/**\n * Resolved path to `process.argv[1]` will be lazily placed here\n * (needed for setting breakpoint when called with `--inspect-brk`).\n * @type {string | undefined}\n */\nlet resolvedArgv;\nlet hasPausedEntry = false;\n/** @type {import('vm').Script} */\n\n/**\n * Wraps the given content in a script and runs it in a new context.\n * @param {string} filename The name of the file being loaded\n * @param {string} content The content of the file being loaded\n * @param {Module} cjsModuleInstance The CommonJS loader instance\n * @param {object} codeCache The SEA code cache\n */\nfunction wrapSafe(filename\x2C content\x2C cjsModuleInstance\x2C codeCache) {\n  const hostDefinedOptionId = Symbol(`cjs:${filename}`);\n  async function importModuleDynamically(specifier\x2C _\x2C importAttributes) {\n    const cascadedLoader = getCascadedLoader();\n    return cascadedLoader.import(specifier\x2C normalizeReferrerURL(filename)\x2C\n                                 importAttributes);\n  }\n  if (patched) {\n    const wrapped = Module.wrap(content);\n    const script = makeContextifyScript(\n      wrapped\x2C                 // code\n      filename\x2C                // filename\n      0\x2C                       // lineOffset\n      0\x2C                       // columnOffset\n      undefined\x2C               // cachedData\n      false\x2C                   // produceCachedData\n      undefined\x2C               // parsingContext\n      hostDefinedOptionId\x2C     // hostDefinedOptionId\n      importModuleDynamically\x2C // importModuleDynamically\n    );\n\n    // Cache the source map for the module if present.\n    if (script.sourceMapURL) {\n      maybeCacheSourceMap(filename\x2C content\x2C this\x2C false\x2C undefined\x2C script.sourceMapURL);\n    }\n\n    return runScriptInThisContext(script\x2C true\x2C false);\n  }\n\n  const params = [ 'exports'\x2C 'require'\x2C 'module'\x2C '__filename'\x2C '__dirname' ];\n  try {\n    const result = internalCompileFunction(\n      content\x2C                           // code\x2C\n      filename\x2C                          // filename\n      0\x2C                                 // lineOffset\n      0\x2C                                 // columnOffset\x2C\n      codeCache\x2C                         // cachedData\n      false\x2C                             // produceCachedData\n      undefined\x2C                         // parsingContext\n      undefined\x2C                         // contextExtensions\n      params\x2C                            // params\n      hostDefinedOptionId\x2C               // hostDefinedOptionId\n      importModuleDynamically\x2C           // importModuleDynamically\n    );\n\n    // The code cache is used for SEAs only.\n    if (codeCache &&\n        result.cachedDataRejected !== false &&\n        internalBinding('sea').isSea()) {\n      process.emitWarning('Code cache data rejected.');\n    }\n\n    // Cache the source map for the module if present.\n    if (result.sourceMapURL) {\n      maybeCacheSourceMap(filename\x2C content\x2C this\x2C false\x2C undefined\x2C result.sourceMapURL);\n    }\n\n    return result.function;\n  } catch (err) {\n    if (process.mainModule === cjsModuleInstance) {\n      const { enrichCJSError } = require('internal/modules/esm/translators');\n      enrichCJSError(err\x2C content\x2C filename);\n    }\n    throw err;\n  }\n}\n\n/**\n * Run the file contents in the correct scope or sandbox. Expose the correct helper variables (`require`\x2C `module`\x2C\n * `exports`) to the file. Returns exception\x2C if any.\n * @param {string} content The source code of the module\n * @param {string} filename The file path of the module\n */\nModule.prototype._compile = function(content\x2C filename) {\n  let moduleURL;\n  let redirects;\n  const manifest = policy()?.manifest;\n  if (manifest) {\n    moduleURL = pathToFileURL(filename);\n    redirects = manifest.getDependencyMapper(moduleURL);\n    manifest.assertIntegrity(moduleURL\x2C content);\n  }\n\n  const compiledWrapper = wrapSafe(filename\x2C content\x2C this);\n\n  let inspectorWrapper = null;\n  if (getOptionValue('--inspect-brk') && process._eval == null) {\n    if (!resolvedArgv) {\n      // We enter the repl if we're not given a filename argument.\n      if (process.argv[1]) {\n        try {\n          resolvedArgv = Module._resolveFilename(process.argv[1]\x2C null\x2C false);\n        } catch {\n          // We only expect this codepath to be reached in the case of a\n          // preloaded module (it will fail earlier with the main entry)\n          assert(ArrayIsArray(getOptionValue('--require')));\n        }\n      } else {\n        resolvedArgv = 'repl';\n      }\n    }\n\n    // Set breakpoint on module start\n    if (resolvedArgv && !hasPausedEntry && filename === resolvedArgv) {\n      hasPausedEntry = true;\n      inspectorWrapper = internalBinding('inspector').callAndPauseOnStart;\n    }\n  }\n  const dirname = path.dirname(filename);\n  const require = makeRequireFunction(this\x2C redirects);\n  let result;\n  const exports = this.exports;\n  const thisValue = exports;\n  const module = this;\n  if (requireDepth === 0) { statCache = new SafeMap(); }\n  if (inspectorWrapper) {\n    result = inspectorWrapper(compiledWrapper\x2C thisValue\x2C exports\x2C\n                              require\x2C module\x2C filename\x2C dirname);\n  } else {\n    result = ReflectApply(compiledWrapper\x2C thisValue\x2C\n                          [exports\x2C require\x2C module\x2C filename\x2C dirname]);\n  }\n  hasLoadedAnyUserCJSModule = true;\n  if (requireDepth === 0) { statCache = null; }\n  return result;\n};\n\n/**\n * Native handler for `.js` files.\n * @param {Module} module The module to compile\n * @param {string} filename The file path of the module\n */\nModule._extensions['.js'] = function(module\x2C filename) {\n  // If already analyzed the source\x2C then it will be cached.\n  const cached = cjsParseCache.get(module);\n  let content;\n  if (cached?.source) {\n    content = cached.source;\n    cached.source = undefined;\n  } else {\n    content = fs.readFileSync(filename\x2C 'utf8');\n  }\n  if (StringPrototypeEndsWith(filename\x2C '.js')) {\n    const pkg = packageJsonReader.getNearestParentPackageJSON(filename);\n    // Function require shouldn't be used in ES modules.\n    if (pkg?.data.type === 'module') {\n      // This is an error path because `require` of a `.js` file in a `"type": "module"` scope is not allowed.\n      const parent = moduleParentCache.get(module);\n      const parentPath = parent?.filename;\n      const packageJsonPath = path.resolve(pkg.path\x2C 'package.json');\n      const usesEsm = containsModuleSyntax(content\x2C filename);\n      const err = new ERR_REQUIRE_ESM(filename\x2C usesEsm\x2C parentPath\x2C\n                                      packageJsonPath);\n      // Attempt to reconstruct the parent require frame.\n      if (Module._cache[parentPath]) {\n        let parentSource;\n        try {\n          parentSource = fs.readFileSync(parentPath\x2C 'utf8');\n        } catch {\n          // Continue regardless of error.\n        }\n        if (parentSource) {\n          const errLine = StringPrototypeSplit(\n            StringPrototypeSlice(err.stack\x2C StringPrototypeIndexOf(\n              err.stack\x2C '    at '))\x2C '\\n'\x2C 1)[0];\n          const { 1: line\x2C 2: col } =\n              RegExpPrototypeExec(/(\\d+):(\\d+)\\)/\x2C errLine) || [];\n          if (line && col) {\n            const srcLine = StringPrototypeSplit(parentSource\x2C '\\n')[line - 1];\n            const frame = `${parentPath}:${line}\\n${srcLine}\\n${\n              StringPrototypeRepeat(' '\x2C col - 1)}^\\n`;\n            setArrowMessage(err\x2C frame);\n          }\n        }\n      }\n      throw err;\n    }\n  }\n  module._compile(content\x2C filename);\n};\n\n/**\n * Native handler for `.json` files.\n * @param {Module} module The module to compile\n * @param {string} filename The file path of the module\n */\nModule._extensions['.json'] = function(module\x2C filename) {\n  const content = fs.readFileSync(filename\x2C 'utf8');\n\n  const manifest = policy()?.manifest;\n  if (manifest) {\n    const moduleURL = pathToFileURL(filename);\n    manifest.assertIntegrity(moduleURL\x2C content);\n  }\n\n  try {\n    setOwnProperty(module\x2C 'exports'\x2C JSONParse(stripBOM(content)));\n  } catch (err) {\n    err.message = filename + ': ' + err.message;\n    throw err;\n  }\n};\n\n/**\n * Native handler for `.node` files.\n * @param {Module} module The module to compile\n * @param {string} filename The file path of the module\n */\nModule._extensions['.node'] = function(module\x2C filename) {\n  const manifest = policy()?.manifest;\n  if (manifest) {\n    const content = fs.readFileSync(filename);\n    const moduleURL = pathToFileURL(filename);\n    manifest.assertIntegrity(moduleURL\x2C content);\n  }\n  // Be aware this doesn't use `content`\n  return process.dlopen(module\x2C path.toNamespacedPath(filename));\n};\n\n/**\n * Creates a `require` function that can be used to load modules from the specified path.\n * @param {string} filename The path to the module\n */\nfunction createRequireFromPath(filename) {\n  // Allow a directory to be passed as the filename\n  const trailingSlash =\n    StringPrototypeEndsWith(filename\x2C '/') ||\n    (isWindows && StringPrototypeEndsWith(filename\x2C '\\\\'));\n\n  const proxyPath = trailingSlash ?\n    path.join(filename\x2C 'noop.js') :\n    filename;\n\n  const m = new Module(proxyPath);\n  m.filename = proxyPath;\n\n  m.paths = Module._nodeModulePaths(m.path);\n  return makeRequireFunction(m\x2C null);\n}\n\nconst createRequireError = 'must be a file URL object\x2C file URL string\x2C or ' +\n  'absolute path string';\n\n/**\n * Creates a new `require` function that can be used to load modules.\n * @param {string | URL} filename The path or URL to the module context for this `require`\n * @throws {ERR_INVALID_ARG_VALUE} If `filename` is not a string or URL\x2C or if it is a relative path that cannot be\n * resolved to an absolute path.\n */\nfunction createRequire(filename) {\n  let filepath;\n\n  if (isURL(filename) ||\n      (typeof filename === 'string' && !path.isAbsolute(filename))) {\n    try {\n      filepath = fileURLToPath(filename);\n    } catch {\n      throw new ERR_INVALID_ARG_VALUE('filename'\x2C filename\x2C\n                                      createRequireError);\n    }\n  } else if (typeof filename !== 'string') {\n    throw new ERR_INVALID_ARG_VALUE('filename'\x2C filename\x2C createRequireError);\n  } else {\n    filepath = filename;\n  }\n  return createRequireFromPath(filepath);\n}\n\nModule.createRequire = createRequire;\n\n/**\n * Define the paths to use for resolving a module.\n */\nModule._initPaths = function() {\n  const homeDir = isWindows ? process.env.USERPROFILE : safeGetenv('HOME');\n  const nodePath = isWindows ? process.env.NODE_PATH : safeGetenv('NODE_PATH');\n\n  // process.execPath is $PREFIX/bin/node except on Windows where it is\n  // $PREFIX\\node.exe where $PREFIX is the root of the Node.js installation.\n  const prefixDir = isWindows ?\n    path.resolve(process.execPath\x2C '..') :\n    path.resolve(process.execPath\x2C '..'\x2C '..');\n\n  const paths = [path.resolve(prefixDir\x2C 'lib'\x2C 'node')];\n\n  if (homeDir) {\n    ArrayPrototypeUnshift(paths\x2C path.resolve(homeDir\x2C '.node_libraries'));\n    ArrayPrototypeUnshift(paths\x2C path.resolve(homeDir\x2C '.node_modules'));\n  }\n\n  if (nodePath) {\n    ArrayPrototypeUnshiftApply(paths\x2C ArrayPrototypeFilter(\n      StringPrototypeSplit(nodePath\x2C path.delimiter)\x2C\n      Boolean\x2C\n    ));\n  }\n\n  modulePaths = paths;\n\n  // Clone as a shallow copy\x2C for introspection.\n  Module.globalPaths = ArrayPrototypeSlice(modulePaths);\n};\n\n/**\n * Handle modules loaded via `--require`.\n * @param {string[]} requests The values of `--require`\n */\nModule._preloadModules = function(requests) {\n  if (!ArrayIsArray(requests)) { return; }\n\n  isPreloading = true;\n\n  // Preloaded modules have a dummy parent module which is deemed to exist\n  // in the current working directory. This seeds the search path for\n  // preloaded modules.\n  const parent = new Module('internal/preload'\x2C null);\n  try {\n    parent.paths = Module._nodeModulePaths(process.cwd());\n  } catch (e) {\n    if (e.code !== 'ENOENT') {\n      isPreloading = false;\n      throw e;\n    }\n  }\n  for (let n = 0; n < requests.length; n++) {\n    internalRequire(parent\x2C requests[n]);\n  }\n  isPreloading = false;\n};\n\n/**\n * If the user has overridden an export from a builtin module\x2C this function can ensure that the override is used in\n * both CommonJS and ES module contexts.\n */\nModule.syncBuiltinESMExports = function syncBuiltinESMExports() {\n  for (const mod of BuiltinModule.map.values()) {\n    if (BuiltinModule.canBeRequiredWithoutScheme(mod.id)) {\n      mod.syncExports();\n    }\n  }\n};\n\nObjectDefineProperty(Module.prototype\x2C 'constructor'\x2C {\n  __proto__: null\x2C\n  get: function() {\n    return policy() ? undefined : Module;\n  }\x2C\n  configurable: false\x2C\n  enumerable: false\x2C\n});\n\n// Backwards compatibility\nModule.Module = Module;\n
code-source-info,0x72b211d764,63,10778,11256,C0O10880C5O10894C10O10894C15O10940C20O10964C23O10964C27O10962C31O10997C36O10997C39O11027C44O11032C48O11052C54O11080C57O11087C62O11087C66O11174C75O11195C80O11231C84O11189C89O11255,,
tick,0x7ff809303aef,55668,0,0x0,3,0x109ba30d0,0x72b211d614,0x72b211d4d1,0x72b2102ef7,0x723b73ff14,0x723b73f9b2
tick,0x7ff8091b896d,55687,0,0x0,3,0x109ba30d0,0x72b211d614,0x72b211d4d1,0x72b2102ef7,0x723b73ff14,0x723b73f9b2
tick,0x7ff809250f8b,55695,0,0x0,3,0x109ba30d0,0x72b211d614,0x72b211d4d1,0x72b2102ef7,0x723b73ff14,0x723b73f9b2
code-creation,JS,10,55709,0x72b2120b3c,19,getCanBeRequiredByUsersWithoutSchemeList node:internal/bootstrap/realm:318:50,0x7220774518,~
code-source-info,0x72b2120b3c,9,10200,10269,C0O10209C11O10226C14O10216C18O10265,,
code-creation,JS,10,55803,0x72b2120c24,13,desc.value node:internal/per_context/primordials:388:32,0x7220772020,~
script-source,6,node:internal/per_context/primordials,'use strict';\n\n/* eslint-disable node-core/prefer-primordials */\n\n// This file subclasses and stores the JS builtins that come from the VM\n// so that Node.js's builtin modules do not need to later look these up from\n// the global proxy\x2C which can be mutated by users.\n\n// Use of primordials have sometimes a dramatic impact on performance\x2C please\n// benchmark all changes made in performance-sensitive areas of the codebase.\n// See: https://github.com/nodejs/node/pull/38248\n\nconst {\n  defineProperty: ReflectDefineProperty\x2C\n  getOwnPropertyDescriptor: ReflectGetOwnPropertyDescriptor\x2C\n  ownKeys: ReflectOwnKeys\x2C\n} = Reflect;\n\n// `uncurryThis` is equivalent to `func => Function.prototype.call.bind(func)`.\n// It is using `bind.bind(call)` to avoid using `Function.prototype.bind`\n// and `Function.prototype.call` after it may have been mutated by users.\nconst { apply\x2C bind\x2C call } = Function.prototype;\nconst uncurryThis = bind.bind(call);\nprimordials.uncurryThis = uncurryThis;\n\n// `applyBind` is equivalent to `func => Function.prototype.apply.bind(func)`.\n// It is using `bind.bind(apply)` to avoid using `Function.prototype.bind`\n// and `Function.prototype.apply` after it may have been mutated by users.\nconst applyBind = bind.bind(apply);\nprimordials.applyBind = applyBind;\n\n// Methods that accept a variable number of arguments\x2C and thus it's useful to\n// also create `${prefix}${key}Apply`\x2C which uses `Function.prototype.apply`\x2C\n// instead of `Function.prototype.call`\x2C and thus doesn't require iterator\n// destructuring.\nconst varargsMethods = [\n  // 'ArrayPrototypeConcat' is omitted\x2C because it performs the spread\n  // on its own for arrays and array-likes with a truthy\n  // @@isConcatSpreadable symbol property.\n  'ArrayOf'\x2C\n  'ArrayPrototypePush'\x2C\n  'ArrayPrototypeUnshift'\x2C\n  // 'FunctionPrototypeCall' is omitted\x2C since there's 'ReflectApply'\n  // and 'FunctionPrototypeApply'.\n  'MathHypot'\x2C\n  'MathMax'\x2C\n  'MathMin'\x2C\n  'StringFromCharCode'\x2C\n  'StringFromCodePoint'\x2C\n  'StringPrototypeConcat'\x2C\n  'TypedArrayOf'\x2C\n];\n\nfunction getNewKey(key) {\n  return typeof key === 'symbol' ?\n    `Symbol${key.description[7].toUpperCase()}${key.description.slice(8)}` :\n    `${key[0].toUpperCase()}${key.slice(1)}`;\n}\n\nfunction copyAccessor(dest\x2C prefix\x2C key\x2C { enumerable\x2C get\x2C set }) {\n  ReflectDefineProperty(dest\x2C `${prefix}Get${key}`\x2C {\n    __proto__: null\x2C\n    value: uncurryThis(get)\x2C\n    enumerable\x2C\n  });\n  if (set !== undefined) {\n    ReflectDefineProperty(dest\x2C `${prefix}Set${key}`\x2C {\n      __proto__: null\x2C\n      value: uncurryThis(set)\x2C\n      enumerable\x2C\n    });\n  }\n}\n\nfunction copyPropsRenamed(src\x2C dest\x2C prefix) {\n  for (const key of ReflectOwnKeys(src)) {\n    const newKey = getNewKey(key);\n    const desc = ReflectGetOwnPropertyDescriptor(src\x2C key);\n    if ('get' in desc) {\n      copyAccessor(dest\x2C prefix\x2C newKey\x2C desc);\n    } else {\n      const name = `${prefix}${newKey}`;\n      ReflectDefineProperty(dest\x2C name\x2C { __proto__: null\x2C ...desc });\n      if (varargsMethods.includes(name)) {\n        ReflectDefineProperty(dest\x2C `${name}Apply`\x2C {\n          __proto__: null\x2C\n          // `src` is bound as the `this` so that the static `this` points\n          // to the object it was defined on\x2C\n          // e.g.: `ArrayOfApply` gets a `this` of `Array`:\n          value: applyBind(desc.value\x2C src)\x2C\n        });\n      }\n    }\n  }\n}\n\nfunction copyPropsRenamedBound(src\x2C dest\x2C prefix) {\n  for (const key of ReflectOwnKeys(src)) {\n    const newKey = getNewKey(key);\n    const desc = ReflectGetOwnPropertyDescriptor(src\x2C key);\n    if ('get' in desc) {\n      copyAccessor(dest\x2C prefix\x2C newKey\x2C desc);\n    } else {\n      const { value } = desc;\n      if (typeof value === 'function') {\n        desc.value = value.bind(src);\n      }\n\n      const name = `${prefix}${newKey}`;\n      ReflectDefineProperty(dest\x2C name\x2C { __proto__: null\x2C ...desc });\n      if (varargsMethods.includes(name)) {\n        ReflectDefineProperty(dest\x2C `${name}Apply`\x2C {\n          __proto__: null\x2C\n          value: applyBind(value\x2C src)\x2C\n        });\n      }\n    }\n  }\n}\n\nfunction copyPrototype(src\x2C dest\x2C prefix) {\n  for (const key of ReflectOwnKeys(src)) {\n    const newKey = getNewKey(key);\n    const desc = ReflectGetOwnPropertyDescriptor(src\x2C key);\n    if ('get' in desc) {\n      copyAccessor(dest\x2C prefix\x2C newKey\x2C desc);\n    } else {\n      const { value } = desc;\n      if (typeof value === 'function') {\n        desc.value = uncurryThis(value);\n      }\n\n      const name = `${prefix}${newKey}`;\n      ReflectDefineProperty(dest\x2C name\x2C { __proto__: null\x2C ...desc });\n      if (varargsMethods.includes(name)) {\n        ReflectDefineProperty(dest\x2C `${name}Apply`\x2C {\n          __proto__: null\x2C\n          value: applyBind(value)\x2C\n        });\n      }\n    }\n  }\n}\n\n// Create copies of configurable value properties of the global object\n[\n  'Proxy'\x2C\n  'globalThis'\x2C\n].forEach((name) => {\n  // eslint-disable-next-line no-restricted-globals\n  primordials[name] = globalThis[name];\n});\n\n// Create copies of URI handling functions\n[\n  decodeURI\x2C\n  decodeURIComponent\x2C\n  encodeURI\x2C\n  encodeURIComponent\x2C\n].forEach((fn) => {\n  primordials[fn.name] = fn;\n});\n\n// Create copies of legacy functions\n[\n  escape\x2C\n  eval\x2C\n  unescape\x2C\n].forEach((fn) => {\n  primordials[fn.name] = fn;\n});\n\n// Create copies of the namespace objects\n[\n  'Atomics'\x2C\n  'JSON'\x2C\n  'Math'\x2C\n  'Proxy'\x2C\n  'Reflect'\x2C\n].forEach((name) => {\n  // eslint-disable-next-line no-restricted-globals\n  copyPropsRenamed(globalThis[name]\x2C primordials\x2C name);\n});\n\n// Create copies of intrinsic objects\n[\n  'AggregateError'\x2C\n  'Array'\x2C\n  'ArrayBuffer'\x2C\n  'BigInt'\x2C\n  'BigInt64Array'\x2C\n  'BigUint64Array'\x2C\n  'Boolean'\x2C\n  'DataView'\x2C\n  'Date'\x2C\n  'Error'\x2C\n  'EvalError'\x2C\n  'FinalizationRegistry'\x2C\n  'Float32Array'\x2C\n  'Float64Array'\x2C\n  'Function'\x2C\n  'Int16Array'\x2C\n  'Int32Array'\x2C\n  'Int8Array'\x2C\n  'Map'\x2C\n  'Number'\x2C\n  'Object'\x2C\n  'RangeError'\x2C\n  'ReferenceError'\x2C\n  'RegExp'\x2C\n  'Set'\x2C\n  'String'\x2C\n  'Symbol'\x2C\n  'SyntaxError'\x2C\n  'TypeError'\x2C\n  'URIError'\x2C\n  'Uint16Array'\x2C\n  'Uint32Array'\x2C\n  'Uint8Array'\x2C\n  'Uint8ClampedArray'\x2C\n  'WeakMap'\x2C\n  'WeakRef'\x2C\n  'WeakSet'\x2C\n].forEach((name) => {\n  // eslint-disable-next-line no-restricted-globals\n  const original = globalThis[name];\n  primordials[name] = original;\n  copyPropsRenamed(original\x2C primordials\x2C name);\n  copyPrototype(original.prototype\x2C primordials\x2C `${name}Prototype`);\n});\n\n// Define Symbol.dispose and Symbol.asyncDispose\n// Until these are defined by the environment.\n// TODO(MoLow): Remove this polyfill once Symbol.dispose and Symbol.asyncDispose are available in V8.\nprimordials.SymbolDispose ??= primordials.SymbolFor('nodejs.dispose');\nprimordials.SymbolAsyncDispose ??= primordials.SymbolFor('nodejs.asyncDispose');\n\n// Create copies of intrinsic objects that require a valid `this` to call\n// static methods.\n// Refs: https://www.ecma-international.org/ecma-262/#sec-promise.all\n[\n  'Promise'\x2C\n].forEach((name) => {\n  // eslint-disable-next-line no-restricted-globals\n  const original = globalThis[name];\n  primordials[name] = original;\n  copyPropsRenamedBound(original\x2C primordials\x2C name);\n  copyPrototype(original.prototype\x2C primordials\x2C `${name}Prototype`);\n});\n\n// Create copies of abstract intrinsic objects that are not directly exposed\n// on the global object.\n// Refs: https://tc39.es/ecma262/#sec-%typedarray%-intrinsic-object\n[\n  { name: 'TypedArray'\x2C original: Reflect.getPrototypeOf(Uint8Array) }\x2C\n  { name: 'ArrayIterator'\x2C original: {\n    prototype: Reflect.getPrototypeOf(Array.prototype[Symbol.iterator]())\x2C\n  } }\x2C\n  { name: 'StringIterator'\x2C original: {\n    prototype: Reflect.getPrototypeOf(String.prototype[Symbol.iterator]())\x2C\n  } }\x2C\n].forEach(({ name\x2C original }) => {\n  primordials[name] = original;\n  // The static %TypedArray% methods require a valid `this`\x2C but can't be bound\x2C\n  // as they need a subclass constructor as the receiver:\n  copyPrototype(original\x2C primordials\x2C name);\n  copyPrototype(original.prototype\x2C primordials\x2C `${name}Prototype`);\n});\n\nprimordials.IteratorPrototype = Reflect.getPrototypeOf(primordials.ArrayIteratorPrototype);\n\n/* eslint-enable node-core/prefer-primordials */\n\nconst {\n  Array: ArrayConstructor\x2C\n  ArrayPrototypeForEach\x2C\n  ArrayPrototypeMap\x2C\n  FinalizationRegistry\x2C\n  FunctionPrototypeCall\x2C\n  Map\x2C\n  ObjectDefineProperties\x2C\n  ObjectDefineProperty\x2C\n  ObjectFreeze\x2C\n  ObjectSetPrototypeOf\x2C\n  Promise\x2C\n  PromisePrototypeThen\x2C\n  PromiseResolve\x2C\n  ReflectApply\x2C\n  ReflectConstruct\x2C\n  ReflectSet\x2C\n  ReflectGet\x2C\n  RegExp\x2C\n  RegExpPrototype\x2C\n  RegExpPrototypeExec\x2C\n  RegExpPrototypeGetDotAll\x2C\n  RegExpPrototypeGetFlags\x2C\n  RegExpPrototypeGetGlobal\x2C\n  RegExpPrototypeGetHasIndices\x2C\n  RegExpPrototypeGetIgnoreCase\x2C\n  RegExpPrototypeGetMultiline\x2C\n  RegExpPrototypeGetSource\x2C\n  RegExpPrototypeGetSticky\x2C\n  RegExpPrototypeGetUnicode\x2C\n  Set\x2C\n  SymbolIterator\x2C\n  SymbolMatch\x2C\n  SymbolMatchAll\x2C\n  SymbolReplace\x2C\n  SymbolSearch\x2C\n  SymbolSpecies\x2C\n  SymbolSplit\x2C\n  WeakMap\x2C\n  WeakRef\x2C\n  WeakSet\x2C\n} = primordials;\n\n\n/**\n * Creates a class that can be safely iterated over.\n *\n * Because these functions are used by `makeSafe`\x2C which is exposed on the\n * `primordials` object\x2C it's important to use const references to the\n * primordials that they use.\n * @template {Iterable} T\n * @template {*} TReturn\n * @template {*} TNext\n * @param {(self: T) => IterableIterator<T>} factory\n * @param {(...args: [] | [TNext]) => IteratorResult<T\x2C TReturn>} next\n * @returns {Iterator<T\x2C TReturn\x2C TNext>}\n */\nconst createSafeIterator = (factory\x2C next) => {\n  class SafeIterator {\n    constructor(iterable) {\n      this._iterator = factory(iterable);\n    }\n    next() {\n      return next(this._iterator);\n    }\n    [SymbolIterator]() {\n      return this;\n    }\n  }\n  ObjectSetPrototypeOf(SafeIterator.prototype\x2C null);\n  ObjectFreeze(SafeIterator.prototype);\n  ObjectFreeze(SafeIterator);\n  return SafeIterator;\n};\n\nprimordials.SafeArrayIterator = createSafeIterator(\n  primordials.ArrayPrototypeSymbolIterator\x2C\n  primordials.ArrayIteratorPrototypeNext\x2C\n);\nprimordials.SafeStringIterator = createSafeIterator(\n  primordials.StringPrototypeSymbolIterator\x2C\n  primordials.StringIteratorPrototypeNext\x2C\n);\n\nconst copyProps = (src\x2C dest) => {\n  ArrayPrototypeForEach(ReflectOwnKeys(src)\x2C (key) => {\n    if (!ReflectGetOwnPropertyDescriptor(dest\x2C key)) {\n      ReflectDefineProperty(\n        dest\x2C\n        key\x2C\n        { __proto__: null\x2C ...ReflectGetOwnPropertyDescriptor(src\x2C key) });\n    }\n  });\n};\n\n/**\n * @type {typeof primordials.makeSafe}\n */\nconst makeSafe = (unsafe\x2C safe) => {\n  if (SymbolIterator in unsafe.prototype) {\n    const dummy = new unsafe();\n    let next; // We can reuse the same `next` method.\n\n    ArrayPrototypeForEach(ReflectOwnKeys(unsafe.prototype)\x2C (key) => {\n      if (!ReflectGetOwnPropertyDescriptor(safe.prototype\x2C key)) {\n        const desc = ReflectGetOwnPropertyDescriptor(unsafe.prototype\x2C key);\n        if (\n          typeof desc.value === 'function' &&\n          desc.value.length === 0 &&\n          SymbolIterator in (FunctionPrototypeCall(desc.value\x2C dummy) ?? {})\n        ) {\n          const createIterator = uncurryThis(desc.value);\n          next ??= uncurryThis(createIterator(dummy).next);\n          const SafeIterator = createSafeIterator(createIterator\x2C next);\n          desc.value = function() {\n            return new SafeIterator(this);\n          };\n        }\n        ReflectDefineProperty(safe.prototype\x2C key\x2C { __proto__: null\x2C ...desc });\n      }\n    });\n  } else {\n    copyProps(unsafe.prototype\x2C safe.prototype);\n  }\n  copyProps(unsafe\x2C safe);\n\n  ObjectSetPrototypeOf(safe.prototype\x2C null);\n  ObjectFreeze(safe.prototype);\n  ObjectFreeze(safe);\n  return safe;\n};\nprimordials.makeSafe = makeSafe;\n\n// Subclass the constructors because we need to use their prototype\n// methods later.\n// Defining the `constructor` is necessary here to avoid the default\n// constructor which uses the user-mutable `%ArrayIteratorPrototype%.next`.\nprimordials.SafeMap = makeSafe(\n  Map\x2C\n  class SafeMap extends Map {\n    constructor(i) { super(i); } // eslint-disable-line no-useless-constructor\n  }\x2C\n);\nprimordials.SafeWeakMap = makeSafe(\n  WeakMap\x2C\n  class SafeWeakMap extends WeakMap {\n    constructor(i) { super(i); } // eslint-disable-line no-useless-constructor\n  }\x2C\n);\n\nprimordials.SafeSet = makeSafe(\n  Set\x2C\n  class SafeSet extends Set {\n    constructor(i) { super(i); } // eslint-disable-line no-useless-constructor\n  }\x2C\n);\nprimordials.SafeWeakSet = makeSafe(\n  WeakSet\x2C\n  class SafeWeakSet extends WeakSet {\n    constructor(i) { super(i); } // eslint-disable-line no-useless-constructor\n  }\x2C\n);\n\nprimordials.SafeFinalizationRegistry = makeSafe(\n  FinalizationRegistry\x2C\n  class SafeFinalizationRegistry extends FinalizationRegistry {\n    // eslint-disable-next-line no-useless-constructor\n    constructor(cleanupCallback) { super(cleanupCallback); }\n  }\x2C\n);\nprimordials.SafeWeakRef = makeSafe(\n  WeakRef\x2C\n  class SafeWeakRef extends WeakRef {\n    // eslint-disable-next-line no-useless-constructor\n    constructor(target) { super(target); }\n  }\x2C\n);\n\nconst SafePromise = makeSafe(\n  Promise\x2C\n  class SafePromise extends Promise {\n    // eslint-disable-next-line no-useless-constructor\n    constructor(executor) { super(executor); }\n  }\x2C\n);\n\n/**\n * Attaches a callback that is invoked when the Promise is settled (fulfilled or\n * rejected). The resolved value cannot be modified from the callback.\n * Prefer using async functions when possible.\n * @param {Promise<any>} thisPromise\n * @param {() => void) | undefined | null} onFinally The callback to execute\n *        when the Promise is settled (fulfilled or rejected).\n * @returns {Promise} A Promise for the completion of the callback.\n */\nprimordials.SafePromisePrototypeFinally = (thisPromise\x2C onFinally) =>\n  // Wrapping on a new Promise is necessary to not expose the SafePromise\n  // prototype to user-land.\n  new Promise((a\x2C b) =>\n    new SafePromise((a\x2C b) => PromisePrototypeThen(thisPromise\x2C a\x2C b))\n      .finally(onFinally)\n      .then(a\x2C b)\x2C\n  );\n\nprimordials.AsyncIteratorPrototype =\n  primordials.ReflectGetPrototypeOf(\n    primordials.ReflectGetPrototypeOf(\n      async function* () {}).prototype);\n\nconst arrayToSafePromiseIterable = (promises\x2C mapFn) =>\n  new primordials.SafeArrayIterator(\n    ArrayPrototypeMap(\n      promises\x2C\n      (promise\x2C i) =>\n        new SafePromise((a\x2C b) => PromisePrototypeThen(mapFn == null ? promise : mapFn(promise\x2C i)\x2C a\x2C b))\x2C\n    )\x2C\n  );\n\n/**\n * @template T\x2CU\n * @param {Array<T | PromiseLike<T>>} promises\n * @param {(v: T|PromiseLike<T>\x2C k: number) => U|PromiseLike<U>} [mapFn]\n * @returns {Promise<Awaited<U>[]>}\n */\nprimordials.SafePromiseAll = (promises\x2C mapFn) =>\n  // Wrapping on a new Promise is necessary to not expose the SafePromise\n  // prototype to user-land.\n  new Promise((a\x2C b) =>\n    SafePromise.all(arrayToSafePromiseIterable(promises\x2C mapFn)).then(a\x2C b)\x2C\n  );\n\n/**\n * Should only be used for internal functions\x2C this would produce similar\n * results as `Promise.all` but without prototype pollution\x2C and the return\n * value is not a genuine Array but an array-like object.\n * @template T\x2CU\n * @param {ArrayLike<T | PromiseLike<T>>} promises\n * @param {(v: T|PromiseLike<T>\x2C k: number) => U|PromiseLike<U>} [mapFn]\n * @returns {Promise<ArrayLike<Awaited<U>>>}\n */\nprimordials.SafePromiseAllReturnArrayLike = (promises\x2C mapFn) =>\n  new Promise((resolve\x2C reject) => {\n    const { length } = promises;\n\n    const returnVal = ArrayConstructor(length);\n    ObjectSetPrototypeOf(returnVal\x2C null);\n    if (length === 0) resolve(returnVal);\n\n    let pendingPromises = length;\n    for (let i = 0; i < length; i++) {\n      const promise = mapFn != null ? mapFn(promises[i]\x2C i) : promises[i];\n      PromisePrototypeThen(PromiseResolve(promise)\x2C (result) => {\n        returnVal[i] = result;\n        if (--pendingPromises === 0) resolve(returnVal);\n      }\x2C reject);\n    }\n  });\n\n/**\n * Should only be used when we only care about waiting for all the promises to\n * resolve\x2C not what value they resolve to.\n * @template T\x2CU\n * @param {ArrayLike<T | PromiseLike<T>>} promises\n * @param {(v: T|PromiseLike<T>\x2C k: number) => U|PromiseLike<U>} [mapFn]\n * @returns {Promise<void>}\n */\nprimordials.SafePromiseAllReturnVoid = (promises\x2C mapFn) =>\n  new Promise((resolve\x2C reject) => {\n    let pendingPromises = promises.length;\n    if (pendingPromises === 0) resolve();\n    const onFulfilled = () => {\n      if (--pendingPromises === 0) {\n        resolve();\n      }\n    };\n    for (let i = 0; i < promises.length; i++) {\n      const promise = mapFn != null ? mapFn(promises[i]\x2C i) : promises[i];\n      PromisePrototypeThen(PromiseResolve(promise)\x2C onFulfilled\x2C reject);\n    }\n  });\n\n/**\n * @template T\x2CU\n * @param {Array<T|PromiseLike<T>>} promises\n * @param {(v: T|PromiseLike<T>\x2C k: number) => U|PromiseLike<U>} [mapFn]\n * @returns {Promise<PromiseSettledResult<any>[]>}\n */\nprimordials.SafePromiseAllSettled = (promises\x2C mapFn) =>\n  // Wrapping on a new Promise is necessary to not expose the SafePromise\n  // prototype to user-land.\n  new Promise((a\x2C b) =>\n    SafePromise.allSettled(arrayToSafePromiseIterable(promises\x2C mapFn)).then(a\x2C b)\x2C\n  );\n\n/**\n * Should only be used when we only care about waiting for all the promises to\n * settle\x2C not what value they resolve or reject to.\n * @template T\x2CU\n * @param {ArrayLike<T|PromiseLike<T>>} promises\n * @param {(v: T|PromiseLike<T>\x2C k: number) => U|PromiseLike<U>} [mapFn]\n * @returns {Promise<void>}\n */\nprimordials.SafePromiseAllSettledReturnVoid = (promises\x2C mapFn) => new Promise((resolve) => {\n  let pendingPromises = promises.length;\n  if (pendingPromises === 0) resolve();\n  const onSettle = () => {\n    if (--pendingPromises === 0) resolve();\n  };\n  for (let i = 0; i < promises.length; i++) {\n    const promise = mapFn != null ? mapFn(promises[i]\x2C i) : promises[i];\n    PromisePrototypeThen(PromiseResolve(promise)\x2C onSettle\x2C onSettle);\n  }\n});\n\n/**\n * @template T\x2CU\n * @param {Array<T|PromiseLike<T>>} promises\n * @param {(v: T|PromiseLike<T>\x2C k: number) => U|PromiseLike<U>} [mapFn]\n * @returns {Promise<Awaited<U>>}\n */\nprimordials.SafePromiseAny = (promises\x2C mapFn) =>\n  // Wrapping on a new Promise is necessary to not expose the SafePromise\n  // prototype to user-land.\n  new Promise((a\x2C b) =>\n    SafePromise.any(arrayToSafePromiseIterable(promises\x2C mapFn)).then(a\x2C b)\x2C\n  );\n\n/**\n * @template T\x2CU\n * @param {Array<T|PromiseLike<T>>} promises\n * @param {(v: T|PromiseLike<T>\x2C k: number) => U|PromiseLike<U>} [mapFn]\n * @returns {Promise<Awaited<U>>}\n */\nprimordials.SafePromiseRace = (promises\x2C mapFn) =>\n  // Wrapping on a new Promise is necessary to not expose the SafePromise\n  // prototype to user-land.\n  new Promise((a\x2C b) =>\n    SafePromise.race(arrayToSafePromiseIterable(promises\x2C mapFn)).then(a\x2C b)\x2C\n  );\n\n\nconst {\n  exec: OriginalRegExpPrototypeExec\x2C\n  [SymbolMatch]: OriginalRegExpPrototypeSymbolMatch\x2C\n  [SymbolMatchAll]: OriginalRegExpPrototypeSymbolMatchAll\x2C\n  [SymbolReplace]: OriginalRegExpPrototypeSymbolReplace\x2C\n  [SymbolSearch]: OriginalRegExpPrototypeSymbolSearch\x2C\n  [SymbolSplit]: OriginalRegExpPrototypeSymbolSplit\x2C\n} = RegExpPrototype;\n\nclass RegExpLikeForStringSplitting {\n  #regex;\n  constructor() {\n    this.#regex = ReflectConstruct(RegExp\x2C arguments);\n  }\n\n  get lastIndex() {\n    return ReflectGet(this.#regex\x2C 'lastIndex');\n  }\n  set lastIndex(value) {\n    ReflectSet(this.#regex\x2C 'lastIndex'\x2C value);\n  }\n\n  exec() {\n    return ReflectApply(OriginalRegExpPrototypeExec\x2C this.#regex\x2C arguments);\n  }\n}\nObjectSetPrototypeOf(RegExpLikeForStringSplitting.prototype\x2C null);\n\n/**\n * @param {RegExp} pattern\n * @returns {RegExp}\n */\nprimordials.hardenRegExp = function hardenRegExp(pattern) {\n  ObjectDefineProperties(pattern\x2C {\n    [SymbolMatch]: {\n      __proto__: null\x2C\n      configurable: true\x2C\n      value: OriginalRegExpPrototypeSymbolMatch\x2C\n    }\x2C\n    [SymbolMatchAll]: {\n      __proto__: null\x2C\n      configurable: true\x2C\n      value: OriginalRegExpPrototypeSymbolMatchAll\x2C\n    }\x2C\n    [SymbolReplace]: {\n      __proto__: null\x2C\n      configurable: true\x2C\n      value: OriginalRegExpPrototypeSymbolReplace\x2C\n    }\x2C\n    [SymbolSearch]: {\n      __proto__: null\x2C\n      configurable: true\x2C\n      value: OriginalRegExpPrototypeSymbolSearch\x2C\n    }\x2C\n    [SymbolSplit]: {\n      __proto__: null\x2C\n      configurable: true\x2C\n      value: OriginalRegExpPrototypeSymbolSplit\x2C\n    }\x2C\n    constructor: {\n      __proto__: null\x2C\n      configurable: true\x2C\n      value: {\n        [SymbolSpecies]: RegExpLikeForStringSplitting\x2C\n      }\x2C\n    }\x2C\n    dotAll: {\n      __proto__: null\x2C\n      configurable: true\x2C\n      value: RegExpPrototypeGetDotAll(pattern)\x2C\n    }\x2C\n    exec: {\n      __proto__: null\x2C\n      configurable: true\x2C\n      value: OriginalRegExpPrototypeExec\x2C\n    }\x2C\n    global: {\n      __proto__: null\x2C\n      configurable: true\x2C\n      value: RegExpPrototypeGetGlobal(pattern)\x2C\n    }\x2C\n    hasIndices: {\n      __proto__: null\x2C\n      configurable: true\x2C\n      value: RegExpPrototypeGetHasIndices(pattern)\x2C\n    }\x2C\n    ignoreCase: {\n      __proto__: null\x2C\n      configurable: true\x2C\n      value: RegExpPrototypeGetIgnoreCase(pattern)\x2C\n    }\x2C\n    multiline: {\n      __proto__: null\x2C\n      configurable: true\x2C\n      value: RegExpPrototypeGetMultiline(pattern)\x2C\n    }\x2C\n    source: {\n      __proto__: null\x2C\n      configurable: true\x2C\n      value: RegExpPrototypeGetSource(pattern)\x2C\n    }\x2C\n    sticky: {\n      __proto__: null\x2C\n      configurable: true\x2C\n      value: RegExpPrototypeGetSticky(pattern)\x2C\n    }\x2C\n    unicode: {\n      __proto__: null\x2C\n      configurable: true\x2C\n      value: RegExpPrototypeGetUnicode(pattern)\x2C\n    }\x2C\n  });\n  ObjectDefineProperty(pattern\x2C 'flags'\x2C {\n    __proto__: null\x2C\n    configurable: true\x2C\n    value: RegExpPrototypeGetFlags(pattern)\x2C\n  });\n  return pattern;\n};\n\n\n/**\n * @param {string} str\n * @param {RegExp} regexp\n * @returns {number}\n */\nprimordials.SafeStringPrototypeSearch = (str\x2C regexp) => {\n  regexp.lastIndex = 0;\n  const match = RegExpPrototypeExec(regexp\x2C str);\n  return match ? match.index : -1;\n};\n\nObjectSetPrototypeOf(primordials\x2C null);\nObjectFreeze(primordials);\n
code-source-info,0x72b2120c24,6,11260,11319,C0O11277C7O11284C12O11307,,
tick,0x7ff8091b896d,57446,0,0x0,3,0x109ba30d0,0x109ff9976,0x72b2120b4a,0x72b211d76e,0x72b211d614,0x72b211d4d1,0x72b2102ef7,0x723b73ff14,0x723b73f9b2
code-creation,JS,10,57468,0x72b21224bc,13,SafeIterator node:internal/per_context/primordials:333:16,0x7220771758,~
code-source-info,0x72b21224bc,6,9523,9583,C0O9542C3O9559C7O9557C12O9582,,
tick,0x109ad4e90,57532,0,0x0,2,0x109ba30d0,0x109ff9a2a,0x72b2120b4a,0x72b211d76e,0x72b211d614,0x72b211d4d1,0x72b2102ef7,0x723b73ff14,0x723b73f9b2
code-creation,JS,10,57553,0x72b21226c4,13,next node:internal/per_context/primordials:336:9,0x72207717b0,~
code-source-info,0x72b21226c4,6,9592,9637,C0O9603C3O9620C8O9610C12O9631,,
code-creation,JS,10,57671,0x72b21229b4,156,initializeCjsConditions node:internal/modules/helpers:65:33,0x72e2eb8590,~
script-source,64,node:internal/modules/helpers,'use strict';\n\nconst {\n  ArrayPrototypeForEach\x2C\n  ArrayPrototypeJoin\x2C\n  ObjectDefineProperty\x2C\n  ObjectPrototypeHasOwnProperty\x2C\n  SafeMap\x2C\n  SafeSet\x2C\n  StringPrototypeCharCodeAt\x2C\n  StringPrototypeIncludes\x2C\n  StringPrototypeSlice\x2C\n  StringPrototypeStartsWith\x2C\n} = primordials;\nconst {\n  ERR_INVALID_ARG_TYPE\x2C\n  ERR_MANIFEST_DEPENDENCY_MISSING\x2C\n  ERR_UNKNOWN_BUILTIN_MODULE\x2C\n} = require('internal/errors').codes;\nconst { BuiltinModule } = require('internal/bootstrap/realm');\n\nconst { validateString } = require('internal/validators');\nconst fs = require('fs'); // Import all of `fs` so that it can be monkey-patched.\nconst internalFS = require('internal/fs/utils');\nconst path = require('path');\nconst { pathToFileURL\x2C fileURLToPath\x2C URL } = require('internal/url');\n\nconst { getOptionValue } = require('internal/options');\nconst { setOwnProperty } = require('internal/util');\n\nconst {\n  privateSymbols: {\n    require_private_symbol\x2C\n  }\x2C\n} = internalBinding('util');\n\nlet debug = require('internal/util/debuglog').debuglog('module'\x2C (fn) => {\n  debug = fn;\n});\n\n/** @typedef {import('internal/modules/cjs/loader.js').Module} Module */\n\n/**\n * Cache for storing resolved real paths of modules.\n * In order to minimize unnecessary lstat() calls\x2C this cache is a list of known-real paths.\n * Set to an empty Map to reset.\n * @type {Map<string\x2C string>}\n */\nconst realpathCache = new SafeMap();\n/**\n * Resolves the path of a given `require` specifier\x2C following symlinks.\n * @param {string} requestPath The `require` specifier\n */\nfunction toRealPath(requestPath) {\n  return fs.realpathSync(requestPath\x2C {\n    [internalFS.realpathCacheKey]: realpathCache\x2C\n  });\n}\n\n/** @type {Set<string>} */\nlet cjsConditions;\n/**\n * Define the conditions that apply to the CommonJS loader.\n */\nfunction initializeCjsConditions() {\n  const userConditions = getOptionValue('--conditions');\n  const noAddons = getOptionValue('--no-addons');\n  const addonConditions = noAddons ? [] : ['node-addons'];\n  // TODO: Use this set when resolving pkg#exports conditions in loader.js.\n  cjsConditions = new SafeSet([\n    'require'\x2C\n    'node'\x2C\n    ...addonConditions\x2C\n    ...userConditions\x2C\n  ]);\n}\n\n/**\n * Get the conditions that apply to the CommonJS loader.\n */\nfunction getCjsConditions() {\n  if (cjsConditions === undefined) {\n    initializeCjsConditions();\n  }\n  return cjsConditions;\n}\n\n/**\n * Provide one of Node.js' public modules to user code.\n * @param {string} id - The identifier/specifier of the builtin module to load\n * @param {string} request - The module requiring or importing the builtin module\n */\nfunction loadBuiltinModule(id\x2C request) {\n  if (!BuiltinModule.canBeRequiredByUsers(id)) {\n    return;\n  }\n  /** @type {import('internal/bootstrap/realm.js').BuiltinModule} */\n  const mod = BuiltinModule.map.get(id);\n  debug('load built-in module %s'\x2C request);\n  // compileForPublicLoader() throws if canBeRequiredByUsers is false:\n  mod.compileForPublicLoader();\n  return mod;\n}\n\n/** @type {Module} */\nlet $Module = null;\n/**\n * Import the Module class on first use.\n */\nfunction lazyModule() {\n  $Module = $Module || require('internal/modules/cjs/loader').Module;\n  return $Module;\n}\n\n/**\n * Invoke with `makeRequireFunction(module)` where `module` is the `Module` object to use as the context for the\n * `require()` function.\n * Use redirects to set up a mapping from a policy and restrict dependencies.\n */\nconst urlToFileCache = new SafeMap();\n/**\n * Create the module-scoped `require` function to pass into CommonJS modules.\n * @param {Module} mod - The module to create the `require` function for.\n * @param {ReturnType<import('internal/policy/manifest.js').Manifest['getDependencyMapper']>} redirects\n * @typedef {(specifier: string) => unknown} RequireFunction\n */\nfunction makeRequireFunction(mod\x2C redirects) {\n  // lazy due to cycle\n  const Module = lazyModule();\n  if (mod instanceof Module !== true) {\n    throw new ERR_INVALID_ARG_TYPE('mod'\x2C 'Module'\x2C mod);\n  }\n\n  /** @type {RequireFunction} */\n  let require;\n  if (redirects) {\n    const id = mod.filename || mod.id;\n    const conditions = getCjsConditions();\n    const { resolve\x2C reaction } = redirects;\n    require = function require(specifier) {\n      let missing = true;\n      const destination = resolve(specifier\x2C conditions);\n      if (destination === true) {\n        missing = false;\n      } else if (destination) {\n        const { href\x2C protocol } = destination;\n        if (protocol === 'node:') {\n          const specifier = destination.pathname;\n\n          if (BuiltinModule.canBeRequiredByUsers(specifier)) {\n            const mod = loadBuiltinModule(specifier\x2C href);\n            return mod.exports;\n          }\n          throw new ERR_UNKNOWN_BUILTIN_MODULE(specifier);\n        } else if (protocol === 'file:') {\n          let filepath = urlToFileCache.get(href);\n          if (!filepath) {\n            filepath = fileURLToPath(destination);\n            urlToFileCache.set(href\x2C filepath);\n          }\n          return mod[require_private_symbol](mod\x2C filepath);\n        }\n      }\n      if (missing) {\n        reaction(new ERR_MANIFEST_DEPENDENCY_MISSING(\n          id\x2C\n          specifier\x2C\n          ArrayPrototypeJoin([...conditions]\x2C '\x2C ')\x2C\n        ));\n      }\n      return mod[require_private_symbol](mod\x2C specifier);\n    };\n  } else {\n    require = function require(path) {\n      // When no policy manifest\x2C the original prototype.require is sustained\n      return mod.require(path);\n    };\n  }\n\n  /**\n   * The `resolve` method that gets attached to module-scope `require`.\n   * @param {string} request\n   * @param {Parameters<Module['_resolveFilename']>[3]} options\n   */\n  function resolve(request\x2C options) {\n    validateString(request\x2C 'request');\n    return Module._resolveFilename(request\x2C mod\x2C false\x2C options);\n  }\n\n  require.resolve = resolve;\n\n  /**\n   * The `paths` method that gets attached to module-scope `require`.\n   * @param {string} request\n   */\n  function paths(request) {\n    validateString(request\x2C 'request');\n    return Module._resolveLookupPaths(request\x2C mod);\n  }\n\n  resolve.paths = paths;\n\n  setOwnProperty(require\x2C 'main'\x2C process.mainModule);\n\n  // Enable support to add extra extension types.\n  require.extensions = Module._extensions;\n\n  require.cache = Module._cache;\n\n  return require;\n}\n\n/**\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\n * because the buffer-to-string conversion in `fs.readFileSync()`\n * translates it to FEFF\x2C the UTF-16 BOM.\n * @param {string} content\n */\nfunction stripBOM(content) {\n  if (StringPrototypeCharCodeAt(content) === 0xFEFF) {\n    content = StringPrototypeSlice(content\x2C 1);\n  }\n  return content;\n}\n\n/**\n * Add built-in modules to a global or REPL scope object.\n * @param {Record<string\x2C unknown>} object - The object such as `globalThis` to add the built-in modules to.\n * @param {string} dummyModuleName - The label representing the set of built-in modules to add.\n */\nfunction addBuiltinLibsToObject(object\x2C dummyModuleName) {\n  // Make built-in modules available directly (loaded lazily).\n  const Module = require('internal/modules/cjs/loader').Module;\n  const { builtinModules } = Module;\n\n  // To require built-in modules in user-land and ignore modules whose\n  // `canBeRequiredByUsers` is false. So we create a dummy module object and not\n  // use `require()` directly.\n  const dummyModule = new Module(dummyModuleName);\n\n  ArrayPrototypeForEach(builtinModules\x2C (name) => {\n    // Neither add underscored modules\x2C nor ones that contain slashes (e.g.\x2C\n    // 'fs/promises') or ones that are already defined.\n    if (StringPrototypeStartsWith(name\x2C '_') ||\n        StringPrototypeIncludes(name\x2C '/') ||\n        ObjectPrototypeHasOwnProperty(object\x2C name)) {\n      return;\n    }\n    // Goals of this mechanism are:\n    // - Lazy loading of built-in modules\n    // - Having all built-in modules available as non-enumerable properties\n    // - Allowing the user to re-assign these variables as if there were no\n    //   pre-existing globals with the same name.\n\n    const setReal = (val) => {\n      // Deleting the property before re-assigning it disables the\n      // getter/setter mechanism.\n      delete object[name];\n      object[name] = val;\n    };\n\n    ObjectDefineProperty(object\x2C name\x2C {\n      __proto__: null\x2C\n      get: () => {\n        const lib = dummyModule.require(name);\n\n        try {\n          // Override the current getter/setter and set up a new\n          // non-enumerable property.\n          ObjectDefineProperty(object\x2C name\x2C {\n            __proto__: null\x2C\n            get: () => lib\x2C\n            set: setReal\x2C\n            configurable: true\x2C\n            enumerable: false\x2C\n          });\n        } catch {\n          // If the property is no longer configurable\x2C ignore the error.\n        }\n\n        return lib;\n      }\x2C\n      set: setReal\x2C\n      configurable: true\x2C\n      enumerable: false\x2C\n    });\n  });\n}\n\n/**\n * If a referrer is an URL instance or absolute path\x2C convert it into an URL string.\n * @param {string | URL} referrer\n */\nfunction normalizeReferrerURL(referrer) {\n  if (typeof referrer === 'string' && path.isAbsolute(referrer)) {\n    return pathToFileURL(referrer).href;\n  }\n  return new URL(referrer).href;\n}\n\nmodule.exports = {\n  addBuiltinLibsToObject\x2C\n  getCjsConditions\x2C\n  initializeCjsConditions\x2C\n  loadBuiltinModule\x2C\n  makeRequireFunction\x2C\n  normalizeReferrerURL\x2C\n  stripBOM\x2C\n  toRealPath\x2C\n};\n
code-source-info,0x72b21229b4,64,1806,2166,C0O1836C8O1836C13O1887C19O1887C24O1944C35O2055C48O2119C93O2143C140O2071C148O2069C155O2165,,
code-creation,JS,10,58286,0x72b2123744,299,Module._initPaths node:internal/modules/cjs/loader:1532:29,0x72e2eb7df0,~
code-source-info,0x72b2123744,63,49558,50515,C0O49581C9O49601C14O49605C22O49619C28O49619C33O49658C40O49678C45O49682C53O49694C59O49694C64O49889C70O49905C73O49910C81O49926C89O49910C99O49948C102O49953C110O49969C121O49953C127O50009C137O50015C151O50015C163O50054C167O50073C175O50107C183O50107C190O50073C195O50149C201O50183C209O50183C216O50149C221O50226C225O50246C232O50280C237O50308C243O50344C248O50308C256O50362C259O50280C265O50246C270O50386C272O50398C278O50459C283O50480C289O50480C293O50478C298O50514,,
code-creation,JS,11,58384,0x10fd84480,260, node:internal/validators:160:40,0x722077dd30,^
code-source-info,0x10fd84480,15,4370,4482,,,
code-creation,JS,11,58408,0x10fd845c0,268,SafeMap node:internal/per_context/primordials:414:16,0x72207721f8,^
code-source-info,0x10fd845c0,6,11988,12005,,,
code-creation,JS,11,58428,0x10fd84700,288,getCLIOptionsFromBinding node:internal/options:18:34,0x72e2e833b8,^
code-source-info,0x10fd84700,17,497,598,,,
code-creation,JS,11,58446,0x10fd84840,504,getOptionValue node:internal/options:44:24,0x72e2e835f0,^
code-source-info,0x10fd84840,17,985,1228,,,
code-creation,JS,11,58466,0x10fd84a80,424,addReadOnlyProcessAlias node:internal/process/pre_execution:270:33,0x72e2eba180,^
code-source-info,0x10fd84a80,67,8732,8981,,,
code-creation,JS,11,58521,0x10fd84c80,132,exposeLazyInterfaces node:internal/util:674:30,0x72e2e827c0,^
script-source,16,node:internal/util,'use strict';\n\nconst {\n  ArrayBufferPrototypeGetByteLength\x2C\n  ArrayFrom\x2C\n  ArrayIsArray\x2C\n  ArrayPrototypePush\x2C\n  ArrayPrototypeSlice\x2C\n  ArrayPrototypeSort\x2C\n  Error\x2C\n  ErrorCaptureStackTrace\x2C\n  FunctionPrototypeCall\x2C\n  ObjectDefineProperties\x2C\n  ObjectDefineProperty\x2C\n  ObjectGetOwnPropertyDescriptor\x2C\n  ObjectGetOwnPropertyDescriptors\x2C\n  ObjectGetPrototypeOf\x2C\n  ObjectFreeze\x2C\n  ObjectPrototypeHasOwnProperty\x2C\n  ObjectSetPrototypeOf\x2C\n  ObjectValues\x2C\n  Promise\x2C\n  ReflectApply\x2C\n  ReflectConstruct\x2C\n  RegExpPrototypeExec\x2C\n  RegExpPrototypeGetDotAll\x2C\n  RegExpPrototypeGetGlobal\x2C\n  RegExpPrototypeGetHasIndices\x2C\n  RegExpPrototypeGetIgnoreCase\x2C\n  RegExpPrototypeGetMultiline\x2C\n  RegExpPrototypeGetSticky\x2C\n  RegExpPrototypeGetUnicode\x2C\n  RegExpPrototypeGetSource\x2C\n  SafeMap\x2C\n  SafeSet\x2C\n  SafeWeakMap\x2C\n  SafeWeakRef\x2C\n  StringPrototypeReplace\x2C\n  StringPrototypeToLowerCase\x2C\n  StringPrototypeToUpperCase\x2C\n  Symbol\x2C\n  SymbolFor\x2C\n  SymbolReplace\x2C\n  SymbolSplit\x2C\n} = primordials;\n\nconst {\n  codes: {\n    ERR_NO_CRYPTO\x2C\n    ERR_UNKNOWN_SIGNAL\x2C\n  }\x2C\n  isErrorStackTraceLimitWritable\x2C\n  uvErrmapGet\x2C\n  overrideStackTrace\x2C\n} = require('internal/errors');\nconst { signals } = internalBinding('constants').os;\nconst {\n  isArrayBufferDetached: _isArrayBufferDetached\x2C\n  guessHandleType: _guessHandleType\x2C\n  privateSymbols: {\n    arrow_message_private_symbol\x2C\n    decorated_private_symbol\x2C\n  }\x2C\n  sleep: _sleep\x2C\n} = internalBinding('util');\nconst { isNativeError\x2C isPromise } = internalBinding('types');\nconst { getOptionValue } = require('internal/options');\n\nconst noCrypto = !process.versions.openssl;\n\nconst experimentalWarnings = new SafeSet();\n\nconst colorRegExp = /\\u001b\\[\\d\\d?m/g; // eslint-disable-line no-control-regex\n\nlet uvBinding;\n\nfunction lazyUv() {\n  uvBinding ??= internalBinding('uv');\n  return uvBinding;\n}\n\nfunction removeColors(str) {\n  return StringPrototypeReplace(str\x2C colorRegExp\x2C '');\n}\n\nfunction isError(e) {\n  // An error could be an instance of Error while not being a native error\n  // or could be from a different realm and not be instance of Error but still\n  // be a native error.\n  return isNativeError(e) || e instanceof Error;\n}\n\n// Keep a list of deprecation codes that have been warned on so we only warn on\n// each one once.\nconst codesWarned = new SafeSet();\n\nlet validateString;\n\nfunction getDeprecationWarningEmitter(\n  code\x2C msg\x2C deprecated\x2C useEmitSync\x2C\n  shouldEmitWarning = () => true\x2C\n) {\n  let warned = false;\n  return function() {\n    if (!warned && shouldEmitWarning()) {\n      warned = true;\n      if (code !== undefined) {\n        if (!codesWarned.has(code)) {\n          const emitWarning = useEmitSync ?\n            require('internal/process/warning').emitWarningSync :\n            process.emitWarning;\n          emitWarning(msg\x2C 'DeprecationWarning'\x2C code\x2C deprecated);\n          codesWarned.add(code);\n        }\n      } else {\n        process.emitWarning(msg\x2C 'DeprecationWarning'\x2C deprecated);\n      }\n    }\n  };\n}\n\nfunction isPendingDeprecation() {\n  return getOptionValue('--pending-deprecation') &&\n    !getOptionValue('--no-deprecation');\n}\n\n// Internal deprecator for pending --pending-deprecation. This can be invoked\n// at snapshot building time as the warning permission is only queried at\n// run time.\nfunction pendingDeprecate(fn\x2C msg\x2C code) {\n  const emitDeprecationWarning = getDeprecationWarningEmitter(\n    code\x2C msg\x2C deprecated\x2C false\x2C isPendingDeprecation\x2C\n  );\n  function deprecated(...args) {\n    emitDeprecationWarning();\n    return ReflectApply(fn\x2C this\x2C args);\n  }\n  return deprecated;\n}\n\n// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set\x2C then it is a no-op.\nfunction deprecate(fn\x2C msg\x2C code\x2C useEmitSync) {\n  if (process.noDeprecation === true) {\n    return fn;\n  }\n\n  // Lazy-load to avoid a circular dependency.\n  if (validateString === undefined)\n    ({ validateString } = require('internal/validators'));\n\n  if (code !== undefined)\n    validateString(code\x2C 'code');\n\n  const emitDeprecationWarning = getDeprecationWarningEmitter(\n    code\x2C msg\x2C deprecated\x2C useEmitSync\x2C\n  );\n\n  function deprecated(...args) {\n    emitDeprecationWarning();\n    if (new.target) {\n      return ReflectConstruct(fn\x2C args\x2C new.target);\n    }\n    return ReflectApply(fn\x2C this\x2C args);\n  }\n\n  // The wrapper will keep the same prototype as fn to maintain prototype chain\n  ObjectSetPrototypeOf(deprecated\x2C fn);\n  if (fn.prototype) {\n    // Setting this (rather than using Object.setPrototype\x2C as above) ensures\n    // that calling the unwrapped constructor gives an instanceof the wrapped\n    // constructor.\n    deprecated.prototype = fn.prototype;\n  }\n\n  return deprecated;\n}\n\nfunction decorateErrorStack(err) {\n  if (!(isError(err) && err.stack) || err[decorated_private_symbol])\n    return;\n\n  const arrow = err[arrow_message_private_symbol];\n\n  if (arrow) {\n    err.stack = arrow + err.stack;\n    err[decorated_private_symbol] = true;\n  }\n}\n\nfunction assertCrypto() {\n  if (noCrypto)\n    throw new ERR_NO_CRYPTO();\n}\n\n// Return undefined if there is no match.\n// Move the "slow cases" to a separate function to make sure this function gets\n// inlined properly. That prioritizes the common case.\nfunction normalizeEncoding(enc) {\n  if (enc == null || enc === 'utf8' || enc === 'utf-8') return 'utf8';\n  return slowCases(enc);\n}\n\nfunction slowCases(enc) {\n  switch (enc.length) {\n    case 4:\n      if (enc === 'UTF8') return 'utf8';\n      if (enc === 'ucs2' || enc === 'UCS2') return 'utf16le';\n      enc = StringPrototypeToLowerCase(enc);\n      if (enc === 'utf8') return 'utf8';\n      if (enc === 'ucs2') return 'utf16le';\n      break;\n    case 3:\n      if (enc === 'hex' || enc === 'HEX' ||\n      StringPrototypeToLowerCase(enc) === 'hex')\n        return 'hex';\n      break;\n    case 5:\n      if (enc === 'ascii') return 'ascii';\n      if (enc === 'ucs-2') return 'utf16le';\n      if (enc === 'UTF-8') return 'utf8';\n      if (enc === 'ASCII') return 'ascii';\n      if (enc === 'UCS-2') return 'utf16le';\n      enc = StringPrototypeToLowerCase(enc);\n      if (enc === 'utf-8') return 'utf8';\n      if (enc === 'ascii') return 'ascii';\n      if (enc === 'ucs-2') return 'utf16le';\n      break;\n    case 6:\n      if (enc === 'base64') return 'base64';\n      if (enc === 'latin1' || enc === 'binary') return 'latin1';\n      if (enc === 'BASE64') return 'base64';\n      if (enc === 'LATIN1' || enc === 'BINARY') return 'latin1';\n      enc = StringPrototypeToLowerCase(enc);\n      if (enc === 'base64') return 'base64';\n      if (enc === 'latin1' || enc === 'binary') return 'latin1';\n      break;\n    case 7:\n      if (enc === 'utf16le' || enc === 'UTF16LE' ||\n      StringPrototypeToLowerCase(enc) === 'utf16le')\n        return 'utf16le';\n      break;\n    case 8:\n      if (enc === 'utf-16le' || enc === 'UTF-16LE' ||\n      StringPrototypeToLowerCase(enc) === 'utf-16le')\n        return 'utf16le';\n      break;\n    case 9:\n      if (enc === 'base64url' || enc === 'BASE64URL' ||\n      StringPrototypeToLowerCase(enc) === 'base64url')\n        return 'base64url';\n      break;\n    default:\n      if (enc === '') return 'utf8';\n  }\n}\n\nfunction emitExperimentalWarning(feature) {\n  if (experimentalWarnings.has(feature)) return;\n  const msg = `${feature} is an experimental feature and might change at any time`;\n  experimentalWarnings.add(feature);\n  process.emitWarning(msg\x2C 'ExperimentalWarning');\n}\n\nfunction filterDuplicateStrings(items\x2C low) {\n  const map = new SafeMap();\n  for (let i = 0; i < items.length; i++) {\n    const item = items[i];\n    const key = StringPrototypeToLowerCase(item);\n    if (low) {\n      map.set(key\x2C key);\n    } else {\n      map.set(key\x2C item);\n    }\n  }\n  return ArrayPrototypeSort(ArrayFrom(map.values()));\n}\n\nfunction cachedResult(fn) {\n  let result;\n  return () => {\n    if (result === undefined)\n      result = fn();\n    return ArrayPrototypeSlice(result);\n  };\n}\n\n// Useful for Wrapping an ES6 Class with a constructor Function that\n// does not require the new keyword. For instance:\n//   class A { constructor(x) {this.x = x;}}\n//   const B = createClassWrapper(A);\n//   B() instanceof A // true\n//   B() instanceof B // true\nfunction createClassWrapper(type) {\n  function fn(...args) {\n    return ReflectConstruct(type\x2C args\x2C new.target || type);\n  }\n  // Mask the wrapper function name and length values\n  ObjectDefineProperties(fn\x2C {\n    name: { __proto__: null\x2C value: type.name }\x2C\n    length: { __proto__: null\x2C value: type.length }\x2C\n  });\n  ObjectSetPrototypeOf(fn\x2C type);\n  fn.prototype = type.prototype;\n  return fn;\n}\n\nlet signalsToNamesMapping;\nfunction getSignalsToNamesMapping() {\n  if (signalsToNamesMapping !== undefined)\n    return signalsToNamesMapping;\n\n  signalsToNamesMapping = { __proto__: null };\n  for (const key in signals) {\n    signalsToNamesMapping[signals[key]] = key;\n  }\n\n  return signalsToNamesMapping;\n}\n\nfunction convertToValidSignal(signal) {\n  if (typeof signal === 'number' && getSignalsToNamesMapping()[signal])\n    return signal;\n\n  if (typeof signal === 'string') {\n    const signalName = signals[StringPrototypeToUpperCase(signal)];\n    if (signalName) return signalName;\n  }\n\n  throw new ERR_UNKNOWN_SIGNAL(signal);\n}\n\nfunction getConstructorOf(obj) {\n  while (obj) {\n    const descriptor = ObjectGetOwnPropertyDescriptor(obj\x2C 'constructor');\n    if (descriptor !== undefined &&\n        typeof descriptor.value === 'function' &&\n        descriptor.value.name !== '') {\n      return descriptor.value;\n    }\n\n    obj = ObjectGetPrototypeOf(obj);\n  }\n\n  return null;\n}\n\nlet cachedURL;\nlet cachedCWD;\n\n/**\n * Get the current working directory while accounting for the possibility that it has been deleted.\n * `process.cwd()` can fail if the parent directory is deleted while the process runs.\n * @returns {URL} The current working directory or the volume root if it cannot be determined.\n */\nfunction getCWDURL() {\n  const { sep } = require('path');\n  const { pathToFileURL } = require('internal/url');\n\n  let cwd;\n\n  try {\n    // The implementation of `process.cwd()` already uses proper cache when it can.\n    // It's a relatively cheap call performance-wise for the most common use case.\n    cwd = process.cwd();\n  } catch {\n    cachedURL ??= pathToFileURL(sep);\n  }\n\n  if (cwd != null && cwd !== cachedCWD) {\n    cachedURL = pathToFileURL(cwd + sep);\n    cachedCWD = cwd;\n  }\n\n  return cachedURL;\n}\n\nfunction getSystemErrorName(err) {\n  const entry = uvErrmapGet(err);\n  return entry ? entry[0] : `Unknown system error ${err}`;\n}\n\nfunction getSystemErrorMap() {\n  return lazyUv().getErrorMap();\n}\n\nconst kCustomPromisifiedSymbol = SymbolFor('nodejs.util.promisify.custom');\nconst kCustomPromisifyArgsSymbol = Symbol('customPromisifyArgs');\n\nlet validateFunction;\n\nfunction promisify(original) {\n  // Lazy-load to avoid a circular dependency.\n  if (validateFunction === undefined)\n    ({ validateFunction } = require('internal/validators'));\n\n  validateFunction(original\x2C 'original');\n\n  if (original[kCustomPromisifiedSymbol]) {\n    const fn = original[kCustomPromisifiedSymbol];\n\n    validateFunction(fn\x2C 'util.promisify.custom');\n\n    return ObjectDefineProperty(fn\x2C kCustomPromisifiedSymbol\x2C {\n      __proto__: null\x2C\n      value: fn\x2C enumerable: false\x2C writable: false\x2C configurable: true\x2C\n    });\n  }\n\n  // Names to create an object from in case the callback receives multiple\n  // arguments\x2C e.g. ['bytesRead'\x2C 'buffer'] for fs.read.\n  const argumentNames = original[kCustomPromisifyArgsSymbol];\n\n  function fn(...args) {\n    return new Promise((resolve\x2C reject) => {\n      ArrayPrototypePush(args\x2C (err\x2C ...values) => {\n        if (err) {\n          return reject(err);\n        }\n        if (argumentNames !== undefined && values.length > 1) {\n          const obj = {};\n          for (let i = 0; i < argumentNames.length; i++)\n            obj[argumentNames[i]] = values[i];\n          resolve(obj);\n        } else {\n          resolve(values[0]);\n        }\n      });\n      if (isPromise(ReflectApply(original\x2C this\x2C args))) {\n        process.emitWarning('Calling promisify on a function that returns a Promise is likely a mistake.'\x2C\n                            'DeprecationWarning'\x2C 'DEP0174');\n      }\n    });\n  }\n\n  ObjectSetPrototypeOf(fn\x2C ObjectGetPrototypeOf(original));\n\n  ObjectDefineProperty(fn\x2C kCustomPromisifiedSymbol\x2C {\n    __proto__: null\x2C\n    value: fn\x2C enumerable: false\x2C writable: false\x2C configurable: true\x2C\n  });\n\n  const descriptors = ObjectGetOwnPropertyDescriptors(original);\n  const propertiesValues = ObjectValues(descriptors);\n  for (let i = 0; i < propertiesValues.length; i++) {\n    // We want to use null-prototype objects to not rely on globally mutable\n    // %Object.prototype%.\n    ObjectSetPrototypeOf(propertiesValues[i]\x2C null);\n  }\n  return ObjectDefineProperties(fn\x2C descriptors);\n}\n\npromisify.custom = kCustomPromisifiedSymbol;\n\n// The built-in Array#join is slower in v8 6.0\nfunction join(output\x2C separator) {\n  let str = '';\n  if (output.length !== 0) {\n    const lastIndex = output.length - 1;\n    for (let i = 0; i < lastIndex; i++) {\n      // It is faster not to use a template string here\n      str += output[i];\n      str += separator;\n    }\n    str += output[lastIndex];\n  }\n  return str;\n}\n\n// As of V8 6.6\x2C depending on the size of the array\x2C this is anywhere\n// between 1.5-10x faster than the two-arg version of Array#splice()\nfunction spliceOne(list\x2C index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nconst kNodeModulesRE = /^(.*)[\\\\/]node_modules[\\\\/]/;\n\nlet getStructuredStack;\n\nfunction isInsideNodeModules() {\n  if (getStructuredStack === undefined) {\n    // Lazy-load to avoid a circular dependency.\n    const { runInNewContext } = require('vm');\n    // Use `runInNewContext()` to get something tamper-proof and\n    // side-effect-free. Since this is currently only used for a deprecated API\x2C\n    // the perf implications should be okay.\n    getStructuredStack = runInNewContext(`(function() {\n      try { Error.stackTraceLimit = Infinity; } catch {}\n      return function structuredStack() {\n        const e = new Error();\n        overrideStackTrace.set(e\x2C (err\x2C trace) => trace);\n        return e.stack;\n      };\n    })()`\x2C { overrideStackTrace }\x2C { filename: 'structured-stack' });\n  }\n\n  const stack = getStructuredStack();\n\n  // Iterate over all stack frames and look for the first one not coming\n  // from inside Node.js itself:\n  if (ArrayIsArray(stack)) {\n    for (const frame of stack) {\n      const filename = frame.getFileName();\n      // If a filename does not start with / or contain \\\x2C\n      // it's likely from Node.js core.\n      if (RegExpPrototypeExec(/^\\/|\\\\/\x2C filename) === null)\n        continue;\n      return RegExpPrototypeExec(kNodeModulesRE\x2C filename) !== null;\n    }\n  }\n  return false;\n}\n\nfunction once(callback) {\n  let called = false;\n  return function(...args) {\n    if (called) return;\n    called = true;\n    return ReflectApply(callback\x2C this\x2C args);\n  };\n}\n\nlet validateUint32;\n\nfunction sleep(msec) {\n  // Lazy-load to avoid a circular dependency.\n  if (validateUint32 === undefined)\n    ({ validateUint32 } = require('internal/validators'));\n\n  validateUint32(msec\x2C 'msec');\n  _sleep(msec);\n}\n\nfunction createDeferredPromise() {\n  let resolve;\n  let reject;\n  const promise = new Promise((res\x2C rej) => {\n    resolve = res;\n    reject = rej;\n  });\n\n  return { promise\x2C resolve\x2C reject };\n}\n\n// https://heycam.github.io/webidl/#define-the-operations\nfunction defineOperation(target\x2C name\x2C method) {\n  ObjectDefineProperty(target\x2C name\x2C {\n    __proto__: null\x2C\n    writable: true\x2C\n    enumerable: true\x2C\n    configurable: true\x2C\n    value: method\x2C\n  });\n}\n\n// https://heycam.github.io/webidl/#es-interfaces\nfunction exposeInterface(target\x2C name\x2C interfaceObject) {\n  ObjectDefineProperty(target\x2C name\x2C {\n    __proto__: null\x2C\n    writable: true\x2C\n    enumerable: false\x2C\n    configurable: true\x2C\n    value: interfaceObject\x2C\n  });\n}\n\n// https://heycam.github.io/webidl/#es-namespaces\nfunction exposeNamespace(target\x2C name\x2C namespaceObject) {\n  ObjectDefineProperty(target\x2C name\x2C {\n    __proto__: null\x2C\n    writable: true\x2C\n    enumerable: false\x2C\n    configurable: true\x2C\n    value: namespaceObject\x2C\n  });\n}\n\nfunction exposeGetterAndSetter(target\x2C name\x2C getter\x2C setter = undefined) {\n  ObjectDefineProperty(target\x2C name\x2C {\n    __proto__: null\x2C\n    enumerable: false\x2C\n    configurable: true\x2C\n    get: getter\x2C\n    set: setter\x2C\n  });\n}\n\nfunction defineLazyProperties(target\x2C id\x2C keys\x2C enumerable = true) {\n  const descriptors = { __proto__: null };\n  let mod;\n  for (let i = 0; i < keys.length; i++) {\n    const key = keys[i];\n    let lazyLoadedValue;\n    function set(value) {\n      ObjectDefineProperty(target\x2C key\x2C {\n        __proto__: null\x2C\n        writable: true\x2C\n        value\x2C\n      });\n    }\n    ObjectDefineProperty(set\x2C 'name'\x2C {\n      __proto__: null\x2C\n      value: `set ${key}`\x2C\n    });\n    function get() {\n      mod ??= require(id);\n      if (lazyLoadedValue === undefined) {\n        lazyLoadedValue = mod[key];\n        set(lazyLoadedValue);\n      }\n      return lazyLoadedValue;\n    }\n    ObjectDefineProperty(get\x2C 'name'\x2C {\n      __proto__: null\x2C\n      value: `get ${key}`\x2C\n    });\n    descriptors[key] = {\n      __proto__: null\x2C\n      configurable: true\x2C\n      enumerable\x2C\n      get\x2C\n      set\x2C\n    };\n  }\n  ObjectDefineProperties(target\x2C descriptors);\n}\n\nfunction defineReplaceableLazyAttribute(target\x2C id\x2C keys\x2C writable = true\x2C check) {\n  let mod;\n  for (let i = 0; i < keys.length; i++) {\n    const key = keys[i];\n    let value;\n    let setterCalled = false;\n\n    function get() {\n      if (check !== undefined) {\n        FunctionPrototypeCall(check\x2C this);\n      }\n      if (setterCalled) {\n        return value;\n      }\n      mod ??= require(id);\n      value ??= mod[key];\n      return value;\n    }\n\n    ObjectDefineProperty(get\x2C 'name'\x2C {\n      __proto__: null\x2C\n      value: `get ${key}`\x2C\n    });\n\n    function set(val) {\n      setterCalled = true;\n      value = val;\n    }\n    ObjectDefineProperty(set\x2C 'name'\x2C {\n      __proto__: null\x2C\n      value: `set ${key}`\x2C\n    });\n\n    ObjectDefineProperty(target\x2C key\x2C {\n      __proto__: null\x2C\n      enumerable: true\x2C\n      configurable: true\x2C\n      get\x2C\n      set: writable ? set : undefined\x2C\n    });\n  }\n}\n\nfunction exposeLazyInterfaces(target\x2C id\x2C keys) {\n  defineLazyProperties(target\x2C id\x2C keys\x2C false);\n}\n\nlet _DOMException;\nconst lazyDOMExceptionClass = () => {\n  _DOMException ??= internalBinding('messaging').DOMException;\n  return _DOMException;\n};\n\nconst lazyDOMException = (message\x2C name) => {\n  _DOMException ??= internalBinding('messaging').DOMException;\n  if (isErrorStackTraceLimitWritable()) {\n    const limit = Error.stackTraceLimit;\n    Error.stackTraceLimit = 0;\n    const ex = new _DOMException(message\x2C name);\n    Error.stackTraceLimit = limit;\n    ErrorCaptureStackTrace(ex\x2C lazyDOMException);\n    return ex;\n  }\n  return new _DOMException(message\x2C name);\n\n};\n\nconst kEnumerableProperty = { __proto__: null };\nkEnumerableProperty.enumerable = true;\nObjectFreeze(kEnumerableProperty);\n\nconst kEmptyObject = ObjectFreeze({ __proto__: null });\n\nfunction filterOwnProperties(source\x2C keys) {\n  const filtered = { __proto__: null };\n  for (let i = 0; i < keys.length; i++) {\n    const key = keys[i];\n    if (ObjectPrototypeHasOwnProperty(source\x2C key)) {\n      filtered[key] = source[key];\n    }\n  }\n\n  return filtered;\n}\n\n/**\n * Mimics `obj[key] = value` but ignoring potential prototype inheritance.\n * @param {any} obj\n * @param {string} key\n * @param {any} value\n * @returns {any}\n */\nfunction setOwnProperty(obj\x2C key\x2C value) {\n  return ObjectDefineProperty(obj\x2C key\x2C {\n    __proto__: null\x2C\n    configurable: true\x2C\n    enumerable: true\x2C\n    value\x2C\n    writable: true\x2C\n  });\n}\n\nlet internalGlobal;\nfunction getInternalGlobal() {\n  if (internalGlobal == null) {\n    // Lazy-load to avoid a circular dependency.\n    const { runInNewContext } = require('vm');\n    internalGlobal = runInNewContext('this'\x2C undefined\x2C { contextName: 'internal' });\n  }\n  return internalGlobal;\n}\n\nfunction SideEffectFreeRegExpPrototypeExec(regex\x2C string) {\n  const { RegExp: RegExpFromAnotherRealm } = getInternalGlobal();\n  return FunctionPrototypeCall(RegExpFromAnotherRealm.prototype.exec\x2C regex\x2C string);\n}\n\nconst crossRelmRegexes = new SafeWeakMap();\nfunction getCrossRelmRegex(regex) {\n  const cached = crossRelmRegexes.get(regex);\n  if (cached) return cached;\n\n  let flagString = '';\n  if (RegExpPrototypeGetHasIndices(regex)) flagString += 'd';\n  if (RegExpPrototypeGetGlobal(regex)) flagString += 'g';\n  if (RegExpPrototypeGetIgnoreCase(regex)) flagString += 'i';\n  if (RegExpPrototypeGetMultiline(regex)) flagString += 'm';\n  if (RegExpPrototypeGetDotAll(regex)) flagString += 's';\n  if (RegExpPrototypeGetUnicode(regex)) flagString += 'u';\n  if (RegExpPrototypeGetSticky(regex)) flagString += 'y';\n\n  const { RegExp: RegExpFromAnotherRealm } = getInternalGlobal();\n  const crossRelmRegex = new RegExpFromAnotherRealm(RegExpPrototypeGetSource(regex)\x2C flagString);\n  crossRelmRegexes.set(regex\x2C crossRelmRegex);\n  return crossRelmRegex;\n}\n\nfunction SideEffectFreeRegExpPrototypeSymbolReplace(regex\x2C string\x2C replacement) {\n  return getCrossRelmRegex(regex)[SymbolReplace](string\x2C replacement);\n}\n\nfunction SideEffectFreeRegExpPrototypeSymbolSplit(regex\x2C string\x2C limit = undefined) {\n  return getCrossRelmRegex(regex)[SymbolSplit](string\x2C limit);\n}\n\n\nfunction isArrayBufferDetached(value) {\n  if (ArrayBufferPrototypeGetByteLength(value) === 0) {\n    return _isArrayBufferDetached(value);\n  }\n\n  return false;\n}\n\n/**\n * Helper function to lazy-load an initialize-once value.\n * @template T Return value of initializer\n * @param {()=>T} initializer Initializer of the lazily loaded value.\n * @returns {()=>T}\n */\nfunction getLazy(initializer) {\n  let value;\n  let initialized = false;\n  return function() {\n    if (initialized === false) {\n      value = initializer();\n      initialized = true;\n    }\n    return value;\n  };\n}\n\n// Setup user-facing NODE_V8_COVERAGE environment variable that writes\n// ScriptCoverage objects to a specified directory.\nfunction setupCoverageHooks(dir) {\n  const cwd = require('internal/process/execution').tryGetCwd();\n  const { resolve } = require('path');\n  const coverageDirectory = resolve(cwd\x2C dir);\n  const { sourceMapCacheToObject } =\n    require('internal/source_map/source_map_cache');\n\n  if (process.features.inspector) {\n    internalBinding('profiler').setCoverageDirectory(coverageDirectory);\n    internalBinding('profiler').setSourceMapCacheGetter(sourceMapCacheToObject);\n  } else {\n    process.emitWarning('The inspector is disabled\x2C ' +\n                        'coverage could not be collected'\x2C\n                        'Warning');\n    return '';\n  }\n  return coverageDirectory;\n}\n\n\nconst handleTypes = ['TCP'\x2C 'TTY'\x2C 'UDP'\x2C 'FILE'\x2C 'PIPE'\x2C 'UNKNOWN'];\nfunction guessHandleType(fd) {\n  const type = _guessHandleType(fd);\n  return handleTypes[type];\n}\n\nclass WeakReference {\n  #weak = null;\n  #strong = null;\n  #refCount = 0;\n  constructor(object) {\n    this.#weak = new SafeWeakRef(object);\n  }\n\n  incRef() {\n    this.#refCount++;\n    if (this.#refCount === 1) {\n      const derefed = this.#weak.deref();\n      if (derefed !== undefined) {\n        this.#strong = derefed;\n      }\n    }\n    return this.#refCount;\n  }\n\n  decRef() {\n    this.#refCount--;\n    if (this.#refCount === 0) {\n      this.#strong = null;\n    }\n    return this.#refCount;\n  }\n\n  get() {\n    return this.#weak.deref();\n  }\n}\n\nmodule.exports = {\n  getLazy\x2C\n  assertCrypto\x2C\n  cachedResult\x2C\n  convertToValidSignal\x2C\n  createClassWrapper\x2C\n  createDeferredPromise\x2C\n  decorateErrorStack\x2C\n  defineOperation\x2C\n  defineLazyProperties\x2C\n  defineReplaceableLazyAttribute\x2C\n  deprecate\x2C\n  emitExperimentalWarning\x2C\n  exposeInterface\x2C\n  exposeLazyInterfaces\x2C\n  exposeNamespace\x2C\n  exposeGetterAndSetter\x2C\n  filterDuplicateStrings\x2C\n  filterOwnProperties\x2C\n  getConstructorOf\x2C\n  getCWDURL\x2C\n  getInternalGlobal\x2C\n  getSystemErrorMap\x2C\n  getSystemErrorName\x2C\n  guessHandleType\x2C\n  isArrayBufferDetached\x2C\n  isError\x2C\n  isInsideNodeModules\x2C\n  join\x2C\n  lazyDOMException\x2C\n  lazyDOMExceptionClass\x2C\n  normalizeEncoding\x2C\n  once\x2C\n  promisify\x2C\n  SideEffectFreeRegExpPrototypeExec\x2C\n  SideEffectFreeRegExpPrototypeSymbolReplace\x2C\n  SideEffectFreeRegExpPrototypeSymbolSplit\x2C\n  sleep\x2C\n  spliceOne\x2C\n  setupCoverageHooks\x2C\n  removeColors\x2C\n\n  // Symbol used to customize promisify conversion\n  customPromisifyArgs: kCustomPromisifyArgsSymbol\x2C\n\n  // Symbol used to provide a custom inspect function for an object as an\n  // alternative to using 'inspect'\n  customInspectSymbol: SymbolFor('nodejs.util.inspect.custom')\x2C\n\n  // Used by the buffer module to capture an internal reference to the\n  // default isEncoding implementation\x2C just in case userland overrides it.\n  kIsEncodingSymbol: Symbol('kIsEncodingSymbol')\x2C\n  kVmBreakFirstLineSymbol: Symbol('kVmBreakFirstLineSymbol')\x2C\n\n  kEmptyObject\x2C\n  kEnumerableProperty\x2C\n  setOwnProperty\x2C\n  pendingDeprecate\x2C\n  WeakReference\x2C\n};\n
code-source-info,0x10fd84c80,16,18328,18399,,,
tick,0x1095e8b1a,59988,0,0x0,0,0x109bab2e0,0x722077ddc1,0x7220777eca,0x72b21073da,0x72b21237fb,0x72b211d7a2,0x72b211d614,0x72b211d4d1,0x72b2102ef7,0x723b73ff14,0x723b73f9b2
code-creation,JS,11,60014,0x10fd8ba80,2488,defineLazyProperties node:internal/util:591:30,0x72e2e81da0,^
code-source-info,0x10fd8ba80,16,16491,17395,,,
code-creation,JS,11,60043,0x10fd84d40,100,next node:internal/per_context/primordials:336:9,0x72207717b0,^
code-source-info,0x10fd84d40,6,9592,9637,,,
code-creation,JS,11,60071,0x10fd84e00,268,SafeSet node:internal/per_context/primordials:427:16,0x7220772448,^
code-source-info,0x10fd84e00,6,12317,12334,,,
tick,0x10a0221c0,60116,0,0x0,0,0x72b2107404,0x72b21237fb,0x72b211d7a2,0x72b211d614,0x72b211d4d1,0x72b2102ef7,0x723b73ff14,0x723b73f9b2
code-creation,JS,10,60200,0x72b212592c,91,initializeESMLoader node:internal/process/pre_execution:727:29,0x72e2eba970,~
code-source-info,0x72b212592c,67,22860,23415,C0O22911C6O22911C11O22893C16O22952C20O23119C28O23123C34O23239C40O23239C45O23188C50O23196C55O23214C60O23285C66O23285C71O23304C73O23314C77O23328C79O23348C83O23372C85O23391C90O23414,,
code-creation,JS,10,60279,0x72b2125a9c,50,initializeESM node:internal/modules/esm/utils:223:23,0x72e2eb95a0,~
script-source,66,node:internal/modules/esm/utils,'use strict';\n\nconst {\n  ArrayIsArray\x2C\n  SafeSet\x2C\n  SafeWeakMap\x2C\n  Symbol\x2C\n  ObjectFreeze\x2C\n} = primordials;\n\nconst {\n  privateSymbols: {\n    host_defined_option_symbol\x2C\n  }\x2C\n} = internalBinding('util');\nconst {\n  default_host_defined_options\x2C\n  vm_dynamic_import_missing_flag\x2C\n} = internalBinding('symbols');\n\nconst {\n  ERR_VM_DYNAMIC_IMPORT_CALLBACK_MISSING_FLAG\x2C\n  ERR_VM_DYNAMIC_IMPORT_CALLBACK_MISSING\x2C\n  ERR_INVALID_ARG_VALUE\x2C\n} = require('internal/errors').codes;\nconst { getOptionValue } = require('internal/options');\nconst {\n  loadPreloadModules\x2C\n  initializeFrozenIntrinsics\x2C\n} = require('internal/process/pre_execution');\nconst { getCWDURL } = require('internal/util');\nconst {\n  setImportModuleDynamicallyCallback\x2C\n  setInitializeImportMetaObjectCallback\x2C\n} = internalBinding('module_wrap');\nconst assert = require('internal/assert');\n\nlet defaultConditions;\n/**\n * Returns the default conditions for ES module loading.\n */\nfunction getDefaultConditions() {\n  assert(defaultConditions !== undefined);\n  return defaultConditions;\n}\n\n/** @type {Set<string>} */\nlet defaultConditionsSet;\n/**\n * Returns the default conditions for ES module loading\x2C as a Set.\n */\nfunction getDefaultConditionsSet() {\n  assert(defaultConditionsSet !== undefined);\n  return defaultConditionsSet;\n}\n\n/**\n * Initializes the default conditions for ESM module loading.\n * This function is called during pre-execution\x2C before any user code is run.\n */\nfunction initializeDefaultConditions() {\n  const userConditions = getOptionValue('--conditions');\n  const noAddons = getOptionValue('--no-addons');\n  const addonConditions = noAddons ? [] : ['node-addons'];\n\n  defaultConditions = ObjectFreeze([\n    'node'\x2C\n    'import'\x2C\n    ...addonConditions\x2C\n    ...userConditions\x2C\n  ]);\n  defaultConditionsSet = new SafeSet(defaultConditions);\n}\n\n/**\n * @param {string[]} [conditions]\n * @returns {Set<string>}\n */\nfunction getConditionsSet(conditions) {\n  if (conditions !== undefined && conditions !== getDefaultConditions()) {\n    if (!ArrayIsArray(conditions)) {\n      throw new ERR_INVALID_ARG_VALUE('conditions'\x2C conditions\x2C\n                                      'expected an array');\n    }\n    return new SafeSet(conditions);\n  }\n  return getDefaultConditionsSet();\n}\n\n/**\n * @callback ImportModuleDynamicallyCallback\n * @param {string} specifier\n * @param {ModuleWrap|ContextifyScript|Function|vm.Module} callbackReferrer\n * @param {Record<string\x2C string>} attributes\n * @returns { Promise<void> }\n */\n\n/**\n * @callback InitializeImportMetaCallback\n * @param {object} meta\n * @param {ModuleWrap|ContextifyScript|Function|vm.Module} callbackReferrer\n */\n\n/**\n * @typedef {{\n *   callbackReferrer: ModuleWrap|ContextifyScript|Function|vm.Module\n *   initializeImportMeta? : InitializeImportMetaCallback\x2C\n *   importModuleDynamically? : ImportModuleDynamicallyCallback\n * }} ModuleRegistry\n */\n\n/**\n * @type {WeakMap<symbol\x2C ModuleRegistry>}\n */\nconst moduleRegistries = new SafeWeakMap();\n\n/**\n * @typedef {ContextifyScript|Function|ModuleWrap|ContextifiedObject} Referrer\n * A referrer can be a Script Record\x2C a Cyclic Module Record\x2C or a Realm Record\n * as defined in https://tc39.es/ecma262/#sec-HostLoadImportedModule.\n *\n * In Node.js\x2C a referrer is represented by a wrapper object of these records.\n * A referrer object has a field |host_defined_option_symbol| initialized with\n * a symbol.\n */\n\n/**\n * V8 would make sure that as long as import() can still be initiated from\n * the referrer\x2C the symbol referenced by |host_defined_option_symbol| should\n * be alive\x2C which in term would keep the settings object alive through the\n * WeakMap\x2C and in turn that keeps the referrer object alive\x2C which would be\n * passed into the callbacks.\n * The reference goes like this:\n * [v8::internal::Script] (via host defined options) ----1--> [idSymbol]\n * [callbackReferrer] (via host_defined_option_symbol) ------2------^  |\n *                                 ^----------3---- (via WeakMap)------\n * 1+3 makes sure that as long as import() can still be initiated\x2C the\n * referrer wrap is still around and can be passed into the callbacks.\n * 2 is only there so that we can get the id symbol to configure the\n * weak map.\n * @param {Referrer} referrer The referrer to\n *   get the id symbol from. This is different from callbackReferrer which\n *   could be set by the caller.\n * @param {ModuleRegistry} registry\n */\nfunction registerModule(referrer\x2C registry) {\n  const idSymbol = referrer[host_defined_option_symbol];\n  if (idSymbol === default_host_defined_options ||\n      idSymbol === vm_dynamic_import_missing_flag) {\n    // The referrer is compiled without custom callbacks\x2C so there is\n    // no registry to hold on to. We'll throw\n    // ERR_VM_DYNAMIC_IMPORT_CALLBACK_MISSING when a callback is\n    // needed.\n    return;\n  }\n  // To prevent it from being GC'ed.\n  registry.callbackReferrer ??= referrer;\n  moduleRegistries.set(idSymbol\x2C registry);\n}\n\n/**\n * Registers the ModuleRegistry for dynamic import() calls with a realm\n * as the referrer. Similar to {@link registerModule}\x2C but this function\n * generates a new id symbol instead of using the one from the referrer\n * object.\n * @param {globalThis} globalThis The globalThis object of the realm.\n * @param {ModuleRegistry} registry\n */\nfunction registerRealm(globalThis\x2C registry) {\n  let idSymbol = globalThis[host_defined_option_symbol];\n  // If the per-realm host-defined options is already registered\x2C do nothing.\n  if (idSymbol) {\n    return;\n  }\n  // Otherwise\x2C register the per-realm host-defined options.\n  idSymbol = Symbol('Realm globalThis');\n  globalThis[host_defined_option_symbol] = idSymbol;\n  moduleRegistries.set(idSymbol\x2C registry);\n}\n\n/**\n * Defines the `import.meta` object for a given module.\n * @param {symbol} symbol - Reference to the module.\n * @param {Record<string\x2C string | Function>} meta - The import.meta object to initialize.\n */\nfunction initializeImportMetaObject(symbol\x2C meta) {\n  if (moduleRegistries.has(symbol)) {\n    const { initializeImportMeta\x2C callbackReferrer } = moduleRegistries.get(symbol);\n    if (initializeImportMeta !== undefined) {\n      meta = initializeImportMeta(meta\x2C callbackReferrer);\n    }\n  }\n}\n\n/**\n * Asynchronously imports a module dynamically using a callback function. The native callback.\n * @param {symbol} referrerSymbol - Referrer symbol of the registered script\x2C function\x2C module\x2C or contextified object.\n * @param {string} specifier - The module specifier string.\n * @param {Record<string\x2C string>} attributes - The import attributes object.\n * @returns {Promise<import('internal/modules/esm/loader.js').ModuleExports>} - The imported module object.\n * @throws {ERR_VM_DYNAMIC_IMPORT_CALLBACK_MISSING} - If the callback function is missing.\n */\nasync function importModuleDynamicallyCallback(referrerSymbol\x2C specifier\x2C attributes) {\n  if (moduleRegistries.has(referrerSymbol)) {\n    const { importModuleDynamically\x2C callbackReferrer } = moduleRegistries.get(referrerSymbol);\n    if (importModuleDynamically !== undefined) {\n      return importModuleDynamically(specifier\x2C callbackReferrer\x2C attributes);\n    }\n  }\n  if (referrerSymbol === vm_dynamic_import_missing_flag) {\n    throw new ERR_VM_DYNAMIC_IMPORT_CALLBACK_MISSING_FLAG();\n  }\n  throw new ERR_VM_DYNAMIC_IMPORT_CALLBACK_MISSING();\n}\n\nlet _forceDefaultLoader = false;\n/**\n * Initializes handling of ES modules.\n * This is configured during pre-execution. Specifically it's set to true for\n * the loader worker in internal/main/worker_thread.js.\n * @param {boolean} [forceDefaultLoader=false] - A boolean indicating disabling custom loaders.\n */\nfunction initializeESM(forceDefaultLoader = false) {\n  _forceDefaultLoader = forceDefaultLoader;\n  initializeDefaultConditions();\n  // Setup per-realm callbacks that locate data or callbacks that we keep\n  // track of for different ESM modules.\n  setInitializeImportMetaObjectCallback(initializeImportMetaObject);\n  setImportModuleDynamicallyCallback(importModuleDynamicallyCallback);\n}\n\n/**\n * Determine whether custom loaders are disabled and it is forced to use the\n * default loader.\n * @returns {boolean}\n */\nfunction forceDefaultLoader() {\n  return _forceDefaultLoader;\n}\n\n/**\n * Register module customization hooks.\n */\nasync function initializeHooks() {\n  const customLoaderURLs = getOptionValue('--experimental-loader');\n\n  const { Hooks } = require('internal/modules/esm/hooks');\n  const esmLoader = require('internal/process/esm_loader').esmLoader;\n\n  const hooks = new Hooks();\n  esmLoader.setCustomizations(hooks);\n\n  // We need the loader customizations to be set _before_ we start invoking\n  // `--require`\x2C otherwise loops can happen because a `--require` script\n  // might call `register(...)` before we've installed ourselves. These\n  // global values are magically set in `setupUserModules` just for us and\n  // we call them in the correct order.\n  // N.B.  This block appears here specifically in order to ensure that\n  // `--require` calls occur before `--loader` ones do.\n  loadPreloadModules();\n  initializeFrozenIntrinsics();\n\n  const parentURL = getCWDURL().href;\n  for (let i = 0; i < customLoaderURLs.length; i++) {\n    await hooks.register(\n      customLoaderURLs[i]\x2C\n      parentURL\x2C\n    );\n  }\n\n  return hooks;\n}\n\nmodule.exports = {\n  registerModule\x2C\n  registerRealm\x2C\n  initializeESM\x2C\n  initializeHooks\x2C\n  getDefaultConditions\x2C\n  getConditionsSet\x2C\n  loaderWorkerId: 'internal/modules/esm/worker'\x2C\n  forceDefaultLoader\x2C\n};\n
code-source-info,0x72b2125a9c,66,7638,8002,C10O7671C12O7691C18O7715C21O7715C24O7863C32O7863C36O7932C44O7932C49O8001,,
code-creation,JS,10,60954,0x72b212657c,177,initializeDefaultConditions node:internal/modules/esm/utils:61:37,0x72e2eb9390,~
code-source-info,0x72b212657c,66,1473,1819,C0O1503C8O1503C13O1554C19O1554C24O1611C35O1647C48O1715C93O1739C138O1667C145O1665C151O1763C161O1786C169O1784C176O1818,,
code-creation,JS,10,61010,0x72b2126764,5,get hasLoadedAnyUserCJSModule node:internal/modules/cjs/loader:80:32,0x72e2eb53e0,~
code-source-info,0x72b2126764,63,2353,2393,C0O2358C4O2391,,
code-creation,JS,10,61057,0x72b212686c,53,loadPreloadModules node:internal/process/pre_execution:759:28,0x72e2ebaa78,~
code-source-info,0x72b212686c,67,23903,24224,C0O23990C8O23990C13O24021C15O24058C21O24065C26O24142C32O24142C37O24098C42O24108C47O24186C52O24223,,
code-creation,JS,10,61093,0x72b2126a54,50,initializeFrozenIntrinsics node:internal/process/pre_execution:751:36,0x72e2ebaa20,~
code-source-info,0x72b2126a54,67,23652,23874,C0O23659C8O23663C14O23708C17O23716C28O23716C34O23828C40O23828C45O23865C49O23873,,
code-creation,JS,10,61122,0x72b2126b74,22,markBootstrapComplete node:internal/process/pre_execution:772:31,0x72e2ebaad0,~
code-source-info,0x72b2126b74,67,24256,24320,C0O24263C6O24263C11O24293C16O24294C21O24319,,
code-creation,JS,10,61249,0x72b2126cd4,94,executeUserEntryPoint node:internal/modules/run_main:134:31,0x72e2ebc2c8,~
script-source,70,node:internal/modules/run_main,'use strict';\n\nconst {\n  StringPrototypeEndsWith\x2C\n} = primordials;\n\nconst { containsModuleSyntax } = internalBinding('contextify');\nconst { getNearestParentPackageJSONType } = internalBinding('modules');\nconst { getOptionValue } = require('internal/options');\nconst { checkPackageJSONIntegrity } = require('internal/modules/package_json_reader');\nconst path = require('path');\n\n/**\n * Get the absolute path to the main entry point.\n * @param {string} main - Entry point path\n */\nfunction resolveMainPath(main) {\n  const defaultType = getOptionValue('--experimental-default-type');\n  /** @type {string} */\n  let mainPath;\n  if (defaultType === 'module') {\n    if (getOptionValue('--preserve-symlinks-main')) { return; }\n    mainPath = path.resolve(main);\n  } else {\n    // Extension searching for the main entry point is supported only in legacy mode.\n    // Module._findPath is monkey-patchable here.\n    const { Module } = require('internal/modules/cjs/loader');\n    mainPath = Module._findPath(path.resolve(main)\x2C null\x2C true);\n  }\n  if (!mainPath) { return; }\n\n  const preserveSymlinksMain = getOptionValue('--preserve-symlinks-main');\n  if (!preserveSymlinksMain) {\n    const { toRealPath } = require('internal/modules/helpers');\n    try {\n      mainPath = toRealPath(mainPath);\n    } catch (err) {\n      if (defaultType === 'module' && err?.code === 'ENOENT') {\n        const { decorateErrorWithCommonJSHints } = require('internal/modules/esm/resolve');\n        const { getCWDURL } = require('internal/util');\n        decorateErrorWithCommonJSHints(err\x2C mainPath\x2C getCWDURL());\n      }\n      throw err;\n    }\n  }\n\n  return mainPath;\n}\n\n/**\n * Determine whether the main entry point should be loaded through the ESM Loader.\n * @param {string} mainPath - Absolute path to the main entry point\n */\nfunction shouldUseESMLoader(mainPath) {\n  if (getOptionValue('--experimental-default-type') === 'module') { return true; }\n\n  /**\n   * @type {string[]} userLoaders A list of custom loaders registered by the user\n   * (or an empty list when none have been registered).\n   */\n  const userLoaders = getOptionValue('--experimental-loader');\n  /**\n   * @type {string[]} userImports A list of preloaded modules registered by the user\n   * (or an empty list when none have been registered).\n   */\n  const userImports = getOptionValue('--import');\n  if (userLoaders.length > 0 || userImports.length > 0) { return true; }\n\n  // Determine the module format of the entry point.\n  if (mainPath && StringPrototypeEndsWith(mainPath\x2C '.mjs')) { return true; }\n  if (!mainPath || StringPrototypeEndsWith(mainPath\x2C '.cjs')) { return false; }\n\n  const response = getNearestParentPackageJSONType(mainPath);\n\n  // No package.json or no `type` field.\n  if (response === undefined || response[0] === 'none') {\n    if (getOptionValue('--experimental-detect-module')) {\n      // If the first argument of `containsModuleSyntax` is undefined\x2C it will read `mainPath` from the file system.\n      return containsModuleSyntax(undefined\x2C mainPath);\n    }\n    return false;\n  }\n\n  // TODO(@anonrig): Do not return filePath and rawContent if experimental-policy is not used.\n  const {\n    0: type\x2C\n    1: filePath\x2C\n    2: rawContent\x2C\n  } = response;\n\n  checkPackageJSONIntegrity(filePath\x2C rawContent);\n\n  return type === 'module';\n}\n\n/**\n * Run the main entry point through the ESM Loader.\n * @param {string} mainPath - Absolute path for the main entry point\n */\nfunction runMainESM(mainPath) {\n  const { loadESM } = require('internal/process/esm_loader');\n  const { pathToFileURL } = require('internal/url');\n  const main = pathToFileURL(mainPath).href;\n\n  handleMainPromise(loadESM((esmLoader) => {\n    return esmLoader.import(main\x2C undefined\x2C { __proto__: null });\n  }));\n}\n\n/**\n * Handle process exit events around the main entry point promise.\n * @param {Promise} promise - Main entry point promise\n */\nasync function handleMainPromise(promise) {\n  const {\n    handleProcessExit\x2C\n  } = require('internal/modules/esm/handle_process_exit');\n  process.on('exit'\x2C handleProcessExit);\n  try {\n    return await promise;\n  } finally {\n    process.off('exit'\x2C handleProcessExit);\n  }\n}\n\n/**\n * Parse the CLI main entry point string and run it.\n * For backwards compatibility\x2C we have to run a bunch of monkey-patchable code that belongs to the CJS loader (exposed\n * by `require('module')`) even when the entry point is ESM.\n * This monkey-patchable code is bypassed under `--experimental-default-type=module`.\n * Because of backwards compatibility\x2C this function is exposed publicly via `import { runMain } from 'node:module'`.\n * @param {string} main - First positional CLI argument\x2C such as `'entry.js'` from `node entry.js`\n */\nfunction executeUserEntryPoint(main = process.argv[1]) {\n  const resolvedMain = resolveMainPath(main);\n  const useESMLoader = shouldUseESMLoader(resolvedMain);\n  if (useESMLoader) {\n    runMainESM(resolvedMain || main);\n  } else {\n    // Module._load is the monkey-patchable CJS module loader.\n    const { Module } = require('internal/modules/cjs/loader');\n    Module._load(main\x2C null\x2C true);\n  }\n}\n\nmodule.exports = {\n  executeUserEntryPoint\x2C\n  handleMainPromise\x2C\n};\n
code-source-info,0x72b2126cd4,70,4726,5094,C7O4742C14O4746C22O4776C25O4776C30O4822C33O4822C38O4858C40O4882C45O4893C50O4882C56O5013C62O5013C67O5002C72O5064C87O5064C93O5093,,
tick,0x1092fe350,61616,0,0x0,3,0x109ba30d0,0x723b73f9fd
code-creation,JS,10,61707,0x72b21274dc,244,resolveMainPath node:internal/modules/run_main:17:25,0x72e2ebc060,~
code-source-info,0x72b21274dc,70,503,1638,C0O534C8O534C13O611C15O623C17O639C22O659C28O663C34O709C35O716C36O723C41O739C46O739C54O924C60O924C65O913C70O986C77O996C80O1001C85O1001C98O986C104O1035C108O1052C109O1059C110O1094C116O1094C121O1140C123O1196C129O1196C134O1181C142O1260C150O1258C160O1308C162O1324C172O1343C182O1350C187O1417C195O1417C200O1382C205O1488C213O1488C218O1474C223O1522C226O1568C233O1522C238O1596C240O1596C241O1620C243O1636,,
code-creation,JS,10,61953,0x72b2127a44,849,Module._findPath node:internal/modules/cjs/loader:615:28,0x72e2eb73c0,~
code-source-info,0x72b2127a44,63,18065,22153,C0O18118C6O18123C11O18123C17O18146C19O18173C27O18196C31O18216C37O18223C42O18236C43O18249C44O18274C46O18282C52O18293C60O18293C65O18291C69O18344C72O18351C79O18361C83O18375C85O18392C87O18405C88O18417C90O18455C96O18462C103O18474C106O18517C110O18524C115O18474C123O18533C125O18529C133O18606C137O18613C142O18563C150O18622C152O18618C157O18658C164O18665C172O18725C176O18732C181O18682C189O18737C197O18815C201O18822C206O18772C214O18827C219O18863C226O18870C234O18932C238O18939C243O18889C251O18944C255O19016C263O19016C271O19058C273O19054C278O19090C285O19097C297O19112C305O19154C307O19150C314O19183C325O19196C333O19238C335O19234C347O19269C355O19307C360O19342C367O19349C379O19366C387O19404C394O19440C403O19453C411O19495C413O19491C417O19544C419O19552C423O19600C427O19605C432O19605C438O19629C447O19633C454O19693C456O19758C458O19771C462O19763C467O19896C469O19901C473O19910C479O19928C483O19947C487O19958C492O19958C502O19985C511O19985C521O20013C524O20013C531O20028C536O20047C538O20068C542O20122C545O20122C551O20162C553O20193C555O20216C556O20253C560O20258C565O20258C572O20293C574O20319C579O20319C584O20340C588O20368C589O20375C594O20402C598O20427C607O20431C613O20484C617O20500C622O20500C630O20550C635O20561C642O20610C651O20614C657O21254C661O21270C666O21270C674O21316C679O21327C684O21374C688O21445C692O21481C701O21506C707O21488C712O21538C724O21549C730O21607C736O21627C741O21712C745O21746C754O21771C760O21753C765O21799C780O21810C786O21866C790O21888C793O21895C800O21916C804O21934C806O21950C807O21981C812O21991C816O22023C821O22023C826O22076C829O22076C834O19780C839O19745C847O22138C848O22151,,
code-creation,JS,10,62108,0x72b212804c,45,isAbsolute node:path:1159:13,0x72e2e9b0e0,~
code-source-info,0x72b212804c,34,35583,35729,C0O35596C8O35596C13O35642C19O35649C26O35667C31O35667C39O35706C41O35702C44O35725,,
code-creation,JS,10,62176,0x72b21281dc,79,stat node:internal/modules/cjs/loader:191:14,0x72e2eb6a20,~
code-source-info,0x72b21281dc,63,5331,5732,C0O5346C5O5362C10O5362C17O5392C23O5437C26O5447C31O5447C37O5466C39O5494C41O5508C42O5532C47O5532C52O5564C57O5597C62O5677C65O5687C70O5687C76O5716C78O5730,,
code-creation,JS,10,62210,0x72b2128314,3,toNamespacedPath node:path:1269:19,0x72e2e9b1e8,~
code-source-info,0x72b2128314,34,38744,38804,C0O38788C2O38800,,
code-creation,JS,10,62258,0x72b212841c,42,toRealPath node:internal/modules/helpers:54:20,0x72e2eb8538,~
code-source-info,0x72b212841c,64,1545,1658,C0O1563C5O1573C10O1586C17O1606C20O1617C28O1636C35O1573C41O1656,,
code-creation,JS,10,62573,0x72b2128acc,933,realpathSync node:fs:2625:22,0x72e2eadc30,~
script-source,55,node:fs,// Copyright Joyent\x2C Inc. and other Node contributors.\n//\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\n// copy of this software and associated documentation files (the\n// "Software")\x2C to deal in the Software without restriction\x2C including\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\n// persons to whom the Software is furnished to do so\x2C subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// Maintainers\x2C keep in mind that ES1-style octal literals (`0666`) are not\n// allowed in strict mode. Use ES6-style octal literals instead (`0o666`).\n\n'use strict';\n\nconst {\n  ArrayPrototypePush\x2C\n  BigIntPrototypeToString\x2C\n  Boolean\x2C\n  MathMax\x2C\n  Number\x2C\n  ObjectDefineProperties\x2C\n  ObjectDefineProperty\x2C\n  Promise\x2C\n  PromiseResolve\x2C\n  ReflectApply\x2C\n  SafeMap\x2C\n  SafeSet\x2C\n  StringPrototypeCharCodeAt\x2C\n  StringPrototypeIndexOf\x2C\n  StringPrototypeSlice\x2C\n  uncurryThis\x2C\n} = primordials;\n\nconst { fs: constants } = internalBinding('constants');\nconst {\n  S_IFIFO\x2C\n  S_IFLNK\x2C\n  S_IFMT\x2C\n  S_IFREG\x2C\n  S_IFSOCK\x2C\n  F_OK\x2C\n  R_OK\x2C\n  W_OK\x2C\n  X_OK\x2C\n  O_WRONLY\x2C\n  O_SYMLINK\x2C\n} = constants;\n\nconst pathModule = require('path');\nconst { isAbsolute } = pathModule;\nconst { isArrayBufferView } = require('internal/util/types');\n\nconst binding = internalBinding('fs');\n\nconst { createBlobFromFilePath } = require('internal/blob');\n\nconst { Buffer } = require('buffer');\nconst { isBuffer: BufferIsBuffer } = Buffer;\nconst BufferToString = uncurryThis(Buffer.prototype.toString);\nconst {\n  aggregateTwoErrors\x2C\n  codes: {\n    ERR_ACCESS_DENIED\x2C\n    ERR_FS_FILE_TOO_LARGE\x2C\n    ERR_INVALID_ARG_VALUE\x2C\n  }\x2C\n  AbortError\x2C\n} = require('internal/errors');\n\nconst {\n  FSReqCallback\x2C\n  statValues\x2C\n} = binding;\nconst { toPathIfFileURL } = require('internal/url');\nconst {\n  customPromisifyArgs: kCustomPromisifyArgsSymbol\x2C\n  kEmptyObject\x2C\n  promisify: {\n    custom: kCustomPromisifiedSymbol\x2C\n  }\x2C\n  SideEffectFreeRegExpPrototypeExec\x2C\n  defineLazyProperties\x2C\n} = require('internal/util');\nconst {\n  constants: {\n    kIoMaxLength\x2C\n    kMaxUserId\x2C\n  }\x2C\n  copyObject\x2C\n  Dirent\x2C\n  emitRecursiveRmdirWarning\x2C\n  getDirent\x2C\n  getDirents\x2C\n  getOptions\x2C\n  getValidatedFd\x2C\n  getValidatedPath\x2C\n  getValidMode\x2C\n  handleErrorFromBinding\x2C\n  possiblyTransformPath\x2C\n  preprocessSymlinkDestination\x2C\n  Stats\x2C\n  getStatFsFromBinding\x2C\n  getStatsFromBinding\x2C\n  realpathCacheKey\x2C\n  stringToFlags\x2C\n  stringToSymlinkType\x2C\n  toUnixTimestamp\x2C\n  validateBufferArray\x2C\n  validateCpOptions\x2C\n  validateOffsetLengthRead\x2C\n  validateOffsetLengthWrite\x2C\n  validatePath\x2C\n  validatePosition\x2C\n  validateRmOptions\x2C\n  validateRmOptionsSync\x2C\n  validateRmdirOptions\x2C\n  validateStringAfterArrayBufferView\x2C\n  warnOnNonPortableTemplate\x2C\n} = require('internal/fs/utils');\nconst {\n  CHAR_FORWARD_SLASH\x2C\n  CHAR_BACKWARD_SLASH\x2C\n} = require('internal/constants');\nconst {\n  isInt32\x2C\n  parseFileMode\x2C\n  validateBoolean\x2C\n  validateBuffer\x2C\n  validateEncoding\x2C\n  validateFunction\x2C\n  validateInteger\x2C\n  validateObject\x2C\n  validateString\x2C\n  kValidateObjectAllowNullable\x2C\n} = require('internal/validators');\n\nconst permission = require('internal/process/permission');\n\nlet truncateWarn = true;\nlet fs;\n\n// Lazy loaded\nlet cpFn;\nlet cpSyncFn;\nlet promises = null;\nlet ReadStream;\nlet WriteStream;\nlet rimraf;\nlet rimrafSync;\nlet kResistStopPropagation;\n\n// These have to be separate because of how graceful-fs happens to do it's\n// monkeypatching.\nlet FileReadStream;\nlet FileWriteStream;\n\nconst isWindows = process.platform === 'win32';\nconst isOSX = process.platform === 'darwin';\n\nfunction showTruncateDeprecation() {\n  if (truncateWarn) {\n    process.emitWarning(\n      'Using fs.truncate with a file descriptor is deprecated. Please use ' +\n      'fs.ftruncate with a file descriptor instead.'\x2C\n      'DeprecationWarning'\x2C 'DEP0081');\n    truncateWarn = false;\n  }\n}\n\nfunction maybeCallback(cb) {\n  validateFunction(cb\x2C 'cb');\n\n  return cb;\n}\n\n// Ensure that callbacks run in the global context. Only use this function\n// for callbacks that are passed to the binding layer\x2C callbacks that are\n// invoked from JS already run in the proper scope.\nfunction makeCallback(cb) {\n  validateFunction(cb\x2C 'cb');\n\n  return (...args) => ReflectApply(cb\x2C this\x2C args);\n}\n\n// Special case of `makeCallback()` that is specific to async `*stat()` calls as\n// an optimization\x2C since the data passed back to the callback needs to be\n// transformed anyway.\nfunction makeStatsCallback(cb) {\n  validateFunction(cb\x2C 'cb');\n\n  return (err\x2C stats) => {\n    if (err) return cb(err);\n    cb(err\x2C getStatsFromBinding(stats));\n  };\n}\n\nconst isFd = isInt32;\n\nfunction isFileType(stats\x2C fileType) {\n  // Use stats array directly to avoid creating an fs.Stats instance just for\n  // our internal use.\n  let mode = stats[1];\n  if (typeof mode === 'bigint')\n    mode = Number(mode);\n  return (mode & S_IFMT) === fileType;\n}\n\n/**\n * Tests a user's permissions for the file or directory\n * specified by `path`.\n * @param {string | Buffer | URL} path\n * @param {number} [mode]\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction access(path\x2C mode\x2C callback) {\n  if (typeof mode === 'function') {\n    callback = mode;\n    mode = F_OK;\n  }\n\n  path = getValidatedPath(path);\n  mode = getValidMode(mode\x2C 'access');\n  callback = makeCallback(callback);\n\n  const req = new FSReqCallback();\n  req.oncomplete = callback;\n  binding.access(pathModule.toNamespacedPath(path)\x2C mode\x2C req);\n}\n\n/**\n * Synchronously tests a user's permissions for the file or\n * directory specified by `path`.\n * @param {string | Buffer | URL} path\n * @param {number} [mode]\n * @returns {void}\n */\nfunction accessSync(path\x2C mode) {\n  path = getValidatedPath(path);\n  mode = getValidMode(mode\x2C 'access');\n\n  binding.access(pathModule.toNamespacedPath(path)\x2C mode);\n}\n\n/**\n * Tests whether or not the given path exists.\n * @param {string | Buffer | URL} path\n * @param {(exists?: boolean) => any} callback\n * @returns {void}\n */\nfunction exists(path\x2C callback) {\n  maybeCallback(callback);\n\n  function suppressedCallback(err) {\n    callback(err ? false : true);\n  }\n\n  try {\n    fs.access(path\x2C F_OK\x2C suppressedCallback);\n  } catch {\n    return callback(false);\n  }\n}\n\nObjectDefineProperty(exists\x2C kCustomPromisifiedSymbol\x2C {\n  __proto__: null\x2C\n  value: function exists(path) { // eslint-disable-line func-name-matching\n    return new Promise((resolve) => fs.exists(path\x2C resolve));\n  }\x2C\n});\n\n// fs.existsSync never throws\x2C it only returns true or false.\n// Since fs.existsSync never throws\x2C users have established\n// the expectation that passing invalid arguments to it\x2C even like\n// fs.existsSync()\x2C would only get a false in return\x2C so we cannot signal\n// validation errors to users properly out of compatibility concerns.\n// TODO(joyeecheung): deprecate the never-throw-on-invalid-arguments behavior\n/**\n * Synchronously tests whether or not the given path exists.\n * @param {string | Buffer | URL} path\n * @returns {boolean}\n */\nfunction existsSync(path) {\n  try {\n    path = getValidatedPath(path);\n  } catch {\n    return false;\n  }\n\n  return binding.existsSync(pathModule.toNamespacedPath(path));\n}\n\nfunction readFileAfterOpen(err\x2C fd) {\n  const context = this.context;\n\n  if (err) {\n    context.callback(err);\n    return;\n  }\n\n  context.fd = fd;\n\n  const req = new FSReqCallback();\n  req.oncomplete = readFileAfterStat;\n  req.context = context;\n  binding.fstat(fd\x2C false\x2C req);\n}\n\nfunction readFileAfterStat(err\x2C stats) {\n  const context = this.context;\n\n  if (err)\n    return context.close(err);\n\n  // TODO(BridgeAR): Check if allocating a smaller chunk is better performance\n  // wise\x2C similar to the promise based version (less peak memory and chunked\n  // stringify operations vs multiple C++/JS boundary crossings).\n  const size = context.size = isFileType(stats\x2C S_IFREG) ? stats[8] : 0;\n\n  if (size > kIoMaxLength) {\n    err = new ERR_FS_FILE_TOO_LARGE(size);\n    return context.close(err);\n  }\n\n  try {\n    if (size === 0) {\n      // TODO(BridgeAR): If an encoding is set\x2C use the StringDecoder to concat\n      // the result and reuse the buffer instead of allocating a new one.\n      context.buffers = [];\n    } else {\n      context.buffer = Buffer.allocUnsafeSlow(size);\n    }\n  } catch (err) {\n    return context.close(err);\n  }\n  context.read();\n}\n\nfunction checkAborted(signal\x2C callback) {\n  if (signal?.aborted) {\n    callback(new AbortError(undefined\x2C { cause: signal?.reason }));\n    return true;\n  }\n  return false;\n}\n\n/**\n * Asynchronously reads the entire contents of a file.\n * @param {string | Buffer | URL | number} path\n * @param {{\n *   encoding?: string | null;\n *   flag?: string;\n *   signal?: AbortSignal;\n *   } | string} [options]\n * @param {(\n *   err?: Error\x2C\n *   data?: string | Buffer\n *   ) => any} callback\n * @returns {void}\n */\nfunction readFile(path\x2C options\x2C callback) {\n  callback = maybeCallback(callback || options);\n  options = getOptions(options\x2C { flag: 'r' });\n  const ReadFileContext = require('internal/fs/read/context');\n  const context = new ReadFileContext(callback\x2C options.encoding);\n  context.isUserFd = isFd(path); // File descriptor ownership\n\n  if (options.signal) {\n    context.signal = options.signal;\n  }\n  if (context.isUserFd) {\n    process.nextTick(function tick(context) {\n      ReflectApply(readFileAfterOpen\x2C { context }\x2C [null\x2C path]);\n    }\x2C context);\n    return;\n  }\n\n  if (checkAborted(options.signal\x2C callback))\n    return;\n\n  const flagsNumber = stringToFlags(options.flag\x2C 'options.flag');\n  path = getValidatedPath(path);\n\n  const req = new FSReqCallback();\n  req.context = context;\n  req.oncomplete = readFileAfterOpen;\n  binding.open(pathModule.toNamespacedPath(path)\x2C\n               flagsNumber\x2C\n               0o666\x2C\n               req);\n}\n\nfunction tryStatSync(fd\x2C isUserFd) {\n  const stats = binding.fstat(fd\x2C false\x2C undefined\x2C true /* shouldNotThrow */);\n  if (stats === undefined && !isUserFd) {\n    fs.closeSync(fd);\n  }\n  return stats;\n}\n\nfunction tryCreateBuffer(size\x2C fd\x2C isUserFd) {\n  let threw = true;\n  let buffer;\n  try {\n    if (size > kIoMaxLength) {\n      throw new ERR_FS_FILE_TOO_LARGE(size);\n    }\n    buffer = Buffer.allocUnsafe(size);\n    threw = false;\n  } finally {\n    if (threw && !isUserFd) fs.closeSync(fd);\n  }\n  return buffer;\n}\n\nfunction tryReadSync(fd\x2C isUserFd\x2C buffer\x2C pos\x2C len) {\n  let threw = true;\n  let bytesRead;\n  try {\n    bytesRead = fs.readSync(fd\x2C buffer\x2C pos\x2C len);\n    threw = false;\n  } finally {\n    if (threw && !isUserFd) fs.closeSync(fd);\n  }\n  return bytesRead;\n}\n\n/**\n * Synchronously reads the entire contents of a file.\n * @param {string | Buffer | URL | number} path\n * @param {{\n *   encoding?: string | null;\n *   flag?: string;\n *   }} [options]\n * @returns {string | Buffer}\n */\nfunction readFileSync(path\x2C options) {\n  options = getOptions(options\x2C { flag: 'r' });\n\n  if (options.encoding === 'utf8' || options.encoding === 'utf-8') {\n    if (!isInt32(path)) {\n      path = pathModule.toNamespacedPath(getValidatedPath(path));\n    }\n    return binding.readFileUtf8(path\x2C stringToFlags(options.flag));\n  }\n\n  const isUserFd = isFd(path); // File descriptor ownership\n  const fd = isUserFd ? path : fs.openSync(path\x2C options.flag\x2C 0o666);\n\n  const stats = tryStatSync(fd\x2C isUserFd);\n  const size = isFileType(stats\x2C S_IFREG) ? stats[8] : 0;\n  let pos = 0;\n  let buffer; // Single buffer with file data\n  let buffers; // List for when size is unknown\n\n  if (size === 0) {\n    buffers = [];\n  } else {\n    buffer = tryCreateBuffer(size\x2C fd\x2C isUserFd);\n  }\n\n  let bytesRead;\n\n  if (size !== 0) {\n    do {\n      bytesRead = tryReadSync(fd\x2C isUserFd\x2C buffer\x2C pos\x2C size - pos);\n      pos += bytesRead;\n    } while (bytesRead !== 0 && pos < size);\n  } else {\n    do {\n      // The kernel lies about many files.\n      // Go ahead and try to read some bytes.\n      buffer = Buffer.allocUnsafe(8192);\n      bytesRead = tryReadSync(fd\x2C isUserFd\x2C buffer\x2C 0\x2C 8192);\n      if (bytesRead !== 0) {\n        ArrayPrototypePush(buffers\x2C buffer.slice(0\x2C bytesRead));\n      }\n      pos += bytesRead;\n    } while (bytesRead !== 0);\n  }\n\n  if (!isUserFd)\n    fs.closeSync(fd);\n\n  if (size === 0) {\n    // Data was collected into the buffers list.\n    buffer = Buffer.concat(buffers\x2C pos);\n  } else if (pos < size) {\n    buffer = buffer.slice(0\x2C pos);\n  }\n\n  if (options.encoding) buffer = buffer.toString(options.encoding);\n  return buffer;\n}\n\nfunction defaultCloseCallback(err) {\n  if (err != null) throw err;\n}\n\n/**\n * Closes the file descriptor.\n * @param {number} fd\n * @param {(err?: Error) => any} [callback]\n * @returns {void}\n */\nfunction close(fd\x2C callback = defaultCloseCallback) {\n  if (callback !== defaultCloseCallback)\n    callback = makeCallback(callback);\n\n  const req = new FSReqCallback();\n  req.oncomplete = callback;\n  binding.close(getValidatedFd(fd)\x2C req);\n}\n\n/**\n * Synchronously closes the file descriptor.\n * @param {number} fd\n * @returns {void}\n */\nfunction closeSync(fd) {\n  binding.close(getValidatedFd(fd));\n}\n\n/**\n * Asynchronously opens a file.\n * @param {string | Buffer | URL} path\n * @param {string | number} [flags]\n * @param {string | number} [mode]\n * @param {(\n *   err?: Error\x2C\n *   fd?: number\n *   ) => any} callback\n * @returns {void}\n */\nfunction open(path\x2C flags\x2C mode\x2C callback) {\n  path = getValidatedPath(path);\n  if (arguments.length < 3) {\n    callback = flags;\n    flags = 'r';\n    mode = 0o666;\n  } else if (typeof mode === 'function') {\n    callback = mode;\n    mode = 0o666;\n  } else {\n    mode = parseFileMode(mode\x2C 'mode'\x2C 0o666);\n  }\n  const flagsNumber = stringToFlags(flags);\n  callback = makeCallback(callback);\n\n  const req = new FSReqCallback();\n  req.oncomplete = callback;\n\n  binding.open(pathModule.toNamespacedPath(path)\x2C\n               flagsNumber\x2C\n               mode\x2C\n               req);\n}\n\n/**\n * Synchronously opens a file.\n * @param {string | Buffer | URL} path\n * @param {string | number} [flags]\n * @param {string | number} [mode]\n * @returns {number}\n */\nfunction openSync(path\x2C flags\x2C mode) {\n  path = getValidatedPath(path);\n\n  return binding.open(\n    pathModule.toNamespacedPath(path)\x2C\n    stringToFlags(flags)\x2C\n    parseFileMode(mode\x2C 'mode'\x2C 0o666)\x2C\n  );\n}\n\n/**\n * @param {string | Buffer | URL } path\n * @param {{\n *   type?: string;\n *   }} [options]\n * @returns {Promise<Blob>}\n */\nfunction openAsBlob(path\x2C options = kEmptyObject) {\n  validateObject(options\x2C 'options');\n  const type = options.type || '';\n  validateString(type\x2C 'options.type');\n  // The underlying implementation here returns the Blob synchronously for now.\n  // To give ourselves flexibility to maybe return the Blob asynchronously\x2C\n  // this API returns a Promise.\n  path = getValidatedPath(path);\n  return PromiseResolve(createBlobFromFilePath(pathModule.toNamespacedPath(path)\x2C { type }));\n}\n\n/**\n * Reads file from the specified `fd` (file descriptor).\n * @param {number} fd\n * @param {Buffer | TypedArray | DataView} buffer\n * @param {number} offsetOrOptions\n * @param {number} length\n * @param {number | bigint | null} position\n * @param {(\n *   err?: Error\x2C\n *   bytesRead?: number\x2C\n *   buffer?: Buffer\n *   ) => any} callback\n * @returns {void}\n */\nfunction read(fd\x2C buffer\x2C offsetOrOptions\x2C length\x2C position\x2C callback) {\n  fd = getValidatedFd(fd);\n\n  let offset = offsetOrOptions;\n  let params = null;\n  if (arguments.length <= 4) {\n    if (arguments.length === 4) {\n      // This is fs.read(fd\x2C buffer\x2C options\x2C callback)\n      validateObject(offsetOrOptions\x2C 'options'\x2C kValidateObjectAllowNullable);\n      callback = length;\n      params = offsetOrOptions;\n    } else if (arguments.length === 3) {\n      // This is fs.read(fd\x2C bufferOrParams\x2C callback)\n      if (!isArrayBufferView(buffer)) {\n        // This is fs.read(fd\x2C params\x2C callback)\n        params = buffer;\n        ({ buffer = Buffer.alloc(16384) } = params ?? kEmptyObject);\n      }\n      callback = offsetOrOptions;\n    } else {\n      // This is fs.read(fd\x2C callback)\n      callback = buffer;\n      buffer = Buffer.alloc(16384);\n    }\n\n    if (params !== undefined) {\n      validateObject(params\x2C 'options'\x2C kValidateObjectAllowNullable);\n    }\n    ({\n      offset = 0\x2C\n      length = buffer?.byteLength - offset\x2C\n      position = null\x2C\n    } = params ?? kEmptyObject);\n  }\n\n  validateBuffer(buffer);\n  callback = maybeCallback(callback);\n\n  if (offset == null) {\n    offset = 0;\n  } else {\n    validateInteger(offset\x2C 'offset'\x2C 0);\n  }\n\n  length |= 0;\n\n  if (length === 0) {\n    return process.nextTick(function tick() {\n      callback(null\x2C 0\x2C buffer);\n    });\n  }\n\n  if (buffer.byteLength === 0) {\n    throw new ERR_INVALID_ARG_VALUE('buffer'\x2C buffer\x2C\n                                    'is empty and cannot be written');\n  }\n\n  validateOffsetLengthRead(offset\x2C length\x2C buffer.byteLength);\n\n  if (position == null) {\n    position = -1;\n  } else {\n    validatePosition(position\x2C 'position'\x2C length);\n  }\n\n  function wrapper(err\x2C bytesRead) {\n    // Retain a reference to buffer so that it can't be GC'ed too soon.\n    callback(err\x2C bytesRead || 0\x2C buffer);\n  }\n\n  const req = new FSReqCallback();\n  req.oncomplete = wrapper;\n\n  binding.read(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C req);\n}\n\nObjectDefineProperty(read\x2C kCustomPromisifyArgsSymbol\x2C\n                     { __proto__: null\x2C value: ['bytesRead'\x2C 'buffer']\x2C enumerable: false });\n\n/**\n * Synchronously reads the file from the\n * specified `fd` (file descriptor).\n * @param {number} fd\n * @param {Buffer | TypedArray | DataView} buffer\n * @param {{\n *   offset?: number;\n *   length?: number;\n *   position?: number | bigint | null;\n *   }} [offsetOrOptions]\n * @param {number} [length]\n * @param {number} [position]\n * @returns {number}\n */\nfunction readSync(fd\x2C buffer\x2C offsetOrOptions\x2C length\x2C position) {\n  fd = getValidatedFd(fd);\n\n  validateBuffer(buffer);\n\n  let offset = offsetOrOptions;\n  if (arguments.length <= 3 || typeof offsetOrOptions === 'object') {\n    if (offsetOrOptions !== undefined) {\n      validateObject(offsetOrOptions\x2C 'options'\x2C kValidateObjectAllowNullable);\n    }\n\n    ({\n      offset = 0\x2C\n      length = buffer.byteLength - offset\x2C\n      position = null\x2C\n    } = offsetOrOptions ?? kEmptyObject);\n  }\n\n  if (offset === undefined) {\n    offset = 0;\n  } else {\n    validateInteger(offset\x2C 'offset'\x2C 0);\n  }\n\n  length |= 0;\n\n  if (length === 0) {\n    return 0;\n  }\n\n  if (buffer.byteLength === 0) {\n    throw new ERR_INVALID_ARG_VALUE('buffer'\x2C buffer\x2C\n                                    'is empty and cannot be written');\n  }\n\n  validateOffsetLengthRead(offset\x2C length\x2C buffer.byteLength);\n\n  if (position == null) {\n    position = -1;\n  } else {\n    validatePosition(position\x2C 'position'\x2C length);\n  }\n\n  return binding.read(fd\x2C buffer\x2C offset\x2C length\x2C position);\n}\n\n/**\n * Reads file from the specified `fd` (file descriptor)\n * and writes to an array of `ArrayBufferView`s.\n * @param {number} fd\n * @param {ArrayBufferView[]} buffers\n * @param {number | null} [position]\n * @param {(\n *   err?: Error\x2C\n *   bytesRead?: number\x2C\n *   buffers?: ArrayBufferView[];\n *   ) => any} callback\n * @returns {void}\n */\nfunction readv(fd\x2C buffers\x2C position\x2C callback) {\n  function wrapper(err\x2C read) {\n    callback(err\x2C read || 0\x2C buffers);\n  }\n\n  fd = getValidatedFd(fd);\n  validateBufferArray(buffers);\n  callback = maybeCallback(callback || position);\n\n  const req = new FSReqCallback();\n  req.oncomplete = wrapper;\n\n  if (typeof position !== 'number')\n    position = null;\n\n  binding.readBuffers(fd\x2C buffers\x2C position\x2C req);\n}\n\nObjectDefineProperty(readv\x2C kCustomPromisifyArgsSymbol\x2C\n                     { __proto__: null\x2C value: ['bytesRead'\x2C 'buffers']\x2C enumerable: false });\n\n/**\n * Synchronously reads file from the\n * specified `fd` (file descriptor) and writes to an array\n * of `ArrayBufferView`s.\n * @param {number} fd\n * @param {ArrayBufferView[]} buffers\n * @param {number | null} [position]\n * @returns {number}\n */\nfunction readvSync(fd\x2C buffers\x2C position) {\n  fd = getValidatedFd(fd);\n  validateBufferArray(buffers);\n\n  if (typeof position !== 'number')\n    position = null;\n\n  return binding.readBuffers(fd\x2C buffers\x2C position);\n}\n\n/**\n * Writes `buffer` to the specified `fd` (file descriptor).\n * @param {number} fd\n * @param {Buffer | TypedArray | DataView | string} buffer\n * @param {number | object} [offsetOrOptions]\n * @param {number} [length]\n * @param {number | null} [position]\n * @param {(\n *   err?: Error\x2C\n *   bytesWritten?: number;\n *   buffer?: Buffer | TypedArray | DataView\n *   ) => any} callback\n * @returns {void}\n */\nfunction write(fd\x2C buffer\x2C offsetOrOptions\x2C length\x2C position\x2C callback) {\n  function wrapper(err\x2C written) {\n    // Retain a reference to buffer so that it can't be GC'ed too soon.\n    callback(err\x2C written || 0\x2C buffer);\n  }\n\n  fd = getValidatedFd(fd);\n\n  let offset = offsetOrOptions;\n  if (isArrayBufferView(buffer)) {\n    callback = maybeCallback(callback || position || length || offset);\n\n    if (typeof offset === 'object') {\n      ({\n        offset = 0\x2C\n        length = buffer.byteLength - offset\x2C\n        position = null\x2C\n      } = offsetOrOptions ?? kEmptyObject);\n    }\n\n    if (offset == null || typeof offset === 'function') {\n      offset = 0;\n    } else {\n      validateInteger(offset\x2C 'offset'\x2C 0);\n    }\n    if (typeof length !== 'number')\n      length = buffer.byteLength - offset;\n    if (typeof position !== 'number')\n      position = null;\n    validateOffsetLengthWrite(offset\x2C length\x2C buffer.byteLength);\n\n    const req = new FSReqCallback();\n    req.oncomplete = wrapper;\n    binding.writeBuffer(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C req);\n    return;\n  }\n\n  validateStringAfterArrayBufferView(buffer\x2C 'buffer');\n\n  if (typeof position !== 'function') {\n    if (typeof offset === 'function') {\n      position = offset;\n      offset = null;\n    } else {\n      position = length;\n    }\n    length = 'utf8';\n  }\n\n  const str = buffer;\n  validateEncoding(str\x2C length);\n  callback = maybeCallback(position);\n\n  const req = new FSReqCallback();\n  req.oncomplete = wrapper;\n  binding.writeString(fd\x2C str\x2C offset\x2C length\x2C req);\n}\n\nObjectDefineProperty(write\x2C kCustomPromisifyArgsSymbol\x2C\n                     { __proto__: null\x2C value: ['bytesWritten'\x2C 'buffer']\x2C enumerable: false });\n\n/**\n * Synchronously writes `buffer` to the\n * specified `fd` (file descriptor).\n * @param {number} fd\n * @param {Buffer | TypedArray | DataView | string} buffer\n * @param {{\n *   offset?: number;\n *   length?: number;\n *   position?: number | null;\n *   }} [offsetOrOptions]\n * @returns {number}\n */\nfunction writeSync(fd\x2C buffer\x2C offsetOrOptions\x2C length\x2C position) {\n  fd = getValidatedFd(fd);\n  const ctx = {};\n  let result;\n\n  let offset = offsetOrOptions;\n  if (isArrayBufferView(buffer)) {\n    if (typeof offset === 'object') {\n      ({\n        offset = 0\x2C\n        length = buffer.byteLength - offset\x2C\n        position = null\x2C\n      } = offsetOrOptions ?? kEmptyObject);\n    }\n    if (position === undefined)\n      position = null;\n    if (offset == null) {\n      offset = 0;\n    } else {\n      validateInteger(offset\x2C 'offset'\x2C 0);\n    }\n    if (typeof length !== 'number')\n      length = buffer.byteLength - offset;\n    validateOffsetLengthWrite(offset\x2C length\x2C buffer.byteLength);\n    result = binding.writeBuffer(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C\n                                 undefined\x2C ctx);\n  } else {\n    validateStringAfterArrayBufferView(buffer\x2C 'buffer');\n    validateEncoding(buffer\x2C length);\n\n    if (offset === undefined)\n      offset = null;\n    result = binding.writeString(fd\x2C buffer\x2C offset\x2C length\x2C\n                                 undefined\x2C ctx);\n  }\n  handleErrorFromBinding(ctx);\n  return result;\n}\n\n/**\n * Writes an array of `ArrayBufferView`s to the\n * specified `fd` (file descriptor).\n * @param {number} fd\n * @param {ArrayBufferView[]} buffers\n * @param {number | null} [position]\n * @param {(\n *   err?: Error\x2C\n *   bytesWritten?: number\x2C\n *   buffers?: ArrayBufferView[]\n *   ) => any} callback\n * @returns {void}\n */\nfunction writev(fd\x2C buffers\x2C position\x2C callback) {\n  function wrapper(err\x2C written) {\n    callback(err\x2C written || 0\x2C buffers);\n  }\n\n  fd = getValidatedFd(fd);\n  validateBufferArray(buffers);\n  callback = maybeCallback(callback || position);\n\n  if (buffers.length === 0) {\n    process.nextTick(callback\x2C null\x2C 0\x2C buffers);\n    return;\n  }\n\n  const req = new FSReqCallback();\n  req.oncomplete = wrapper;\n\n  if (typeof position !== 'number')\n    position = null;\n\n  binding.writeBuffers(fd\x2C buffers\x2C position\x2C req);\n}\n\nObjectDefineProperty(writev\x2C kCustomPromisifyArgsSymbol\x2C {\n  __proto__: null\x2C\n  value: ['bytesWritten'\x2C 'buffer']\x2C\n  enumerable: false\x2C\n});\n\n/**\n * Synchronously writes an array of `ArrayBufferView`s\n * to the specified `fd` (file descriptor).\n * @param {number} fd\n * @param {ArrayBufferView[]} buffers\n * @param {number | null} [position]\n * @returns {number}\n */\nfunction writevSync(fd\x2C buffers\x2C position) {\n  fd = getValidatedFd(fd);\n  validateBufferArray(buffers);\n\n  if (buffers.length === 0) {\n    return 0;\n  }\n\n  if (typeof position !== 'number')\n    position = null;\n\n  return binding.writeBuffers(fd\x2C buffers\x2C position);\n}\n\n/**\n * Asynchronously renames file at `oldPath` to\n * the pathname provided as `newPath`.\n * @param {string | Buffer | URL} oldPath\n * @param {string | Buffer | URL} newPath\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction rename(oldPath\x2C newPath\x2C callback) {\n  callback = makeCallback(callback);\n  oldPath = getValidatedPath(oldPath\x2C 'oldPath');\n  newPath = getValidatedPath(newPath\x2C 'newPath');\n  const req = new FSReqCallback();\n  req.oncomplete = callback;\n  binding.rename(pathModule.toNamespacedPath(oldPath)\x2C\n                 pathModule.toNamespacedPath(newPath)\x2C\n                 req);\n}\n\n\n/**\n * Synchronously renames file at `oldPath` to\n * the pathname provided as `newPath`.\n * @param {string | Buffer | URL} oldPath\n * @param {string | Buffer | URL} newPath\n * @returns {void}\n */\nfunction renameSync(oldPath\x2C newPath) {\n  oldPath = getValidatedPath(oldPath\x2C 'oldPath');\n  newPath = getValidatedPath(newPath\x2C 'newPath');\n  binding.rename(\n    pathModule.toNamespacedPath(oldPath)\x2C\n    pathModule.toNamespacedPath(newPath)\x2C\n  );\n}\n\n/**\n * Truncates the file.\n * @param {string | Buffer | URL} path\n * @param {number} [len]\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction truncate(path\x2C len\x2C callback) {\n  if (typeof path === 'number') {\n    showTruncateDeprecation();\n    return fs.ftruncate(path\x2C len\x2C callback);\n  }\n  if (typeof len === 'function') {\n    callback = len;\n    len = 0;\n  } else if (len === undefined) {\n    len = 0;\n  }\n\n  validateInteger(len\x2C 'len');\n  len = MathMax(0\x2C len);\n  callback = maybeCallback(callback);\n  fs.open(path\x2C 'r+'\x2C (er\x2C fd) => {\n    if (er) return callback(er);\n    const req = new FSReqCallback();\n    req.oncomplete = function oncomplete(er) {\n      fs.close(fd\x2C (er2) => {\n        callback(aggregateTwoErrors(er2\x2C er));\n      });\n    };\n    binding.ftruncate(fd\x2C len\x2C req);\n  });\n}\n\n/**\n * Synchronously truncates the file.\n * @param {string | Buffer | URL} path\n * @param {number} [len]\n * @returns {void}\n */\nfunction truncateSync(path\x2C len) {\n  if (typeof path === 'number') {\n    // legacy\n    showTruncateDeprecation();\n    return fs.ftruncateSync(path\x2C len);\n  }\n  if (len === undefined) {\n    len = 0;\n  }\n  // Allow error to be thrown\x2C but still close fd.\n  const fd = fs.openSync(path\x2C 'r+');\n  let ret;\n\n  try {\n    ret = fs.ftruncateSync(fd\x2C len);\n  } finally {\n    fs.closeSync(fd);\n  }\n  return ret;\n}\n\n/**\n * Truncates the file descriptor.\n * @param {number} fd\n * @param {number} [len]\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction ftruncate(fd\x2C len = 0\x2C callback) {\n  if (typeof len === 'function') {\n    callback = len;\n    len = 0;\n  }\n  validateInteger(len\x2C 'len');\n  len = MathMax(0\x2C len);\n  callback = makeCallback(callback);\n\n  const req = new FSReqCallback();\n  req.oncomplete = callback;\n  binding.ftruncate(fd\x2C len\x2C req);\n}\n\n/**\n * Synchronously truncates the file descriptor.\n * @param {number} fd\n * @param {number} [len]\n * @returns {void}\n */\nfunction ftruncateSync(fd\x2C len = 0) {\n  validateInteger(len\x2C 'len');\n  len = MathMax(0\x2C len);\n  binding.ftruncate(fd\x2C len);\n}\n\nfunction lazyLoadCp() {\n  if (cpFn === undefined) {\n    ({ cpFn } = require('internal/fs/cp/cp'));\n    cpFn = require('util').callbackify(cpFn);\n    ({ cpSyncFn } = require('internal/fs/cp/cp-sync'));\n  }\n}\n\nfunction lazyLoadRimraf() {\n  if (rimraf === undefined)\n    ({ rimraf\x2C rimrafSync } = require('internal/fs/rimraf'));\n}\n\n/**\n * Asynchronously removes a directory.\n * @param {string | Buffer | URL} path\n * @param {{\n *   maxRetries?: number;\n *   recursive?: boolean;\n *   retryDelay?: number;\n *   }} [options]\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction rmdir(path\x2C options\x2C callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = undefined;\n  }\n\n  callback = makeCallback(callback);\n  path = pathModule.toNamespacedPath(getValidatedPath(path));\n\n  if (options?.recursive) {\n    emitRecursiveRmdirWarning();\n    validateRmOptions(\n      path\x2C\n      { ...options\x2C force: false }\x2C\n      true\x2C\n      (err\x2C options) => {\n        if (err === false) {\n          const req = new FSReqCallback();\n          req.oncomplete = callback;\n          binding.rmdir(path\x2C req);\n          return;\n        }\n        if (err) {\n          return callback(err);\n        }\n\n        lazyLoadRimraf();\n        rimraf(path\x2C options\x2C callback);\n      });\n  } else {\n    validateRmdirOptions(options);\n    const req = new FSReqCallback();\n    req.oncomplete = callback;\n    binding.rmdir(path\x2C req);\n  }\n}\n\n/**\n * Synchronously removes a directory.\n * @param {string | Buffer | URL} path\n * @param {{\n *   maxRetries?: number;\n *   recursive?: boolean;\n *   retryDelay?: number;\n *   }} [options]\n * @returns {void}\n */\nfunction rmdirSync(path\x2C options) {\n  path = getValidatedPath(path);\n\n  if (options?.recursive) {\n    emitRecursiveRmdirWarning();\n    options = validateRmOptionsSync(path\x2C { ...options\x2C force: false }\x2C true);\n    if (options !== false) {\n      lazyLoadRimraf();\n      return rimrafSync(pathModule.toNamespacedPath(path)\x2C options);\n    }\n  } else {\n    validateRmdirOptions(options);\n  }\n\n  binding.rmdir(pathModule.toNamespacedPath(path));\n}\n\n/**\n * Asynchronously removes files and\n * directories (modeled on the standard POSIX `rm` utility).\n * @param {string | Buffer | URL} path\n * @param {{\n *   force?: boolean;\n *   maxRetries?: number;\n *   recursive?: boolean;\n *   retryDelay?: number;\n *   }} [options]\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction rm(path\x2C options\x2C callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = undefined;\n  }\n  path = getValidatedPath(path);\n\n  validateRmOptions(path\x2C options\x2C false\x2C (err\x2C options) => {\n    if (err) {\n      return callback(err);\n    }\n    lazyLoadRimraf();\n    return rimraf(pathModule.toNamespacedPath(path)\x2C options\x2C callback);\n  });\n}\n\n/**\n * Synchronously removes files and\n * directories (modeled on the standard POSIX `rm` utility).\n * @param {string | Buffer | URL} path\n * @param {{\n *   force?: boolean;\n *   maxRetries?: number;\n *   recursive?: boolean;\n *   retryDelay?: number;\n *   }} [options]\n * @returns {void}\n */\nfunction rmSync(path\x2C options) {\n  path = getValidatedPath(path);\n  options = validateRmOptionsSync(path\x2C options\x2C false);\n\n  lazyLoadRimraf();\n  return rimrafSync(pathModule.toNamespacedPath(path)\x2C options);\n}\n\n/**\n * Forces all currently queued I/O operations associated\n * with the file to the operating system's synchronized\n * I/O completion state.\n * @param {number} fd\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction fdatasync(fd\x2C callback) {\n  const req = new FSReqCallback();\n  req.oncomplete = makeCallback(callback);\n  binding.fdatasync(fd\x2C req);\n}\n\n/**\n * Synchronously forces all currently queued I/O operations\n * associated with the file to the operating\n * system's synchronized I/O completion state.\n * @param {number} fd\n * @returns {void}\n */\nfunction fdatasyncSync(fd) {\n  binding.fdatasync(fd);\n}\n\n/**\n * Requests for all data for the open file descriptor\n * to be flushed to the storage device.\n * @param {number} fd\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction fsync(fd\x2C callback) {\n  const req = new FSReqCallback();\n  req.oncomplete = makeCallback(callback);\n  binding.fsync(fd\x2C req);\n}\n\n/**\n * Synchronously requests for all data for the open\n * file descriptor to be flushed to the storage device.\n * @param {number} fd\n * @returns {void}\n */\nfunction fsyncSync(fd) {\n  binding.fsync(fd);\n}\n\n/**\n * Asynchronously creates a directory.\n * @param {string | Buffer | URL} path\n * @param {{\n *   recursive?: boolean;\n *   mode?: string | number;\n *   } | number} [options]\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction mkdir(path\x2C options\x2C callback) {\n  let mode = 0o777;\n  let recursive = false;\n  if (typeof options === 'function') {\n    callback = options;\n  } else if (typeof options === 'number' || typeof options === 'string') {\n    mode = options;\n  } else if (options) {\n    if (options.recursive !== undefined)\n      recursive = options.recursive;\n    if (options.mode !== undefined)\n      mode = options.mode;\n  }\n  callback = makeCallback(callback);\n  path = getValidatedPath(path);\n\n  validateBoolean(recursive\x2C 'options.recursive');\n\n  const req = new FSReqCallback();\n  req.oncomplete = callback;\n  binding.mkdir(pathModule.toNamespacedPath(path)\x2C\n                parseFileMode(mode\x2C 'mode')\x2C recursive\x2C req);\n}\n\n/**\n * Synchronously creates a directory.\n * @param {string | Buffer | URL} path\n * @param {{\n *   recursive?: boolean;\n *   mode?: string | number;\n *   } | number} [options]\n * @returns {string | void}\n */\nfunction mkdirSync(path\x2C options) {\n  let mode = 0o777;\n  let recursive = false;\n  if (typeof options === 'number' || typeof options === 'string') {\n    mode = options;\n  } else if (options) {\n    if (options.recursive !== undefined)\n      recursive = options.recursive;\n    if (options.mode !== undefined)\n      mode = options.mode;\n  }\n  path = getValidatedPath(path);\n  validateBoolean(recursive\x2C 'options.recursive');\n\n  const result = binding.mkdir(\n    pathModule.toNamespacedPath(path)\x2C\n    parseFileMode(mode\x2C 'mode')\x2C\n    recursive\x2C\n  );\n\n  if (recursive) {\n    return result;\n  }\n}\n\n/**\n * An iterative algorithm for reading the entire contents of the `basePath` directory.\n * This function does not validate `basePath` as a directory. It is passed directly to\n * `binding.readdir`.\n * @param {string} basePath\n * @param {{ encoding: string\x2C withFileTypes: boolean }} options\n * @returns {string[] | Dirent[]}\n */\nfunction readdirSyncRecursive(basePath\x2C options) {\n  const withFileTypes = Boolean(options.withFileTypes);\n  const encoding = options.encoding;\n\n  const readdirResults = [];\n  const pathsQueue = [basePath];\n\n  function read(path) {\n    const readdirResult = binding.readdir(\n      pathModule.toNamespacedPath(path)\x2C\n      encoding\x2C\n      withFileTypes\x2C\n    );\n\n    if (readdirResult === undefined) {\n      return;\n    }\n\n    if (withFileTypes) {\n      // Calling `readdir` with `withFileTypes=true`\x2C the result is an array of arrays.\n      // The first array is the names\x2C and the second array is the types.\n      // They are guaranteed to be the same length; hence\x2C setting `length` to the length\n      // of the first array within the result.\n      const length = readdirResult[0].length;\n      for (let i = 0; i < length; i++) {\n        const dirent = getDirent(path\x2C readdirResult[0][i]\x2C readdirResult[1][i]);\n        ArrayPrototypePush(readdirResults\x2C dirent);\n        if (dirent.isDirectory()) {\n          ArrayPrototypePush(pathsQueue\x2C pathModule.join(dirent.parentPath\x2C dirent.name));\n        }\n      }\n    } else {\n      for (let i = 0; i < readdirResult.length; i++) {\n        const resultPath = pathModule.join(path\x2C readdirResult[i]);\n        const relativeResultPath = pathModule.relative(basePath\x2C resultPath);\n        const stat = binding.internalModuleStat(resultPath);\n        ArrayPrototypePush(readdirResults\x2C relativeResultPath);\n        // 1 indicates directory\n        if (stat === 1) {\n          ArrayPrototypePush(pathsQueue\x2C resultPath);\n        }\n      }\n    }\n  }\n\n  for (let i = 0; i < pathsQueue.length; i++) {\n    read(pathsQueue[i]);\n  }\n\n  return readdirResults;\n}\n\n/**\n * Reads the contents of a directory.\n * @param {string | Buffer | URL} path\n * @param {string | {\n *   encoding?: string;\n *   withFileTypes?: boolean;\n *   recursive?: boolean;\n *   }} [options]\n * @param {(\n *   err?: Error\x2C\n *   files?: string[] | Buffer[] | Dirent[];\n *   ) => any} callback\n * @returns {void}\n */\nfunction readdir(path\x2C options\x2C callback) {\n  callback = makeCallback(typeof options === 'function' ? options : callback);\n  options = getOptions(options);\n  path = getValidatedPath(path);\n  if (options.recursive != null) {\n    validateBoolean(options.recursive\x2C 'options.recursive');\n  }\n\n  if (options.recursive) {\n    callback(null\x2C readdirSyncRecursive(path\x2C options));\n    return;\n  }\n\n  const req = new FSReqCallback();\n  if (!options.withFileTypes) {\n    req.oncomplete = callback;\n  } else {\n    req.oncomplete = (err\x2C result) => {\n      if (err) {\n        callback(err);\n        return;\n      }\n      getDirents(path\x2C result\x2C callback);\n    };\n  }\n  binding.readdir(pathModule.toNamespacedPath(path)\x2C options.encoding\x2C\n                  !!options.withFileTypes\x2C req);\n}\n\n/**\n * Synchronously reads the contents of a directory.\n * @param {string | Buffer | URL} path\n * @param {string | {\n *   encoding?: string;\n *   withFileTypes?: boolean;\n *   recursive?: boolean;\n *   }} [options]\n * @returns {string | Buffer[] | Dirent[]}\n */\nfunction readdirSync(path\x2C options) {\n  options = getOptions(options);\n  path = getValidatedPath(path);\n  if (options.recursive != null) {\n    validateBoolean(options.recursive\x2C 'options.recursive');\n  }\n\n  if (options.recursive) {\n    return readdirSyncRecursive(path\x2C options);\n  }\n\n  const result = binding.readdir(\n    pathModule.toNamespacedPath(path)\x2C\n    options.encoding\x2C\n    !!options.withFileTypes\x2C\n  );\n\n  return result !== undefined && options.withFileTypes ? getDirents(path\x2C result) : result;\n}\n\n/**\n * Invokes the callback with the `fs.Stats`\n * for the file descriptor.\n * @param {number} fd\n * @param {{ bigint?: boolean; }} [options]\n * @param {(\n *   err?: Error\x2C\n *   stats?: Stats\n *   ) => any} callback\n * @returns {void}\n */\nfunction fstat(fd\x2C options = { bigint: false }\x2C callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = kEmptyObject;\n  }\n  callback = makeStatsCallback(callback);\n\n  const req = new FSReqCallback(options.bigint);\n  req.oncomplete = callback;\n  binding.fstat(fd\x2C options.bigint\x2C req);\n}\n\n/**\n * Retrieves the `fs.Stats` for the symbolic link\n * referred to by the `path`.\n * @param {string | Buffer | URL} path\n * @param {{ bigint?: boolean; }} [options]\n * @param {(\n *   err?: Error\x2C\n *   stats?: Stats\n *   ) => any} callback\n * @returns {void}\n */\nfunction lstat(path\x2C options = { bigint: false }\x2C callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = kEmptyObject;\n  }\n  callback = makeStatsCallback(callback);\n  path = getValidatedPath(path);\n\n  const req = new FSReqCallback(options.bigint);\n  req.oncomplete = callback;\n  binding.lstat(pathModule.toNamespacedPath(path)\x2C options.bigint\x2C req);\n}\n\n/**\n * Asynchronously gets the stats of a file.\n * @param {string | Buffer | URL} path\n * @param {{ bigint?: boolean; }} [options]\n * @param {(\n *   err?: Error\x2C\n *   stats?: Stats\n *   ) => any} callback\n * @returns {void}\n */\nfunction stat(path\x2C options = { bigint: false }\x2C callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = kEmptyObject;\n  }\n  callback = makeStatsCallback(callback);\n  path = getValidatedPath(path);\n\n  const req = new FSReqCallback(options.bigint);\n  req.oncomplete = callback;\n  binding.stat(pathModule.toNamespacedPath(path)\x2C options.bigint\x2C req);\n}\n\nfunction statfs(path\x2C options = { bigint: false }\x2C callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = kEmptyObject;\n  }\n  callback = maybeCallback(callback);\n  path = getValidatedPath(path);\n  const req = new FSReqCallback(options.bigint);\n  req.oncomplete = (err\x2C stats) => {\n    if (err) {\n      return callback(err);\n    }\n\n    callback(err\x2C getStatFsFromBinding(stats));\n  };\n  binding.statfs(pathModule.toNamespacedPath(path)\x2C options.bigint\x2C req);\n}\n\n/**\n * Synchronously retrieves the `fs.Stats` for\n * the file descriptor.\n * @param {number} fd\n * @param {{\n *   bigint?: boolean;\n *   }} [options]\n * @returns {Stats | undefined}\n */\nfunction fstatSync(fd\x2C options = { bigint: false }) {\n  const stats = binding.fstat(fd\x2C options.bigint\x2C undefined\x2C false);\n  if (stats === undefined) {\n    return;\n  }\n  return getStatsFromBinding(stats);\n}\n\n/**\n * Synchronously retrieves the `fs.Stats` for\n * the symbolic link referred to by the `path`.\n * @param {string | Buffer | URL} path\n * @param {{\n *   bigint?: boolean;\n *   throwIfNoEntry?: boolean;\n *   }} [options]\n * @returns {Stats | undefined}\n */\nfunction lstatSync(path\x2C options = { bigint: false\x2C throwIfNoEntry: true }) {\n  path = getValidatedPath(path);\n  const stats = binding.lstat(\n    pathModule.toNamespacedPath(path)\x2C\n    options.bigint\x2C\n    undefined\x2C\n    options.throwIfNoEntry\x2C\n  );\n\n  if (stats === undefined) {\n    return;\n  }\n  return getStatsFromBinding(stats);\n}\n\n/**\n * Synchronously retrieves the `fs.Stats`\n * for the `path`.\n * @param {string | Buffer | URL} path\n * @param {{\n *   bigint?: boolean;\n *   throwIfNoEntry?: boolean;\n *   }} [options]\n * @returns {Stats}\n */\nfunction statSync(path\x2C options = { bigint: false\x2C throwIfNoEntry: true }) {\n  path = getValidatedPath(path);\n  const stats = binding.stat(\n    pathModule.toNamespacedPath(path)\x2C\n    options.bigint\x2C\n    undefined\x2C\n    options.throwIfNoEntry\x2C\n  );\n  if (stats === undefined) {\n    return undefined;\n  }\n  return getStatsFromBinding(stats);\n}\n\nfunction statfsSync(path\x2C options = { bigint: false }) {\n  path = getValidatedPath(path);\n  const stats = binding.statfs(pathModule.toNamespacedPath(path)\x2C options.bigint);\n  return getStatFsFromBinding(stats);\n}\n\n/**\n * Reads the contents of a symbolic link\n * referred to by `path`.\n * @param {string | Buffer | URL} path\n * @param {{ encoding?: string; } | string} [options]\n * @param {(\n *   err?: Error\x2C\n *   linkString?: string | Buffer\n *   ) => any} callback\n * @returns {void}\n */\nfunction readlink(path\x2C options\x2C callback) {\n  callback = makeCallback(typeof options === 'function' ? options : callback);\n  options = getOptions(options);\n  path = getValidatedPath(path\x2C 'oldPath');\n  const req = new FSReqCallback();\n  req.oncomplete = callback;\n  binding.readlink(pathModule.toNamespacedPath(path)\x2C options.encoding\x2C req);\n}\n\n/**\n * Synchronously reads the contents of a symbolic link\n * referred to by `path`.\n * @param {string | Buffer | URL} path\n * @param {{ encoding?: string; } | string} [options]\n * @returns {string | Buffer}\n */\nfunction readlinkSync(path\x2C options) {\n  options = getOptions(options);\n  path = getValidatedPath(path\x2C 'oldPath');\n  return binding.readlink(\n    pathModule.toNamespacedPath(path)\x2C\n    options.encoding\x2C\n  );\n}\n\n/**\n * Creates the link called `path` pointing to `target`.\n * @param {string | Buffer | URL} target\n * @param {string | Buffer | URL} path\n * @param {string | null} [type_]\n * @param {(err?: Error) => any} callback_\n * @returns {void}\n */\nfunction symlink(target\x2C path\x2C type_\x2C callback_) {\n  const type = (typeof type_ === 'string' ? type_ : null);\n  const callback = makeCallback(arguments[arguments.length - 1]);\n\n  if (permission.isEnabled()) {\n    // The permission model's security guarantees fall apart in the presence of\n    // relative symbolic links. Thus\x2C we have to prevent their creation.\n    if (BufferIsBuffer(target)) {\n      if (!isAbsolute(BufferToString(target))) {\n        callback(new ERR_ACCESS_DENIED('relative symbolic link target'));\n        return;\n      }\n    } else if (typeof target !== 'string' || !isAbsolute(toPathIfFileURL(target))) {\n      callback(new ERR_ACCESS_DENIED('relative symbolic link target'));\n      return;\n    }\n  }\n\n  target = getValidatedPath(target\x2C 'target');\n  path = getValidatedPath(path);\n\n  if (isWindows && type === null) {\n    let absoluteTarget;\n    try {\n      // Symlinks targets can be relative to the newly created path.\n      // Calculate absolute file name of the symlink target\x2C and check\n      // if it is a directory. Ignore resolve error to keep symlink\n      // errors consistent between platforms if invalid path is\n      // provided.\n      absoluteTarget = pathModule.resolve(path\x2C '..'\x2C target);\n    } catch {\n      // Continue regardless of error.\n    }\n    if (absoluteTarget !== undefined) {\n      stat(absoluteTarget\x2C (err\x2C stat) => {\n        const resolvedType = !err && stat.isDirectory() ? 'dir' : 'file';\n        const resolvedFlags = stringToSymlinkType(resolvedType);\n        const destination = preprocessSymlinkDestination(target\x2C\n                                                         resolvedType\x2C\n                                                         path);\n\n        const req = new FSReqCallback();\n        req.oncomplete = callback;\n        binding.symlink(destination\x2C\n                        pathModule.toNamespacedPath(path)\x2C resolvedFlags\x2C req);\n      });\n      return;\n    }\n  }\n\n  const destination = preprocessSymlinkDestination(target\x2C type\x2C path);\n\n  const flags = stringToSymlinkType(type);\n  const req = new FSReqCallback();\n  req.oncomplete = callback;\n  binding.symlink(destination\x2C pathModule.toNamespacedPath(path)\x2C flags\x2C req);\n}\n\n/**\n * Synchronously creates the link called `path`\n * pointing to `target`.\n * @param {string | Buffer | URL} target\n * @param {string | Buffer | URL} path\n * @param {string | null} [type]\n * @returns {void}\n */\nfunction symlinkSync(target\x2C path\x2C type) {\n  type = (typeof type === 'string' ? type : null);\n  if (isWindows && type === null) {\n    const absoluteTarget = pathModule.resolve(`${path}`\x2C '..'\x2C `${target}`);\n    if (statSync(absoluteTarget\x2C { throwIfNoEntry: false })?.isDirectory()) {\n      type = 'dir';\n    }\n  }\n\n  if (permission.isEnabled()) {\n    // The permission model's security guarantees fall apart in the presence of\n    // relative symbolic links. Thus\x2C we have to prevent their creation.\n    if (typeof target !== 'string' || !isAbsolute(toPathIfFileURL(target))) {\n      throw new ERR_ACCESS_DENIED('relative symbolic link target');\n    }\n  }\n\n  target = getValidatedPath(target\x2C 'target');\n  path = getValidatedPath(path);\n\n  binding.symlink(\n    preprocessSymlinkDestination(target\x2C type\x2C path)\x2C\n    pathModule.toNamespacedPath(path)\x2C\n    stringToSymlinkType(type)\x2C\n  );\n}\n\n/**\n * Creates a new link from the `existingPath`\n * to the `newPath`.\n * @param {string | Buffer | URL} existingPath\n * @param {string | Buffer | URL} newPath\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction link(existingPath\x2C newPath\x2C callback) {\n  callback = makeCallback(callback);\n\n  existingPath = getValidatedPath(existingPath\x2C 'existingPath');\n  newPath = getValidatedPath(newPath\x2C 'newPath');\n\n  const req = new FSReqCallback();\n  req.oncomplete = callback;\n\n  binding.link(pathModule.toNamespacedPath(existingPath)\x2C\n               pathModule.toNamespacedPath(newPath)\x2C\n               req);\n}\n\n/**\n * Synchronously creates a new link from the `existingPath`\n * to the `newPath`.\n * @param {string | Buffer | URL} existingPath\n * @param {string | Buffer | URL} newPath\n * @returns {void}\n */\nfunction linkSync(existingPath\x2C newPath) {\n  existingPath = getValidatedPath(existingPath\x2C 'existingPath');\n  newPath = getValidatedPath(newPath\x2C 'newPath');\n\n  binding.link(\n    pathModule.toNamespacedPath(existingPath)\x2C\n    pathModule.toNamespacedPath(newPath)\x2C\n  );\n}\n\n/**\n * Asynchronously removes a file or symbolic link.\n * @param {string | Buffer | URL} path\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction unlink(path\x2C callback) {\n  callback = makeCallback(callback);\n  path = getValidatedPath(path);\n  const req = new FSReqCallback();\n  req.oncomplete = callback;\n  binding.unlink(pathModule.toNamespacedPath(path)\x2C req);\n}\n\n/**\n * Synchronously removes a file or symbolic link.\n * @param {string | Buffer | URL} path\n * @returns {void}\n */\nfunction unlinkSync(path) {\n  path = pathModule.toNamespacedPath(getValidatedPath(path));\n  binding.unlink(path);\n}\n\n/**\n * Sets the permissions on the file.\n * @param {number} fd\n * @param {string | number} mode\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction fchmod(fd\x2C mode\x2C callback) {\n  mode = parseFileMode(mode\x2C 'mode');\n  callback = makeCallback(callback);\n\n  const req = new FSReqCallback();\n  req.oncomplete = callback;\n  binding.fchmod(fd\x2C mode\x2C req);\n}\n\n/**\n * Synchronously sets the permissions on the file.\n * @param {number} fd\n * @param {string | number} mode\n * @returns {void}\n */\nfunction fchmodSync(fd\x2C mode) {\n  binding.fchmod(\n    fd\x2C\n    parseFileMode(mode\x2C 'mode')\x2C\n  );\n}\n\n/**\n * Changes the permissions on a symbolic link.\n * @param {string | Buffer | URL} path\n * @param {number} mode\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction lchmod(path\x2C mode\x2C callback) {\n  callback = maybeCallback(callback);\n  mode = parseFileMode(mode\x2C 'mode');\n  fs.open(path\x2C O_WRONLY | O_SYMLINK\x2C (err\x2C fd) => {\n    if (err) {\n      callback(err);\n      return;\n    }\n    // Prefer to return the chmod error\x2C if one occurs\x2C\n    // but still try to close\x2C and report closing errors if they occur.\n    fs.fchmod(fd\x2C mode\x2C (err) => {\n      fs.close(fd\x2C (err2) => {\n        callback(aggregateTwoErrors(err2\x2C err));\n      });\n    });\n  });\n}\n\n/**\n * Synchronously changes the permissions on a symbolic link.\n * @param {string | Buffer | URL} path\n * @param {number} mode\n * @returns {void}\n */\nfunction lchmodSync(path\x2C mode) {\n  const fd = fs.openSync(path\x2C O_WRONLY | O_SYMLINK);\n\n  // Prefer to return the chmod error\x2C if one occurs\x2C\n  // but still try to close\x2C and report closing errors if they occur.\n  let ret;\n  try {\n    ret = fs.fchmodSync(fd\x2C mode);\n  } finally {\n    fs.closeSync(fd);\n  }\n  return ret;\n}\n\n/**\n * Asynchronously changes the permissions of a file.\n * @param {string | Buffer | URL} path\n * @param {string | number} mode\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction chmod(path\x2C mode\x2C callback) {\n  path = getValidatedPath(path);\n  mode = parseFileMode(mode\x2C 'mode');\n  callback = makeCallback(callback);\n\n  const req = new FSReqCallback();\n  req.oncomplete = callback;\n  binding.chmod(pathModule.toNamespacedPath(path)\x2C mode\x2C req);\n}\n\n/**\n * Synchronously changes the permissions of a file.\n * @param {string | Buffer | URL} path\n * @param {string | number} mode\n * @returns {void}\n */\nfunction chmodSync(path\x2C mode) {\n  path = getValidatedPath(path);\n  mode = parseFileMode(mode\x2C 'mode');\n\n  binding.chmod(\n    pathModule.toNamespacedPath(path)\x2C\n    mode\x2C\n  );\n}\n\n/**\n * Sets the owner of the symbolic link.\n * @param {string | Buffer | URL} path\n * @param {number} uid\n * @param {number} gid\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction lchown(path\x2C uid\x2C gid\x2C callback) {\n  callback = makeCallback(callback);\n  path = getValidatedPath(path);\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\n  const req = new FSReqCallback();\n  req.oncomplete = callback;\n  binding.lchown(pathModule.toNamespacedPath(path)\x2C uid\x2C gid\x2C req);\n}\n\n/**\n * Synchronously sets the owner of the symbolic link.\n * @param {string | Buffer | URL} path\n * @param {number} uid\n * @param {number} gid\n * @returns {void}\n */\nfunction lchownSync(path\x2C uid\x2C gid) {\n  path = getValidatedPath(path);\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\n  binding.lchown(\n    pathModule.toNamespacedPath(path)\x2C\n    uid\x2C\n    gid\x2C\n  );\n}\n\n/**\n * Sets the owner of the file.\n * @param {number} fd\n * @param {number} uid\n * @param {number} gid\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction fchown(fd\x2C uid\x2C gid\x2C callback) {\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\n  callback = makeCallback(callback);\n\n  const req = new FSReqCallback();\n  req.oncomplete = callback;\n  binding.fchown(getValidatedFd(fd)\x2C uid\x2C gid\x2C req);\n}\n\n/**\n * Synchronously sets the owner of the file.\n * @param {number} fd\n * @param {number} uid\n * @param {number} gid\n * @returns {void}\n */\nfunction fchownSync(fd\x2C uid\x2C gid) {\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\n\n  binding.fchown(getValidatedFd(fd)\x2C uid\x2C gid);\n}\n\n/**\n * Asynchronously changes the owner and group\n * of a file.\n * @param {string | Buffer | URL} path\n * @param {number} uid\n * @param {number} gid\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction chown(path\x2C uid\x2C gid\x2C callback) {\n  callback = makeCallback(callback);\n  path = getValidatedPath(path);\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\n\n  const req = new FSReqCallback();\n  req.oncomplete = callback;\n  binding.chown(pathModule.toNamespacedPath(path)\x2C uid\x2C gid\x2C req);\n}\n\n/**\n * Synchronously changes the owner and group\n * of a file.\n * @param {string | Buffer | URL} path\n * @param {number} uid\n * @param {number} gid\n * @returns {void}\n */\nfunction chownSync(path\x2C uid\x2C gid) {\n  path = getValidatedPath(path);\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\n  binding.chown(\n    pathModule.toNamespacedPath(path)\x2C\n    uid\x2C\n    gid\x2C\n  );\n}\n\n/**\n * Changes the file system timestamps of the object\n * referenced by `path`.\n * @param {string | Buffer | URL} path\n * @param {number | string | Date} atime\n * @param {number | string | Date} mtime\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction utimes(path\x2C atime\x2C mtime\x2C callback) {\n  callback = makeCallback(callback);\n  path = getValidatedPath(path);\n\n  const req = new FSReqCallback();\n  req.oncomplete = callback;\n  binding.utimes(pathModule.toNamespacedPath(path)\x2C\n                 toUnixTimestamp(atime)\x2C\n                 toUnixTimestamp(mtime)\x2C\n                 req);\n}\n\n/**\n * Synchronously changes the file system timestamps\n * of the object referenced by `path`.\n * @param {string | Buffer | URL} path\n * @param {number | string | Date} atime\n * @param {number | string | Date} mtime\n * @returns {void}\n */\nfunction utimesSync(path\x2C atime\x2C mtime) {\n  path = getValidatedPath(path);\n  binding.utimes(\n    pathModule.toNamespacedPath(path)\x2C\n    toUnixTimestamp(atime)\x2C\n    toUnixTimestamp(mtime)\x2C\n  );\n}\n\n/**\n * Changes the file system timestamps of the object\n * referenced by the supplied `fd` (file descriptor).\n * @param {number} fd\n * @param {number | string | Date} atime\n * @param {number | string | Date} mtime\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction futimes(fd\x2C atime\x2C mtime\x2C callback) {\n  atime = toUnixTimestamp(atime\x2C 'atime');\n  mtime = toUnixTimestamp(mtime\x2C 'mtime');\n  callback = makeCallback(callback);\n\n  const req = new FSReqCallback();\n  req.oncomplete = callback;\n  binding.futimes(fd\x2C atime\x2C mtime\x2C req);\n}\n\n/**\n * Synchronously changes the file system timestamps\n * of the object referenced by the\n * supplied `fd` (file descriptor).\n * @param {number} fd\n * @param {number | string | Date} atime\n * @param {number | string | Date} mtime\n * @returns {void}\n */\nfunction futimesSync(fd\x2C atime\x2C mtime) {\n  binding.futimes(\n    fd\x2C\n    toUnixTimestamp(atime\x2C 'atime')\x2C\n    toUnixTimestamp(mtime\x2C 'mtime')\x2C\n  );\n}\n\n/**\n * Changes the access and modification times of\n * a file in the same way as `fs.utimes()`.\n * @param {string | Buffer | URL} path\n * @param {number | string | Date} atime\n * @param {number | string | Date} mtime\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction lutimes(path\x2C atime\x2C mtime\x2C callback) {\n  callback = makeCallback(callback);\n  path = getValidatedPath(path);\n\n  const req = new FSReqCallback();\n  req.oncomplete = callback;\n  binding.lutimes(pathModule.toNamespacedPath(path)\x2C\n                  toUnixTimestamp(atime)\x2C\n                  toUnixTimestamp(mtime)\x2C\n                  req);\n}\n\n/**\n * Synchronously changes the access and modification\n * times of a file in the same way as `fs.utimesSync()`.\n * @param {string | Buffer | URL} path\n * @param {number | string | Date} atime\n * @param {number | string | Date} mtime\n * @returns {void}\n */\nfunction lutimesSync(path\x2C atime\x2C mtime) {\n  path = getValidatedPath(path);\n  binding.lutimes(\n    pathModule.toNamespacedPath(path)\x2C\n    toUnixTimestamp(atime)\x2C\n    toUnixTimestamp(mtime)\x2C\n  );\n}\n\nfunction writeAll(fd\x2C isUserFd\x2C buffer\x2C offset\x2C length\x2C signal\x2C flush\x2C callback) {\n  if (signal?.aborted) {\n    const abortError = new AbortError(undefined\x2C { cause: signal?.reason });\n    if (isUserFd) {\n      callback(abortError);\n    } else {\n      fs.close(fd\x2C (err) => {\n        callback(aggregateTwoErrors(err\x2C abortError));\n      });\n    }\n    return;\n  }\n  // write(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C callback)\n  fs.write(fd\x2C buffer\x2C offset\x2C length\x2C null\x2C (writeErr\x2C written) => {\n    if (writeErr) {\n      if (isUserFd) {\n        callback(writeErr);\n      } else {\n        fs.close(fd\x2C (err) => {\n          callback(aggregateTwoErrors(err\x2C writeErr));\n        });\n      }\n    } else if (written === length) {\n      if (!flush) {\n        if (isUserFd) {\n          callback(null);\n        } else {\n          fs.close(fd\x2C callback);\n        }\n      } else {\n        fs.fsync(fd\x2C (syncErr) => {\n          if (syncErr) {\n            if (isUserFd) {\n              callback(syncErr);\n            } else {\n              fs.close(fd\x2C (err) => {\n                callback(aggregateTwoErrors(err\x2C syncErr));\n              });\n            }\n          } else if (isUserFd) {\n            callback(null);\n          } else {\n            fs.close(fd\x2C callback);\n          }\n        });\n      }\n    } else {\n      offset += written;\n      length -= written;\n      writeAll(fd\x2C isUserFd\x2C buffer\x2C offset\x2C length\x2C signal\x2C flush\x2C callback);\n    }\n  });\n}\n\n/**\n * Asynchronously writes data to the file.\n * @param {string | Buffer | URL | number} path\n * @param {string | Buffer | TypedArray | DataView} data\n * @param {{\n *   encoding?: string | null;\n *   mode?: number;\n *   flag?: string;\n *   signal?: AbortSignal;\n *   flush?: boolean;\n *   } | string} [options]\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction writeFile(path\x2C data\x2C options\x2C callback) {\n  callback = maybeCallback(callback || options);\n  options = getOptions(options\x2C {\n    encoding: 'utf8'\x2C\n    mode: 0o666\x2C\n    flag: 'w'\x2C\n    flush: false\x2C\n  });\n  const flag = options.flag || 'w';\n  const flush = options.flush ?? false;\n\n  validateBoolean(flush\x2C 'options.flush');\n\n  if (!isArrayBufferView(data)) {\n    validateStringAfterArrayBufferView(data\x2C 'data');\n    data = Buffer.from(data\x2C options.encoding || 'utf8');\n  }\n\n  if (isFd(path)) {\n    const isUserFd = true;\n    const signal = options.signal;\n    writeAll(path\x2C isUserFd\x2C data\x2C 0\x2C data.byteLength\x2C signal\x2C flush\x2C callback);\n    return;\n  }\n\n  if (checkAborted(options.signal\x2C callback))\n    return;\n\n  fs.open(path\x2C flag\x2C options.mode\x2C (openErr\x2C fd) => {\n    if (openErr) {\n      callback(openErr);\n    } else {\n      const isUserFd = false;\n      const signal = options.signal;\n      writeAll(fd\x2C isUserFd\x2C data\x2C 0\x2C data.byteLength\x2C signal\x2C flush\x2C callback);\n    }\n  });\n}\n\n/**\n * Synchronously writes data to the file.\n * @param {string | Buffer | URL | number} path\n * @param {string | Buffer | TypedArray | DataView} data\n * @param {{\n *   encoding?: string | null;\n *   mode?: number;\n *   flag?: string;\n *   flush?: boolean;\n *   } | string} [options]\n * @returns {void}\n */\nfunction writeFileSync(path\x2C data\x2C options) {\n  options = getOptions(options\x2C {\n    encoding: 'utf8'\x2C\n    mode: 0o666\x2C\n    flag: 'w'\x2C\n    flush: false\x2C\n  });\n\n  const flush = options.flush ?? false;\n\n  validateBoolean(flush\x2C 'options.flush');\n\n  const flag = options.flag || 'w';\n\n  // C++ fast path for string data and UTF8 encoding\n  if (typeof data === 'string' && (options.encoding === 'utf8' || options.encoding === 'utf-8')) {\n    if (!isInt32(path)) {\n      path = pathModule.toNamespacedPath(getValidatedPath(path));\n    }\n\n    return binding.writeFileUtf8(\n      path\x2C data\x2C\n      stringToFlags(flag)\x2C\n      parseFileMode(options.mode\x2C 'mode'\x2C 0o666)\x2C\n    );\n  }\n\n  if (!isArrayBufferView(data)) {\n    validateStringAfterArrayBufferView(data\x2C 'data');\n    data = Buffer.from(data\x2C options.encoding || 'utf8');\n  }\n\n  const isUserFd = isFd(path); // File descriptor ownership\n  const fd = isUserFd ? path : fs.openSync(path\x2C flag\x2C options.mode);\n\n  let offset = 0;\n  let length = data.byteLength;\n  try {\n    while (length > 0) {\n      const written = fs.writeSync(fd\x2C data\x2C offset\x2C length);\n      offset += written;\n      length -= written;\n    }\n\n    if (flush) {\n      fs.fsyncSync(fd);\n    }\n  } finally {\n    if (!isUserFd) fs.closeSync(fd);\n  }\n}\n\n/**\n * Asynchronously appends data to a file.\n * @param {string | Buffer | URL | number} path\n * @param {string | Buffer} data\n * @param {{\n *   encoding?: string | null;\n *   mode?: number;\n *   flag?: string;\n *   } | string} [options]\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction appendFile(path\x2C data\x2C options\x2C callback) {\n  callback = maybeCallback(callback || options);\n  options = getOptions(options\x2C { encoding: 'utf8'\x2C mode: 0o666\x2C flag: 'a' });\n\n  // Don't make changes directly on options object\n  options = copyObject(options);\n\n  // Force append behavior when using a supplied file descriptor\n  if (!options.flag || isFd(path))\n    options.flag = 'a';\n\n  fs.writeFile(path\x2C data\x2C options\x2C callback);\n}\n\n/**\n * Synchronously appends data to a file.\n * @param {string | Buffer | URL | number} path\n * @param {string | Buffer} data\n * @param {{\n *   encoding?: string | null;\n *   mode?: number;\n *   flag?: string;\n *   } | string} [options]\n * @returns {void}\n */\nfunction appendFileSync(path\x2C data\x2C options) {\n  options = getOptions(options\x2C { encoding: 'utf8'\x2C mode: 0o666\x2C flag: 'a' });\n\n  // Don't make changes directly on options object\n  options = copyObject(options);\n\n  // Force append behavior when using a supplied file descriptor\n  if (!options.flag || isFd(path))\n    options.flag = 'a';\n\n  fs.writeFileSync(path\x2C data\x2C options);\n}\n\n/**\n * Watches for the changes on `filename`.\n * @param {string | Buffer | URL} filename\n * @param {string | {\n *   persistent?: boolean;\n *   recursive?: boolean;\n *   encoding?: string;\n *   signal?: AbortSignal;\n *   }} [options]\n * @param {(\n *   eventType?: string\x2C\n *   filename?: string | Buffer\n *   ) => any} [listener]\n * @returns {watchers.FSWatcher}\n */\nfunction watch(filename\x2C options\x2C listener) {\n  if (typeof options === 'function') {\n    listener = options;\n  }\n  options = getOptions(options);\n\n  // Don't make changes directly on options object\n  options = copyObject(options);\n\n  if (options.persistent === undefined) options.persistent = true;\n  if (options.recursive === undefined) options.recursive = false;\n\n  let watcher;\n  const watchers = require('internal/fs/watchers');\n  const path = possiblyTransformPath(filename);\n  // TODO(anonrig): Remove non-native watcher when/if libuv supports recursive.\n  // As of November 2022\x2C libuv does not support recursive file watch on all platforms\x2C\n  // e.g. Linux due to the limitations of inotify.\n  if (options.recursive && !isOSX && !isWindows) {\n    const nonNativeWatcher = require('internal/fs/recursive_watch');\n    watcher = new nonNativeWatcher.FSWatcher(options);\n    watcher[watchers.kFSWatchStart](path);\n  } else {\n    watcher = new watchers.FSWatcher();\n    watcher[watchers.kFSWatchStart](path\x2C\n                                    options.persistent\x2C\n                                    options.recursive\x2C\n                                    options.encoding);\n  }\n\n  if (listener) {\n    watcher.addListener('change'\x2C listener);\n  }\n  if (options.signal) {\n    if (options.signal.aborted) {\n      process.nextTick(() => watcher.close());\n    } else {\n      const listener = () => watcher.close();\n      kResistStopPropagation ??= require('internal/event_target').kResistStopPropagation;\n      options.signal.addEventListener('abort'\x2C listener\x2C { __proto__: null\x2C [kResistStopPropagation]: true });\n      watcher.once('close'\x2C () => {\n        options.signal.removeEventListener('abort'\x2C listener);\n      });\n    }\n  }\n\n  return watcher;\n}\n\n\nconst statWatchers = new SafeMap();\n\n/**\n * Watches for changes on `filename`.\n * @param {string | Buffer | URL} filename\n * @param {{\n *   bigint?: boolean;\n *   persistent?: boolean;\n *   interval?: number;\n *   }} [options]\n * @param {(\n *   current?: Stats\x2C\n *   previous?: Stats\n *   ) => any} listener\n * @returns {watchers.StatWatcher}\n */\nfunction watchFile(filename\x2C options\x2C listener) {\n  filename = getValidatedPath(filename);\n  filename = pathModule.resolve(filename);\n  let stat;\n\n  if (options === null || typeof options !== 'object') {\n    listener = options;\n    options = null;\n  }\n\n  options = {\n    // Poll interval in milliseconds. 5007 is what libev used to use. It's\n    // a little on the slow side but let's stick with it for now to keep\n    // behavioral changes to a minimum.\n    interval: 5007\x2C\n    persistent: true\x2C\n    ...options\x2C\n  };\n\n  validateFunction(listener\x2C 'listener');\n\n  stat = statWatchers.get(filename);\n  const watchers = require('internal/fs/watchers');\n  if (stat === undefined) {\n    stat = new watchers.StatWatcher(options.bigint);\n    stat[watchers.kFSStatWatcherStart](filename\x2C\n                                       options.persistent\x2C options.interval);\n    statWatchers.set(filename\x2C stat);\n  } else {\n    stat[watchers.kFSStatWatcherAddOrCleanRef]('add');\n  }\n\n  stat.addListener('change'\x2C listener);\n  return stat;\n}\n\n/**\n * Stops watching for changes on `filename`.\n * @param {string | Buffer | URL} filename\n * @param {() => any} [listener]\n * @returns {void}\n */\nfunction unwatchFile(filename\x2C listener) {\n  filename = getValidatedPath(filename);\n  filename = pathModule.resolve(filename);\n  const stat = statWatchers.get(filename);\n\n  if (stat === undefined) return;\n  const watchers = require('internal/fs/watchers');\n  if (typeof listener === 'function') {\n    const beforeListenerCount = stat.listenerCount('change');\n    stat.removeListener('change'\x2C listener);\n    if (stat.listenerCount('change') < beforeListenerCount)\n      stat[watchers.kFSStatWatcherAddOrCleanRef]('clean');\n  } else {\n    stat.removeAllListeners('change');\n    stat[watchers.kFSStatWatcherAddOrCleanRef]('cleanAll');\n  }\n\n  if (stat.listenerCount('change') === 0) {\n    stat.stop();\n    statWatchers.delete(filename);\n  }\n}\n\n\nlet splitRoot;\nif (isWindows) {\n  // Regex to find the device root on Windows (e.g. 'c:\\\\')\x2C including trailing\n  // slash.\n  const splitRootRe = /^(?:[a-zA-Z]:|[\\\\/]{2}[^\\\\/]+[\\\\/][^\\\\/]+)?[\\\\/]*/;\n  splitRoot = function splitRoot(str) {\n    return SideEffectFreeRegExpPrototypeExec(splitRootRe\x2C str)[0];\n  };\n} else {\n  splitRoot = function splitRoot(str) {\n    for (let i = 0; i < str.length; ++i) {\n      if (StringPrototypeCharCodeAt(str\x2C i) !== CHAR_FORWARD_SLASH)\n        return StringPrototypeSlice(str\x2C 0\x2C i);\n    }\n    return str;\n  };\n}\n\nfunction encodeRealpathResult(result\x2C options) {\n  if (!options || !options.encoding || options.encoding === 'utf8')\n    return result;\n  const asBuffer = Buffer.from(result);\n  if (options.encoding === 'buffer') {\n    return asBuffer;\n  }\n  return asBuffer.toString(options.encoding);\n}\n\n// Finds the next portion of a (partial) path\x2C up to the next path delimiter\nlet nextPart;\nif (isWindows) {\n  nextPart = function nextPart(p\x2C i) {\n    for (; i < p.length; ++i) {\n      const ch = StringPrototypeCharCodeAt(p\x2C i);\n\n      // Check for a separator character\n      if (ch === CHAR_BACKWARD_SLASH || ch === CHAR_FORWARD_SLASH)\n        return i;\n    }\n    return -1;\n  };\n} else {\n  nextPart = function nextPart(p\x2C i) {\n    return StringPrototypeIndexOf(p\x2C '/'\x2C i);\n  };\n}\n\n/**\n * Returns the resolved pathname.\n * @param {string | Buffer | URL} p\n * @param {string | { encoding?: string | null; }} [options]\n * @returns {string | Buffer}\n */\nfunction realpathSync(p\x2C options) {\n  options = getOptions(options);\n  p = toPathIfFileURL(p);\n  if (typeof p !== 'string') {\n    p += '';\n  }\n  validatePath(p);\n  p = pathModule.resolve(p);\n\n  const cache = options[realpathCacheKey];\n  const maybeCachedResult = cache?.get(p);\n  if (maybeCachedResult) {\n    return maybeCachedResult;\n  }\n\n  const seenLinks = new SafeMap();\n  const knownHard = new SafeSet();\n  const original = p;\n\n  // Current character position in p\n  let pos;\n  // The partial path so far\x2C including a trailing slash if any\n  let current;\n  // The partial path without a trailing slash (except when pointing at a root)\n  let base;\n  // The partial path scanned in the previous round\x2C with slash\n  let previous;\n\n  // Skip over roots\n  current = base = splitRoot(p);\n  pos = current.length;\n\n  // On windows\x2C check that the root exists. On unix there is no need.\n  if (isWindows) {\n    const out = binding.lstat(pathModule.toNamespacedPath(base)\x2C false\x2C undefined\x2C true /* throwIfNoEntry */);\n    if (out === undefined) {\n      return;\n    }\n    knownHard.add(base);\n  }\n\n  // Walk down the path\x2C swapping out linked path parts for their real\n  // values\n  // NB: p.length changes.\n  while (pos < p.length) {\n    // find the next part\n    const result = nextPart(p\x2C pos);\n    previous = current;\n    if (result === -1) {\n      const last = StringPrototypeSlice(p\x2C pos);\n      current += last;\n      base = previous + last;\n      pos = p.length;\n    } else {\n      current += StringPrototypeSlice(p\x2C pos\x2C result + 1);\n      base = previous + StringPrototypeSlice(p\x2C pos\x2C result);\n      pos = result + 1;\n    }\n\n    // Continue if not a symlink\x2C break if a pipe/socket\n    if (knownHard.has(base) || cache?.get(base) === base) {\n      if (isFileType(statValues\x2C S_IFIFO) ||\n          isFileType(statValues\x2C S_IFSOCK)) {\n        break;\n      }\n      continue;\n    }\n\n    let resolvedLink;\n    const maybeCachedResolved = cache?.get(base);\n    if (maybeCachedResolved) {\n      resolvedLink = maybeCachedResolved;\n    } else {\n      // Use stats array directly to avoid creating an fs.Stats instance just\n      // for our internal use.\n\n      const baseLong = pathModule.toNamespacedPath(base);\n      const stats = binding.lstat(baseLong\x2C true\x2C undefined\x2C true /* throwIfNoEntry */);\n      if (stats === undefined) {\n        return;\n      }\n\n      if (!isFileType(stats\x2C S_IFLNK)) {\n        knownHard.add(base);\n        cache?.set(base\x2C base);\n        continue;\n      }\n\n      // Read the link if it wasn't read before\n      // dev/ino always return 0 on windows\x2C so skip the check.\n      let linkTarget = null;\n      let id;\n      if (!isWindows) {\n        const dev = BigIntPrototypeToString(stats[0]\x2C 32);\n        const ino = BigIntPrototypeToString(stats[7]\x2C 32);\n        id = `${dev}:${ino}`;\n        if (seenLinks.has(id)) {\n          linkTarget = seenLinks.get(id);\n        }\n      }\n      if (linkTarget === null) {\n        binding.stat(baseLong\x2C false\x2C undefined\x2C true);\n        linkTarget = binding.readlink(baseLong\x2C undefined);\n      }\n      resolvedLink = pathModule.resolve(previous\x2C linkTarget);\n\n      cache?.set(base\x2C resolvedLink);\n      if (!isWindows) seenLinks.set(id\x2C linkTarget);\n    }\n\n    // Resolve the link\x2C then start over\n    p = pathModule.resolve(resolvedLink\x2C StringPrototypeSlice(p\x2C pos));\n\n    // Skip over roots\n    current = base = splitRoot(p);\n    pos = current.length;\n\n    // On windows\x2C check that the root exists. On unix there is no need.\n    if (isWindows && !knownHard.has(base)) {\n      const out = binding.lstat(pathModule.toNamespacedPath(base)\x2C false\x2C undefined\x2C true /* throwIfNoEntry */);\n      if (out === undefined) {\n        return;\n      }\n      knownHard.add(base);\n    }\n  }\n\n  cache?.set(original\x2C p);\n  return encodeRealpathResult(p\x2C options);\n}\n\n/**\n * Returns the resolved pathname.\n * @param {string | Buffer | URL} path\n * @param {string | { encoding?: string; }} [options]\n * @returns {string | Buffer}\n */\nrealpathSync.native = (path\x2C options) => {\n  options = getOptions(options);\n  path = getValidatedPath(path);\n  return binding.realpath(\n    pathModule.toNamespacedPath(path)\x2C\n    options.encoding\x2C\n  );\n};\n\n/**\n * Asynchronously computes the canonical pathname by\n * resolving `.`\x2C `..` and symbolic links.\n * @param {string | Buffer | URL} p\n * @param {string | { encoding?: string; }} [options]\n * @param {(\n *   err?: Error\x2C\n *   resolvedPath?: string | Buffer\n *   ) => any} callback\n * @returns {void}\n */\nfunction realpath(p\x2C options\x2C callback) {\n  callback = typeof options === 'function' ? options : maybeCallback(callback);\n  options = getOptions(options);\n  p = toPathIfFileURL(p);\n\n  if (typeof p !== 'string') {\n    p += '';\n  }\n  validatePath(p);\n  p = pathModule.resolve(p);\n\n  const seenLinks = new SafeMap();\n  const knownHard = new SafeSet();\n\n  // Current character position in p\n  let pos;\n  // The partial path so far\x2C including a trailing slash if any\n  let current;\n  // The partial path without a trailing slash (except when pointing at a root)\n  let base;\n  // The partial path scanned in the previous round\x2C with slash\n  let previous;\n\n  current = base = splitRoot(p);\n  pos = current.length;\n\n  // On windows\x2C check that the root exists. On unix there is no need.\n  if (isWindows && !knownHard.has(base)) {\n    fs.lstat(base\x2C (err\x2C stats) => {\n      if (err) return callback(err);\n      knownHard.add(base);\n      LOOP();\n    });\n  } else {\n    process.nextTick(LOOP);\n  }\n\n  // Walk down the path\x2C swapping out linked path parts for their real\n  // values\n  function LOOP() {\n    // Stop if scanned past end of path\n    if (pos >= p.length) {\n      return callback(null\x2C encodeRealpathResult(p\x2C options));\n    }\n\n    // find the next part\n    const result = nextPart(p\x2C pos);\n    previous = current;\n    if (result === -1) {\n      const last = StringPrototypeSlice(p\x2C pos);\n      current += last;\n      base = previous + last;\n      pos = p.length;\n    } else {\n      current += StringPrototypeSlice(p\x2C pos\x2C result + 1);\n      base = previous + StringPrototypeSlice(p\x2C pos\x2C result);\n      pos = result + 1;\n    }\n\n    // Continue if not a symlink\x2C break if a pipe/socket\n    if (knownHard.has(base)) {\n      if (isFileType(statValues\x2C S_IFIFO) ||\n          isFileType(statValues\x2C S_IFSOCK)) {\n        return callback(null\x2C encodeRealpathResult(p\x2C options));\n      }\n      return process.nextTick(LOOP);\n    }\n\n    return fs.lstat(base\x2C { bigint: true }\x2C gotStat);\n  }\n\n  function gotStat(err\x2C stats) {\n    if (err) return callback(err);\n\n    // If not a symlink\x2C skip to the next path part\n    if (!stats.isSymbolicLink()) {\n      knownHard.add(base);\n      return process.nextTick(LOOP);\n    }\n\n    // Stat & read the link if not read before.\n    // Call `gotTarget()` as soon as the link target is known.\n    // `dev`/`ino` always return 0 on windows\x2C so skip the check.\n    let id;\n    if (!isWindows) {\n      const dev = BigIntPrototypeToString(stats.dev\x2C 32);\n      const ino = BigIntPrototypeToString(stats.ino\x2C 32);\n      id = `${dev}:${ino}`;\n      if (seenLinks.has(id)) {\n        return gotTarget(null\x2C seenLinks.get(id));\n      }\n    }\n    fs.stat(base\x2C (err) => {\n      if (err) return callback(err);\n\n      fs.readlink(base\x2C (err\x2C target) => {\n        if (!isWindows) seenLinks.set(id\x2C target);\n        gotTarget(err\x2C target);\n      });\n    });\n  }\n\n  function gotTarget(err\x2C target) {\n    if (err) return callback(err);\n\n    gotResolvedLink(pathModule.resolve(previous\x2C target));\n  }\n\n  function gotResolvedLink(resolvedLink) {\n    // Resolve the link\x2C then start over\n    p = pathModule.resolve(resolvedLink\x2C StringPrototypeSlice(p\x2C pos));\n    current = base = splitRoot(p);\n    pos = current.length;\n\n    // On windows\x2C check that the root exists. On unix there is no need.\n    if (isWindows && !knownHard.has(base)) {\n      fs.lstat(base\x2C (err) => {\n        if (err) return callback(err);\n        knownHard.add(base);\n        LOOP();\n      });\n    } else {\n      process.nextTick(LOOP);\n    }\n  }\n}\n\n/**\n * Asynchronously computes the canonical pathname by\n * resolving `.`\x2C `..` and symbolic links.\n * @param {string | Buffer | URL} path\n * @param {string | { encoding?: string; }} [options]\n * @param {(\n *   err?: Error\x2C\n *   resolvedPath?: string | Buffer\n *   ) => any} callback\n * @returns {void}\n */\nrealpath.native = (path\x2C options\x2C callback) => {\n  callback = makeCallback(callback || options);\n  options = getOptions(options);\n  path = getValidatedPath(path);\n  const req = new FSReqCallback();\n  req.oncomplete = callback;\n  binding.realpath(pathModule.toNamespacedPath(path)\x2C options.encoding\x2C req);\n};\n\n/**\n * Creates a unique temporary directory.\n * @param {string | Buffer | URL} prefix\n * @param {string | { encoding?: string; }} [options]\n * @param {(\n *   err?: Error\x2C\n *   directory?: string\n *   ) => any} callback\n * @returns {void}\n */\nfunction mkdtemp(prefix\x2C options\x2C callback) {\n  callback = makeCallback(typeof options === 'function' ? options : callback);\n  options = getOptions(options);\n\n  prefix = getValidatedPath(prefix\x2C 'prefix');\n  warnOnNonPortableTemplate(prefix);\n\n  const req = new FSReqCallback();\n  req.oncomplete = callback;\n  binding.mkdtemp(prefix\x2C options.encoding\x2C req);\n}\n\n/**\n * Synchronously creates a unique temporary directory.\n * @param {string | Buffer | URL} prefix\n * @param {string | { encoding?: string; }} [options]\n * @returns {string}\n */\nfunction mkdtempSync(prefix\x2C options) {\n  options = getOptions(options);\n\n  prefix = getValidatedPath(prefix\x2C 'prefix');\n  warnOnNonPortableTemplate(prefix);\n  return binding.mkdtemp(prefix\x2C options.encoding);\n}\n\n/**\n * Asynchronously copies `src` to `dest`. By\n * default\x2C `dest` is overwritten if it already exists.\n * @param {string | Buffer | URL} src\n * @param {string | Buffer | URL} dest\n * @param {number} [mode]\n * @param {() => any} callback\n * @returns {void}\n */\nfunction copyFile(src\x2C dest\x2C mode\x2C callback) {\n  if (typeof mode === 'function') {\n    callback = mode;\n    mode = 0;\n  }\n\n  src = getValidatedPath(src\x2C 'src');\n  dest = getValidatedPath(dest\x2C 'dest');\n\n  src = pathModule.toNamespacedPath(src);\n  dest = pathModule.toNamespacedPath(dest);\n  mode = getValidMode(mode\x2C 'copyFile');\n  callback = makeCallback(callback);\n\n  const req = new FSReqCallback();\n  req.oncomplete = callback;\n  binding.copyFile(src\x2C dest\x2C mode\x2C req);\n}\n\n/**\n * Synchronously copies `src` to `dest`. By\n * default\x2C `dest` is overwritten if it already exists.\n * @param {string | Buffer | URL} src\n * @param {string | Buffer | URL} dest\n * @param {number} [mode]\n * @returns {void}\n */\nfunction copyFileSync(src\x2C dest\x2C mode) {\n  src = getValidatedPath(src\x2C 'src');\n  dest = getValidatedPath(dest\x2C 'dest');\n\n  binding.copyFile(\n    pathModule.toNamespacedPath(src)\x2C\n    pathModule.toNamespacedPath(dest)\x2C\n    getValidMode(mode\x2C 'copyFile')\x2C\n  );\n}\n\n/**\n * Asynchronously copies `src` to `dest`. `src` can be a file\x2C directory\x2C or\n * symlink. The contents of directories will be copied recursively.\n * @param {string | URL} src\n * @param {string | URL} dest\n * @param {object} [options]\n * @param {() => any} callback\n * @returns {void}\n */\nfunction cp(src\x2C dest\x2C options\x2C callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = undefined;\n  }\n  callback = makeCallback(callback);\n  options = validateCpOptions(options);\n  src = pathModule.toNamespacedPath(getValidatedPath(src\x2C 'src'));\n  dest = pathModule.toNamespacedPath(getValidatedPath(dest\x2C 'dest'));\n  lazyLoadCp();\n  cpFn(src\x2C dest\x2C options\x2C callback);\n}\n\n/**\n * Synchronously copies `src` to `dest`. `src` can be a file\x2C directory\x2C or\n * symlink. The contents of directories will be copied recursively.\n * @param {string | URL} src\n * @param {string | URL} dest\n * @param {object} [options]\n * @returns {void}\n */\nfunction cpSync(src\x2C dest\x2C options) {\n  options = validateCpOptions(options);\n  src = pathModule.toNamespacedPath(getValidatedPath(src\x2C 'src'));\n  dest = pathModule.toNamespacedPath(getValidatedPath(dest\x2C 'dest'));\n  lazyLoadCp();\n  cpSyncFn(src\x2C dest\x2C options);\n}\n\nfunction lazyLoadStreams() {\n  if (!ReadStream) {\n    ({ ReadStream\x2C WriteStream } = require('internal/fs/streams'));\n    FileReadStream = ReadStream;\n    FileWriteStream = WriteStream;\n  }\n}\n\n/**\n * Creates a readable stream with a default `highWaterMark`\n * of 64 KiB.\n * @param {string | Buffer | URL} path\n * @param {string | {\n *   flags?: string;\n *   encoding?: string;\n *   fd?: number | FileHandle;\n *   mode?: number;\n *   autoClose?: boolean;\n *   emitClose?: boolean;\n *   start: number;\n *   end?: number;\n *   highWaterMark?: number;\n *   fs?: object | null;\n *   signal?: AbortSignal | null;\n *   }} [options]\n * @returns {ReadStream}\n */\nfunction createReadStream(path\x2C options) {\n  lazyLoadStreams();\n  return new ReadStream(path\x2C options);\n}\n\n/**\n * Creates a write stream.\n * @param {string | Buffer | URL} path\n * @param {string | {\n *   flags?: string;\n *   encoding?: string;\n *   fd?: number | FileHandle;\n *   mode?: number;\n *   autoClose?: boolean;\n *   emitClose?: boolean;\n *   start: number;\n *   fs?: object | null;\n *   signal?: AbortSignal | null;\n *   highWaterMark?: number;\n *   flush?: boolean;\n *   }} [options]\n * @returns {WriteStream}\n */\nfunction createWriteStream(path\x2C options) {\n  lazyLoadStreams();\n  return new WriteStream(path\x2C options);\n}\n\nmodule.exports = fs = {\n  appendFile\x2C\n  appendFileSync\x2C\n  access\x2C\n  accessSync\x2C\n  chown\x2C\n  chownSync\x2C\n  chmod\x2C\n  chmodSync\x2C\n  close\x2C\n  closeSync\x2C\n  copyFile\x2C\n  copyFileSync\x2C\n  cp\x2C\n  cpSync\x2C\n  createReadStream\x2C\n  createWriteStream\x2C\n  exists\x2C\n  existsSync\x2C\n  fchown\x2C\n  fchownSync\x2C\n  fchmod\x2C\n  fchmodSync\x2C\n  fdatasync\x2C\n  fdatasyncSync\x2C\n  fstat\x2C\n  fstatSync\x2C\n  fsync\x2C\n  fsyncSync\x2C\n  ftruncate\x2C\n  ftruncateSync\x2C\n  futimes\x2C\n  futimesSync\x2C\n  lchown\x2C\n  lchownSync\x2C\n  lchmod: constants.O_SYMLINK !== undefined ? lchmod : undefined\x2C\n  lchmodSync: constants.O_SYMLINK !== undefined ? lchmodSync : undefined\x2C\n  link\x2C\n  linkSync\x2C\n  lstat\x2C\n  lstatSync\x2C\n  lutimes\x2C\n  lutimesSync\x2C\n  mkdir\x2C\n  mkdirSync\x2C\n  mkdtemp\x2C\n  mkdtempSync\x2C\n  open\x2C\n  openSync\x2C\n  openAsBlob\x2C\n  readdir\x2C\n  readdirSync\x2C\n  read\x2C\n  readSync\x2C\n  readv\x2C\n  readvSync\x2C\n  readFile\x2C\n  readFileSync\x2C\n  readlink\x2C\n  readlinkSync\x2C\n  realpath\x2C\n  realpathSync\x2C\n  rename\x2C\n  renameSync\x2C\n  rm\x2C\n  rmSync\x2C\n  rmdir\x2C\n  rmdirSync\x2C\n  stat\x2C\n  statfs\x2C\n  statSync\x2C\n  statfsSync\x2C\n  symlink\x2C\n  symlinkSync\x2C\n  truncate\x2C\n  truncateSync\x2C\n  unwatchFile\x2C\n  unlink\x2C\n  unlinkSync\x2C\n  utimes\x2C\n  utimesSync\x2C\n  watch\x2C\n  watchFile\x2C\n  writeFile\x2C\n  writeFileSync\x2C\n  write\x2C\n  writeSync\x2C\n  writev\x2C\n  writevSync\x2C\n  Dirent\x2C\n  Stats\x2C\n\n  get ReadStream() {\n    lazyLoadStreams();\n    return ReadStream;\n  }\x2C\n\n  set ReadStream(val) {\n    ReadStream = val;\n  }\x2C\n\n  get WriteStream() {\n    lazyLoadStreams();\n    return WriteStream;\n  }\x2C\n\n  set WriteStream(val) {\n    WriteStream = val;\n  }\x2C\n\n  // Legacy names... these have to be separate because of how graceful-fs\n  // (and possibly other) modules monkey patch the values.\n  get FileReadStream() {\n    lazyLoadStreams();\n    return FileReadStream;\n  }\x2C\n\n  set FileReadStream(val) {\n    FileReadStream = val;\n  }\x2C\n\n  get FileWriteStream() {\n    lazyLoadStreams();\n    return FileWriteStream;\n  }\x2C\n\n  set FileWriteStream(val) {\n    FileWriteStream = val;\n  }\x2C\n\n  // For tests\n  _toUnixTimestamp: toUnixTimestamp\x2C\n};\n\ndefineLazyProperties(\n  fs\x2C\n  'internal/fs/dir'\x2C\n  ['Dir'\x2C 'opendir'\x2C 'opendirSync']\x2C\n);\n\nObjectDefineProperties(fs\x2C {\n  F_OK: { __proto__: null\x2C enumerable: true\x2C value: F_OK || 0 }\x2C\n  R_OK: { __proto__: null\x2C enumerable: true\x2C value: R_OK || 0 }\x2C\n  W_OK: { __proto__: null\x2C enumerable: true\x2C value: W_OK || 0 }\x2C\n  X_OK: { __proto__: null\x2C enumerable: true\x2C value: X_OK || 0 }\x2C\n  constants: {\n    __proto__: null\x2C\n    configurable: false\x2C\n    enumerable: true\x2C\n    value: constants\x2C\n  }\x2C\n  promises: {\n    __proto__: null\x2C\n    configurable: true\x2C\n    enumerable: true\x2C\n    get() {\n      promises ??= require('internal/fs/promises').exports;\n      return promises;\n    }\x2C\n  }\x2C\n});\n
code-source-info,0x72b2128acc
tick,0x7ff809303823,68176,0,0x0,3,0x109ba30d0,0x72b212843f,0x72b2127ceb,0x72b212753e,0x72b2126ced,0x723b73f9fd
tick,0x7ff809303af4,68201,0,0x0,3,0x109ba30d0,0x72b212843f,0x72b2127ceb,0x72b212753e,0x72b2126ced,0x723b73f9fd
tick,0x7ff8093039b4,68211,0,0x0,3,0x109ba30d0,0x72b212843f,0x72b2127ceb,0x72b212753e,0x72b2126ced,0x723b73f9fd
tick,0x7ff8093038a7,68219,0,0x0,3,0x109ba30d0,0x72b212843f,0x72b2127ceb,0x72b212753e,0x72b2126ced,0x723b73f9fd
tick,0x1092fe341,68230,0,0x0,3,0x109ba30d0,0x72b212843f,0x72b2127ceb,0x72b212753e,0x72b2126ced,0x723b73f9fd
code-creation,JS,10,68328,0x72b212f7bc,135,getOptions node:internal/fs/utils:324:20,0x72e2eb3500,~
script-source,60,node:internal/fs/utils,'use strict';\n\nconst {\n  ArrayIsArray\x2C\n  BigInt\x2C\n  Date\x2C\n  DateNow\x2C\n  DatePrototypeGetTime\x2C\n  ErrorCaptureStackTrace\x2C\n  FunctionPrototypeCall\x2C\n  Number\x2C\n  NumberIsFinite\x2C\n  MathMin\x2C\n  MathRound\x2C\n  ObjectIs\x2C\n  ObjectSetPrototypeOf\x2C\n  ReflectApply\x2C\n  ReflectOwnKeys\x2C\n  RegExpPrototypeSymbolReplace\x2C\n  StringPrototypeEndsWith\x2C\n  StringPrototypeIncludes\x2C\n  Symbol\x2C\n  TypedArrayPrototypeAt\x2C\n  TypedArrayPrototypeIncludes\x2C\n  uncurryThis\x2C\n} = primordials;\n\nconst permission = require('internal/process/permission');\n\nconst { Buffer } = require('buffer');\nconst {\n  codes: {\n    ERR_FS_EISDIR\x2C\n    ERR_FS_INVALID_SYMLINK_TYPE\x2C\n    ERR_INCOMPATIBLE_OPTION_PAIR\x2C\n    ERR_INVALID_ARG_TYPE\x2C\n    ERR_INVALID_ARG_VALUE\x2C\n    ERR_OUT_OF_RANGE\x2C\n  }\x2C\n  hideStackFrames\x2C\n  UVException\x2C\n} = require('internal/errors');\nconst {\n  isArrayBufferView\x2C\n  isBigInt64Array\x2C\n  isDate\x2C\n  isUint8Array\x2C\n} = require('internal/util/types');\nconst {\n  kEmptyObject\x2C\n  once\x2C\n} = require('internal/util');\nconst { toPathIfFileURL } = require('internal/url');\nconst {\n  validateAbortSignal\x2C\n  validateBoolean\x2C\n  validateFunction\x2C\n  validateInt32\x2C\n  validateInteger\x2C\n  validateObject\x2C\n  validateUint32\x2C\n} = require('internal/validators');\nconst pathModule = require('path');\nconst kType = Symbol('type');\nconst kStats = Symbol('stats');\nconst assert = require('internal/assert');\n\nconst {\n  fs: {\n    F_OK = 0\x2C\n    W_OK = 0\x2C\n    R_OK = 0\x2C\n    X_OK = 0\x2C\n    COPYFILE_EXCL\x2C\n    COPYFILE_FICLONE\x2C\n    COPYFILE_FICLONE_FORCE\x2C\n    O_APPEND\x2C\n    O_CREAT\x2C\n    O_EXCL\x2C\n    O_RDONLY\x2C\n    O_RDWR\x2C\n    O_SYNC\x2C\n    O_TRUNC\x2C\n    O_WRONLY\x2C\n    S_IFBLK\x2C\n    S_IFCHR\x2C\n    S_IFDIR\x2C\n    S_IFIFO\x2C\n    S_IFLNK\x2C\n    S_IFMT\x2C\n    S_IFREG\x2C\n    S_IFSOCK\x2C\n    UV_FS_SYMLINK_DIR\x2C\n    UV_FS_SYMLINK_JUNCTION\x2C\n    UV_DIRENT_UNKNOWN\x2C\n    UV_DIRENT_FILE\x2C\n    UV_DIRENT_DIR\x2C\n    UV_DIRENT_LINK\x2C\n    UV_DIRENT_FIFO\x2C\n    UV_DIRENT_SOCKET\x2C\n    UV_DIRENT_CHAR\x2C\n    UV_DIRENT_BLOCK\x2C\n  }\x2C\n  os: {\n    errno: {\n      EISDIR\x2C\n    }\x2C\n  }\x2C\n} = internalBinding('constants');\n\n// The access modes can be any of F_OK\x2C R_OK\x2C W_OK or X_OK. Some might not be\n// available on specific systems. They can be used in combination as well\n// (F_OK | R_OK | W_OK | X_OK).\nconst kMinimumAccessMode = MathMin(F_OK\x2C W_OK\x2C R_OK\x2C X_OK);\nconst kMaximumAccessMode = F_OK | W_OK | R_OK | X_OK;\n\nconst kDefaultCopyMode = 0;\n// The copy modes can be any of COPYFILE_EXCL\x2C COPYFILE_FICLONE or\n// COPYFILE_FICLONE_FORCE. They can be used in combination as well\n// (COPYFILE_EXCL | COPYFILE_FICLONE | COPYFILE_FICLONE_FORCE).\nconst kMinimumCopyMode = MathMin(\n  kDefaultCopyMode\x2C\n  COPYFILE_EXCL\x2C\n  COPYFILE_FICLONE\x2C\n  COPYFILE_FICLONE_FORCE\x2C\n);\nconst kMaximumCopyMode = COPYFILE_EXCL |\n                         COPYFILE_FICLONE |\n                         COPYFILE_FICLONE_FORCE;\n\n// Most platforms don't allow reads or writes >= 2 GiB.\n// See https://github.com/libuv/libuv/pull/1501.\nconst kIoMaxLength = 2 ** 31 - 1;\n\n// Use 64kb in case the file type is not a regular file and thus do not know the\n// actual file size. Increasing the value further results in more frequent over\n// allocation for small files and consumes CPU time and memory that should be\n// used else wise.\n// Use up to 512kb per read otherwise to partition reading big files to prevent\n// blocking other threads in case the available threads are all in use.\nconst kReadFileUnknownBufferLength = 64 * 1024;\nconst kReadFileBufferLength = 512 * 1024;\n\nconst kWriteFileMaxChunkSize = 512 * 1024;\n\nconst kMaxUserId = 2 ** 32 - 1;\n\nconst isWindows = process.platform === 'win32';\n\nlet fs;\nfunction lazyLoadFs() {\n  if (!fs) {\n    fs = require('fs');\n  }\n  return fs;\n}\n\nfunction assertEncoding(encoding) {\n  if (encoding && !Buffer.isEncoding(encoding)) {\n    const reason = 'is invalid encoding';\n    throw new ERR_INVALID_ARG_VALUE(encoding\x2C 'encoding'\x2C reason);\n  }\n}\n\nclass Dirent {\n  constructor(name\x2C type\x2C path) {\n    this.name = name;\n    this.parentPath = path;\n    this.path = path;\n    this[kType] = type;\n  }\n\n  isDirectory() {\n    return this[kType] === UV_DIRENT_DIR;\n  }\n\n  isFile() {\n    return this[kType] === UV_DIRENT_FILE;\n  }\n\n  isBlockDevice() {\n    return this[kType] === UV_DIRENT_BLOCK;\n  }\n\n  isCharacterDevice() {\n    return this[kType] === UV_DIRENT_CHAR;\n  }\n\n  isSymbolicLink() {\n    return this[kType] === UV_DIRENT_LINK;\n  }\n\n  isFIFO() {\n    return this[kType] === UV_DIRENT_FIFO;\n  }\n\n  isSocket() {\n    return this[kType] === UV_DIRENT_SOCKET;\n  }\n}\n\nclass DirentFromStats extends Dirent {\n  constructor(name\x2C stats\x2C path) {\n    super(name\x2C null\x2C path);\n    this[kStats] = stats;\n  }\n}\n\nfor (const name of ReflectOwnKeys(Dirent.prototype)) {\n  if (name === 'constructor') {\n    continue;\n  }\n  DirentFromStats.prototype[name] = function() {\n    return this[kStats][name]();\n  };\n}\n\nfunction copyObject(source) {\n  const target = {};\n  for (const key in source)\n    target[key] = source[key];\n  return target;\n}\n\nconst bufferSep = Buffer.from(pathModule.sep);\n\nfunction join(path\x2C name) {\n  if ((typeof path === 'string' || isUint8Array(path)) &&\n      name === undefined) {\n    return path;\n  }\n\n  if (typeof path === 'string' && isUint8Array(name)) {\n    const pathBuffer = Buffer.from(pathModule.join(path\x2C pathModule.sep));\n    return Buffer.concat([pathBuffer\x2C name]);\n  }\n\n  if (typeof path === 'string' && typeof name === 'string') {\n    return pathModule.join(path\x2C name);\n  }\n\n  if (isUint8Array(path) && isUint8Array(name)) {\n    return Buffer.concat([path\x2C bufferSep\x2C name]);\n  }\n\n  throw new ERR_INVALID_ARG_TYPE(\n    'path'\x2C ['string'\x2C 'Buffer']\x2C path);\n}\n\nfunction getDirents(path\x2C { 0: names\x2C 1: types }\x2C callback) {\n  let i;\n  if (typeof callback === 'function') {\n    const len = names.length;\n    let toFinish = 0;\n    callback = once(callback);\n    for (i = 0; i < len; i++) {\n      const type = types[i];\n      if (type === UV_DIRENT_UNKNOWN) {\n        const name = names[i];\n        const idx = i;\n        toFinish++;\n        let filepath;\n        try {\n          filepath = join(path\x2C name);\n        } catch (err) {\n          callback(err);\n          return;\n        }\n        lazyLoadFs().lstat(filepath\x2C (err\x2C stats) => {\n          if (err) {\n            callback(err);\n            return;\n          }\n          names[idx] = new DirentFromStats(name\x2C stats\x2C path);\n          if (--toFinish === 0) {\n            callback(null\x2C names);\n          }\n        });\n      } else {\n        names[i] = new Dirent(names[i]\x2C types[i]\x2C path);\n      }\n    }\n    if (toFinish === 0) {\n      callback(null\x2C names);\n    }\n  } else {\n    const len = names.length;\n    for (i = 0; i < len; i++) {\n      names[i] = getDirent(path\x2C names[i]\x2C types[i]);\n    }\n    return names;\n  }\n}\n\nfunction getDirent(path\x2C name\x2C type\x2C callback) {\n  if (typeof callback === 'function') {\n    if (type === UV_DIRENT_UNKNOWN) {\n      let filepath;\n      try {\n        filepath = join(path\x2C name);\n      } catch (err) {\n        callback(err);\n        return;\n      }\n      lazyLoadFs().lstat(filepath\x2C (err\x2C stats) => {\n        if (err) {\n          callback(err);\n          return;\n        }\n        callback(null\x2C new DirentFromStats(name\x2C stats\x2C filepath));\n      });\n    } else {\n      callback(null\x2C new Dirent(name\x2C type\x2C path));\n    }\n  } else if (type === UV_DIRENT_UNKNOWN) {\n    const filepath = join(path\x2C name);\n    const stats = lazyLoadFs().lstatSync(filepath);\n    return new DirentFromStats(name\x2C stats\x2C path);\n  } else {\n    return new Dirent(name\x2C type\x2C path);\n  }\n}\n\nfunction getOptions(options\x2C defaultOptions = kEmptyObject) {\n  if (options == null || typeof options === 'function') {\n    return defaultOptions;\n  }\n\n  if (typeof options === 'string') {\n    defaultOptions = { ...defaultOptions };\n    defaultOptions.encoding = options;\n    options = defaultOptions;\n  } else if (typeof options !== 'object') {\n    throw new ERR_INVALID_ARG_TYPE('options'\x2C ['string'\x2C 'Object']\x2C options);\n  }\n\n  if (options.encoding !== 'buffer')\n    assertEncoding(options.encoding);\n\n  if (options.signal !== undefined) {\n    validateAbortSignal(options.signal\x2C 'options.signal');\n  }\n\n  return options;\n}\n\n/**\n * @param {InternalFSBinding.FSSyncContext} ctx\n */\nfunction handleErrorFromBinding(ctx) {\n  if (ctx.errno !== undefined) {  // libuv error numbers\n    const err = new UVException(ctx);\n    ErrorCaptureStackTrace(err\x2C handleErrorFromBinding);\n    throw err;\n  }\n  if (ctx.error !== undefined) {  // Errors created in C++ land.\n    // TODO(joyeecheung): currently\x2C ctx.error are encoding errors\n    // usually caused by memory problems. We need to figure out proper error\n    // code(s) for this.\n    ErrorCaptureStackTrace(ctx.error\x2C handleErrorFromBinding);\n    throw ctx.error;\n  }\n}\n\nfunction preprocessSymlinkDestination(path\x2C type\x2C linkPath) {\n  if (!isWindows) {\n    // No preprocessing is needed on Unix.\n    return path;\n  }\n  path = '' + path;\n  if (type === 'junction') {\n    // Junctions paths need to be absolute and \\\\?\\-prefixed.\n    // A relative target is relative to the link's parent directory.\n    path = pathModule.resolve(linkPath\x2C '..'\x2C path);\n    return pathModule.toNamespacedPath(path);\n  }\n  if (pathModule.isAbsolute(path)) {\n    // If the path is absolute\x2C use the \\\\?\\-prefix to enable long filenames\n    return pathModule.toNamespacedPath(path);\n  }\n  // Windows symlinks don't tolerate forward slashes.\n  return RegExpPrototypeSymbolReplace(/\\//g\x2C path\x2C '\\\\');\n}\n\n// Constructor for file stats.\nfunction StatsBase(dev\x2C mode\x2C nlink\x2C uid\x2C gid\x2C rdev\x2C blksize\x2C\n                   ino\x2C size\x2C blocks) {\n  this.dev = dev;\n  this.mode = mode;\n  this.nlink = nlink;\n  this.uid = uid;\n  this.gid = gid;\n  this.rdev = rdev;\n  this.blksize = blksize;\n  this.ino = ino;\n  this.size = size;\n  this.blocks = blocks;\n}\n\nStatsBase.prototype.isDirectory = function() {\n  return this._checkModeProperty(S_IFDIR);\n};\n\nStatsBase.prototype.isFile = function() {\n  return this._checkModeProperty(S_IFREG);\n};\n\nStatsBase.prototype.isBlockDevice = function() {\n  return this._checkModeProperty(S_IFBLK);\n};\n\nStatsBase.prototype.isCharacterDevice = function() {\n  return this._checkModeProperty(S_IFCHR);\n};\n\nStatsBase.prototype.isSymbolicLink = function() {\n  return this._checkModeProperty(S_IFLNK);\n};\n\nStatsBase.prototype.isFIFO = function() {\n  return this._checkModeProperty(S_IFIFO);\n};\n\nStatsBase.prototype.isSocket = function() {\n  return this._checkModeProperty(S_IFSOCK);\n};\n\nconst kNsPerMsBigInt = 10n ** 6n;\nconst kNsPerSecBigInt = 10n ** 9n;\nconst kMsPerSec = 10 ** 3;\nconst kNsPerMs = 10 ** 6;\nfunction msFromTimeSpec(sec\x2C nsec) {\n  return sec * kMsPerSec + nsec / kNsPerMs;\n}\n\nfunction nsFromTimeSpecBigInt(sec\x2C nsec) {\n  return sec * kNsPerSecBigInt + nsec;\n}\n\n// The Date constructor performs Math.floor() on the absolute value\n// of the timestamp: https://tc39.es/ecma262/#sec-timeclip\n// Since there may be a precision loss when the timestamp is\n// converted to a floating point number\x2C we manually round\n// the timestamp here before passing it to Date().\n// Refs: https://github.com/nodejs/node/pull/12607\n// Refs: https://github.com/nodejs/node/pull/43714\nfunction dateFromMs(ms) {\n  // Coercing to number\x2C ms can be bigint\n  return new Date(MathRound(Number(ms)));\n}\n\nfunction BigIntStats(dev\x2C mode\x2C nlink\x2C uid\x2C gid\x2C rdev\x2C blksize\x2C\n                     ino\x2C size\x2C blocks\x2C\n                     atimeNs\x2C mtimeNs\x2C ctimeNs\x2C birthtimeNs) {\n  ReflectApply(StatsBase\x2C this\x2C [dev\x2C mode\x2C nlink\x2C uid\x2C gid\x2C rdev\x2C blksize\x2C\n                                 ino\x2C size\x2C blocks]);\n\n  this.atimeMs = atimeNs / kNsPerMsBigInt;\n  this.mtimeMs = mtimeNs / kNsPerMsBigInt;\n  this.ctimeMs = ctimeNs / kNsPerMsBigInt;\n  this.birthtimeMs = birthtimeNs / kNsPerMsBigInt;\n  this.atimeNs = atimeNs;\n  this.mtimeNs = mtimeNs;\n  this.ctimeNs = ctimeNs;\n  this.birthtimeNs = birthtimeNs;\n  this.atime = dateFromMs(this.atimeMs);\n  this.mtime = dateFromMs(this.mtimeMs);\n  this.ctime = dateFromMs(this.ctimeMs);\n  this.birthtime = dateFromMs(this.birthtimeMs);\n}\n\nObjectSetPrototypeOf(BigIntStats.prototype\x2C StatsBase.prototype);\nObjectSetPrototypeOf(BigIntStats\x2C StatsBase);\n\nBigIntStats.prototype._checkModeProperty = function(property) {\n  if (isWindows && (property === S_IFIFO || property === S_IFBLK ||\n    property === S_IFSOCK)) {\n    return false;  // Some types are not available on Windows\n  }\n  return (this.mode & BigInt(S_IFMT)) === BigInt(property);\n};\n\nfunction Stats(dev\x2C mode\x2C nlink\x2C uid\x2C gid\x2C rdev\x2C blksize\x2C\n               ino\x2C size\x2C blocks\x2C\n               atimeMs\x2C mtimeMs\x2C ctimeMs\x2C birthtimeMs) {\n  FunctionPrototypeCall(StatsBase\x2C this\x2C dev\x2C mode\x2C nlink\x2C uid\x2C gid\x2C rdev\x2C\n                        blksize\x2C ino\x2C size\x2C blocks);\n  this.atimeMs = atimeMs;\n  this.mtimeMs = mtimeMs;\n  this.ctimeMs = ctimeMs;\n  this.birthtimeMs = birthtimeMs;\n  this.atime = dateFromMs(atimeMs);\n  this.mtime = dateFromMs(mtimeMs);\n  this.ctime = dateFromMs(ctimeMs);\n  this.birthtime = dateFromMs(birthtimeMs);\n}\n\nObjectSetPrototypeOf(Stats.prototype\x2C StatsBase.prototype);\nObjectSetPrototypeOf(Stats\x2C StatsBase);\n\nStats.prototype._checkModeProperty = function(property) {\n  if (isWindows && (property === S_IFIFO || property === S_IFBLK ||\n    property === S_IFSOCK)) {\n    return false;  // Some types are not available on Windows\n  }\n  return (this.mode & S_IFMT) === property;\n};\n\n/**\n * @param {Float64Array | BigInt64Array} stats\n * @param {number} offset\n * @returns {BigIntStats | Stats}\n */\nfunction getStatsFromBinding(stats\x2C offset = 0) {\n  if (isBigInt64Array(stats)) {\n    return new BigIntStats(\n      stats[0 + offset]\x2C stats[1 + offset]\x2C stats[2 + offset]\x2C\n      stats[3 + offset]\x2C stats[4 + offset]\x2C stats[5 + offset]\x2C\n      stats[6 + offset]\x2C stats[7 + offset]\x2C stats[8 + offset]\x2C\n      stats[9 + offset]\x2C\n      nsFromTimeSpecBigInt(stats[10 + offset]\x2C stats[11 + offset])\x2C\n      nsFromTimeSpecBigInt(stats[12 + offset]\x2C stats[13 + offset])\x2C\n      nsFromTimeSpecBigInt(stats[14 + offset]\x2C stats[15 + offset])\x2C\n      nsFromTimeSpecBigInt(stats[16 + offset]\x2C stats[17 + offset])\x2C\n    );\n  }\n  return new Stats(\n    stats[0 + offset]\x2C stats[1 + offset]\x2C stats[2 + offset]\x2C\n    stats[3 + offset]\x2C stats[4 + offset]\x2C stats[5 + offset]\x2C\n    stats[6 + offset]\x2C stats[7 + offset]\x2C stats[8 + offset]\x2C\n    stats[9 + offset]\x2C\n    msFromTimeSpec(stats[10 + offset]\x2C stats[11 + offset])\x2C\n    msFromTimeSpec(stats[12 + offset]\x2C stats[13 + offset])\x2C\n    msFromTimeSpec(stats[14 + offset]\x2C stats[15 + offset])\x2C\n    msFromTimeSpec(stats[16 + offset]\x2C stats[17 + offset])\x2C\n  );\n}\n\nclass StatFs {\n  constructor(type\x2C bsize\x2C blocks\x2C bfree\x2C bavail\x2C files\x2C ffree) {\n    this.type = type;\n    this.bsize = bsize;\n    this.blocks = blocks;\n    this.bfree = bfree;\n    this.bavail = bavail;\n    this.files = files;\n    this.ffree = ffree;\n  }\n}\n\nfunction getStatFsFromBinding(stats) {\n  return new StatFs(\n    stats[0]\x2C stats[1]\x2C stats[2]\x2C stats[3]\x2C stats[4]\x2C stats[5]\x2C stats[6]\x2C\n  );\n}\n\nfunction stringToFlags(flags\x2C name = 'flags') {\n  if (typeof flags === 'number') {\n    validateInt32(flags\x2C name);\n    return flags;\n  }\n\n  if (flags == null) {\n    return O_RDONLY;\n  }\n\n  switch (flags) {\n    case 'r' : return O_RDONLY;\n    case 'rs' : // Fall through.\n    case 'sr' : return O_RDONLY | O_SYNC;\n    case 'r+' : return O_RDWR;\n    case 'rs+' : // Fall through.\n    case 'sr+' : return O_RDWR | O_SYNC;\n\n    case 'w' : return O_TRUNC | O_CREAT | O_WRONLY;\n    case 'wx' : // Fall through.\n    case 'xw' : return O_TRUNC | O_CREAT | O_WRONLY | O_EXCL;\n\n    case 'w+' : return O_TRUNC | O_CREAT | O_RDWR;\n    case 'wx+': // Fall through.\n    case 'xw+': return O_TRUNC | O_CREAT | O_RDWR | O_EXCL;\n\n    case 'a' : return O_APPEND | O_CREAT | O_WRONLY;\n    case 'ax' : // Fall through.\n    case 'xa' : return O_APPEND | O_CREAT | O_WRONLY | O_EXCL;\n    case 'as' : // Fall through.\n    case 'sa' : return O_APPEND | O_CREAT | O_WRONLY | O_SYNC;\n\n    case 'a+' : return O_APPEND | O_CREAT | O_RDWR;\n    case 'ax+': // Fall through.\n    case 'xa+': return O_APPEND | O_CREAT | O_RDWR | O_EXCL;\n    case 'as+': // Fall through.\n    case 'sa+': return O_APPEND | O_CREAT | O_RDWR | O_SYNC;\n  }\n\n  throw new ERR_INVALID_ARG_VALUE('flags'\x2C flags);\n}\n\nconst stringToSymlinkType = hideStackFrames((type) => {\n  let flags = 0;\n  if (typeof type === 'string') {\n    switch (type) {\n      case 'dir':\n        flags |= UV_FS_SYMLINK_DIR;\n        break;\n      case 'junction':\n        flags |= UV_FS_SYMLINK_JUNCTION;\n        break;\n      case 'file':\n        break;\n      default:\n        throw new ERR_FS_INVALID_SYMLINK_TYPE(type);\n    }\n  }\n  return flags;\n});\n\n// converts Date or number to a fractional UNIX timestamp\nfunction toUnixTimestamp(time\x2C name = 'time') {\n  // eslint-disable-next-line eqeqeq\n  if (typeof time === 'string' && +time == time) {\n    return +time;\n  }\n  if (NumberIsFinite(time)) {\n    if (time < 0) {\n      return DateNow() / 1000;\n    }\n    return time;\n  }\n  if (isDate(time)) {\n    // Convert to 123.456 UNIX timestamp\n    return DatePrototypeGetTime(time) / 1000;\n  }\n  throw new ERR_INVALID_ARG_TYPE(name\x2C ['Date'\x2C 'Time in seconds']\x2C time);\n}\n\nconst validateOffsetLengthRead = hideStackFrames(\n  (offset\x2C length\x2C bufferLength) => {\n    if (offset < 0) {\n      throw new ERR_OUT_OF_RANGE.HideStackFramesError('offset'\x2C '>= 0'\x2C offset);\n    }\n    if (length < 0) {\n      throw new ERR_OUT_OF_RANGE.HideStackFramesError('length'\x2C '>= 0'\x2C length);\n    }\n    if (offset + length > bufferLength) {\n      throw new ERR_OUT_OF_RANGE.HideStackFramesError('length'\x2C\n                                                      `<= ${bufferLength - offset}`\x2C length);\n    }\n  }\x2C\n);\n\nconst validateOffsetLengthWrite = hideStackFrames(\n  (offset\x2C length\x2C byteLength) => {\n    if (offset > byteLength) {\n      throw new ERR_OUT_OF_RANGE.HideStackFramesError('offset'\x2C `<= ${byteLength}`\x2C offset);\n    }\n\n    if (length > byteLength - offset) {\n      throw new ERR_OUT_OF_RANGE.HideStackFramesError('length'\x2C `<= ${byteLength - offset}`\x2C length);\n    }\n\n    if (length < 0) {\n      throw new ERR_OUT_OF_RANGE.HideStackFramesError('length'\x2C '>= 0'\x2C length);\n    }\n\n    validateInt32.withoutStackTrace(length\x2C 'length'\x2C 0);\n  }\x2C\n);\n\nconst validatePath = hideStackFrames((path\x2C propName = 'path') => {\n  if (typeof path !== 'string' && !isUint8Array(path)) {\n    throw new ERR_INVALID_ARG_TYPE.HideStackFramesError(propName\x2C ['string'\x2C 'Buffer'\x2C 'URL']\x2C path);\n  }\n\n  const pathIsString = typeof path === 'string';\n  const pathIsUint8Array = isUint8Array(path);\n\n  // We can only perform meaningful checks on strings and Uint8Arrays.\n  if ((!pathIsString && !pathIsUint8Array) ||\n      (pathIsString && !StringPrototypeIncludes(path\x2C '\\u0000')) ||\n      (pathIsUint8Array && !TypedArrayPrototypeIncludes(path\x2C 0))) {\n    return;\n  }\n\n  throw new ERR_INVALID_ARG_VALUE.HideStackFramesError(\n    propName\x2C\n    path\x2C\n    'must be a string\x2C Uint8Array\x2C or URL without null bytes'\x2C\n  );\n});\n\n// TODO(rafaelgss): implement the path.resolve on C++ side\n// See: https://github.com/nodejs/node/pull/44004#discussion_r930958420\n// The permission model needs the absolute path for the fs_permission\nconst resolvePath = pathModule.resolve;\nconst { isBuffer: BufferIsBuffer\x2C from: BufferFrom } = Buffer;\nconst BufferToString = uncurryThis(Buffer.prototype.toString);\nfunction possiblyTransformPath(path) {\n  if (permission.isEnabled()) {\n    if (typeof path === 'string') {\n      return resolvePath(path);\n    }\n    assert(isUint8Array(path));\n    if (!BufferIsBuffer(path)) path = BufferFrom(path);\n    return BufferFrom(resolvePath(BufferToString(path)));\n  }\n  return path;\n}\n\nconst getValidatedPath = hideStackFrames((fileURLOrPath\x2C propName = 'path') => {\n  const path = toPathIfFileURL(fileURLOrPath);\n  validatePath(path\x2C propName);\n  return possiblyTransformPath(path);\n});\n\nconst getValidatedFd = hideStackFrames((fd\x2C propName = 'fd') => {\n  if (ObjectIs(fd\x2C -0)) {\n    return 0;\n  }\n\n  validateInt32(fd\x2C propName\x2C 0);\n\n  return fd;\n});\n\nconst validateBufferArray = hideStackFrames((buffers\x2C propName = 'buffers') => {\n  if (!ArrayIsArray(buffers))\n    throw new ERR_INVALID_ARG_TYPE.HideStackFramesError(propName\x2C 'ArrayBufferView[]'\x2C buffers);\n\n  for (let i = 0; i < buffers.length; i++) {\n    if (!isArrayBufferView(buffers[i]))\n      throw new ERR_INVALID_ARG_TYPE.HideStackFramesError(propName\x2C 'ArrayBufferView[]'\x2C buffers);\n  }\n\n  return buffers;\n});\n\nlet nonPortableTemplateWarn = true;\n\nfunction warnOnNonPortableTemplate(template) {\n  // Template strings passed to the mkdtemp() family of functions should not\n  // end with 'X' because they are handled inconsistently across platforms.\n  if (nonPortableTemplateWarn &&\n    ((typeof template === 'string' && StringPrototypeEndsWith(template\x2C 'X')) ||\n    (typeof template !== 'string' && TypedArrayPrototypeAt(template\x2C -1) === 0x58))) {\n    process.emitWarning('mkdtemp() templates ending with X are not portable. ' +\n                        'For details see: https://nodejs.org/api/fs.html');\n    nonPortableTemplateWarn = false;\n  }\n}\n\nconst defaultCpOptions = {\n  dereference: false\x2C\n  errorOnExist: false\x2C\n  filter: undefined\x2C\n  force: true\x2C\n  preserveTimestamps: false\x2C\n  recursive: false\x2C\n  verbatimSymlinks: false\x2C\n};\n\nconst defaultRmOptions = {\n  recursive: false\x2C\n  force: false\x2C\n  retryDelay: 100\x2C\n  maxRetries: 0\x2C\n};\n\nconst defaultRmdirOptions = {\n  retryDelay: 100\x2C\n  maxRetries: 0\x2C\n  recursive: false\x2C\n};\n\nconst validateCpOptions = hideStackFrames((options) => {\n  if (options === undefined)\n    return { ...defaultCpOptions };\n  validateObject(options\x2C 'options');\n  options = { ...defaultCpOptions\x2C ...options };\n  validateBoolean(options.dereference\x2C 'options.dereference');\n  validateBoolean(options.errorOnExist\x2C 'options.errorOnExist');\n  validateBoolean(options.force\x2C 'options.force');\n  validateBoolean(options.preserveTimestamps\x2C 'options.preserveTimestamps');\n  validateBoolean(options.recursive\x2C 'options.recursive');\n  validateBoolean(options.verbatimSymlinks\x2C 'options.verbatimSymlinks');\n  options.mode = getValidMode(options.mode\x2C 'copyFile');\n  if (options.dereference === true && options.verbatimSymlinks === true) {\n    throw new ERR_INCOMPATIBLE_OPTION_PAIR.HideStackFramesError('dereference'\x2C 'verbatimSymlinks');\n  }\n  if (options.filter !== undefined) {\n    validateFunction(options.filter\x2C 'options.filter');\n  }\n  return options;\n});\n\nconst validateRmOptions = hideStackFrames((path\x2C options\x2C expectDir\x2C cb) => {\n  options = validateRmdirOptions(options\x2C defaultRmOptions);\n  validateBoolean(options.force\x2C 'options.force');\n\n  lazyLoadFs().lstat(path\x2C (err\x2C stats) => {\n    if (err) {\n      if (options.force && err.code === 'ENOENT') {\n        return cb(null\x2C options);\n      }\n      return cb(err\x2C options);\n    }\n\n    if (expectDir && !stats.isDirectory()) {\n      return cb(false);\n    }\n\n    if (stats.isDirectory() && !options.recursive) {\n      const err = new ERR_FS_EISDIR.HideStackFramesError({\n        code: 'EISDIR'\x2C\n        message: 'is a directory'\x2C\n        path\x2C\n        syscall: 'rm'\x2C\n        errno: EISDIR\x2C\n      });\n\n      return cb(err);\n    }\n    return cb(null\x2C options);\n  });\n});\n\nconst validateRmOptionsSync = hideStackFrames((path\x2C options\x2C expectDir) => {\n  options = validateRmdirOptions.withoutStackTrace(options\x2C defaultRmOptions);\n  validateBoolean.withoutStackTrace(options.force\x2C 'options.force');\n\n  if (!options.force || expectDir || !options.recursive) {\n    const isDirectory = lazyLoadFs()\n      .lstatSync(path\x2C { throwIfNoEntry: !options.force })?.isDirectory();\n\n    if (expectDir && !isDirectory) {\n      return false;\n    }\n\n    if (isDirectory && !options.recursive) {\n      throw new ERR_FS_EISDIR.HideStackFramesError({\n        code: 'EISDIR'\x2C\n        message: 'is a directory'\x2C\n        path\x2C\n        syscall: 'rm'\x2C\n        errno: EISDIR\x2C\n      });\n    }\n  }\n\n  return options;\n});\n\nlet recursiveRmdirWarned = process.noDeprecation;\nfunction emitRecursiveRmdirWarning() {\n  if (!recursiveRmdirWarned) {\n    process.emitWarning(\n      'In future versions of Node.js\x2C fs.rmdir(path\x2C { recursive: true }) ' +\n      'will be removed. Use fs.rm(path\x2C { recursive: true }) instead'\x2C\n      'DeprecationWarning'\x2C\n      'DEP0147'\x2C\n    );\n    recursiveRmdirWarned = true;\n  }\n}\n\nconst validateRmdirOptions = hideStackFrames(\n  (options\x2C defaults = defaultRmdirOptions) => {\n    if (options === undefined)\n      return defaults;\n    validateObject.withoutStackTrace(options\x2C 'options');\n\n    options = { ...defaults\x2C ...options };\n\n    validateBoolean.withoutStackTrace(options.recursive\x2C 'options.recursive');\n    validateInt32.withoutStackTrace(options.retryDelay\x2C 'options.retryDelay'\x2C 0);\n    validateUint32.withoutStackTrace(options.maxRetries\x2C 'options.maxRetries');\n\n    return options;\n  });\n\nconst getValidMode = hideStackFrames((mode\x2C type) => {\n  let min = kMinimumAccessMode;\n  let max = kMaximumAccessMode;\n  let def = F_OK;\n  if (type === 'copyFile') {\n    min = kMinimumCopyMode;\n    max = kMaximumCopyMode;\n    def = mode || kDefaultCopyMode;\n  } else {\n    assert(type === 'access');\n  }\n  if (mode == null) {\n    return def;\n  }\n  validateInteger.withoutStackTrace(mode\x2C 'mode'\x2C min\x2C max);\n  return mode;\n});\n\nconst validateStringAfterArrayBufferView = hideStackFrames((buffer\x2C name) => {\n  if (typeof buffer !== 'string') {\n    throw new ERR_INVALID_ARG_TYPE.HideStackFramesError(\n      name\x2C\n      ['string'\x2C 'Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C\n      buffer\x2C\n    );\n  }\n});\n\nconst validatePosition = hideStackFrames((position\x2C name\x2C length) => {\n  if (typeof position === 'number') {\n    validateInteger.withoutStackTrace(position\x2C name\x2C -1);\n  } else if (typeof position === 'bigint') {\n    const maxPosition = 2n ** 63n - 1n - BigInt(length);\n    if (!(position >= -1n && position <= maxPosition)) {\n      throw new ERR_OUT_OF_RANGE.HideStackFramesError(name\x2C\n                                                      `>= -1 && <= ${maxPosition}`\x2C\n                                                      position);\n    }\n  } else {\n    throw new ERR_INVALID_ARG_TYPE.HideStackFramesError(name\x2C ['integer'\x2C 'bigint']\x2C position);\n  }\n});\n\nmodule.exports = {\n  constants: {\n    kIoMaxLength\x2C\n    kMaxUserId\x2C\n    kReadFileBufferLength\x2C\n    kReadFileUnknownBufferLength\x2C\n    kWriteFileMaxChunkSize\x2C\n  }\x2C\n  assertEncoding\x2C\n  BigIntStats\x2C  // for testing\n  copyObject\x2C\n  Dirent\x2C\n  emitRecursiveRmdirWarning\x2C\n  getDirent\x2C\n  getDirents\x2C\n  getOptions\x2C\n  getValidatedFd\x2C\n  getValidatedPath\x2C\n  getValidMode\x2C\n  handleErrorFromBinding\x2C\n  possiblyTransformPath\x2C\n  preprocessSymlinkDestination\x2C\n  realpathCacheKey: Symbol('realpathCacheKey')\x2C\n  getStatFsFromBinding\x2C\n  getStatsFromBinding\x2C\n  stringToFlags\x2C\n  stringToSymlinkType\x2C\n  Stats\x2C\n  toUnixTimestamp\x2C\n  validateBufferArray\x2C\n  validateCpOptions\x2C\n  validateOffsetLengthRead\x2C\n  validateOffsetLengthWrite\x2C\n  validatePath\x2C\n  validatePosition\x2C\n  validateRmOptions\x2C\n  validateRmOptionsSync\x2C\n  validateRmdirOptions\x2C\n  validateStringAfterArrayBufferView\x2C\n  warnOnNonPortableTemplate\x2C\n};\n
code-source-info,0x72b212f7bc,60,7485,8092,C9O7512C16O7530C27O7590C29O7612C30O7620C36O7659C41O7703C43O7727C47O7742C54O7777C60O7816C78O7822C83O7816C84O7909C91O7918C96O7936C99O7959C104O7936C108O7985C114O8013C119O8041C127O8013C132O8075C134O8090,,
tick,0x7ff809303aef,70027,0,0x0,3,0x109ba30d0,0x72b2128ad2,0x72b212843f,0x72b2127ceb,0x72b212753e,0x72b2126ced,0x723b73f9fd
tick,0x1092fe27f,70046,0,0x0,3,0x109ba30d0,0x72b2128ad2,0x72b212843f,0x72b2127ceb,0x72b212753e,0x72b2126ced,0x723b73f9fd
code-creation,JS,10,70059,0x72b21317d4,48,assertEncoding node:internal/fs/utils:158:24,0x72e2eb2f60,~
code-source-info,0x72b21317d4,60,3655,3832,C0O3670C6O3687C9O3694C14O3694C21O3737C24O3764C40O3770C45O3764C47O3831,,
code-creation,JS,10,70169,0x72b21318ec,20,toPathIfFileURL node:internal/url:1495:25,0x72e2ea06f8,~
script-source,39,node:internal/url,'use strict';\n\nconst {\n  Array\x2C\n  ArrayIsArray\x2C\n  ArrayPrototypeJoin\x2C\n  ArrayPrototypeMap\x2C\n  ArrayPrototypePush\x2C\n  ArrayPrototypeReduce\x2C\n  ArrayPrototypeSlice\x2C\n  Boolean\x2C\n  Int8Array\x2C\n  IteratorPrototype\x2C\n  Number\x2C\n  ObjectDefineProperties\x2C\n  ObjectSetPrototypeOf\x2C\n  ReflectGetOwnPropertyDescriptor\x2C\n  ReflectOwnKeys\x2C\n  RegExpPrototypeSymbolReplace\x2C\n  SafeMap\x2C\n  SafeSet\x2C\n  StringPrototypeCharAt\x2C\n  StringPrototypeCharCodeAt\x2C\n  StringPrototypeCodePointAt\x2C\n  StringPrototypeIncludes\x2C\n  StringPrototypeIndexOf\x2C\n  StringPrototypeSlice\x2C\n  StringPrototypeStartsWith\x2C\n  StringPrototypeToWellFormed\x2C\n  Symbol\x2C\n  SymbolIterator\x2C\n  SymbolToStringTag\x2C\n  decodeURIComponent\x2C\n} = primordials;\n\nconst { inspect } = require('internal/util/inspect');\nconst {\n  encodeStr\x2C\n  hexTable\x2C\n  isHexTable\x2C\n} = require('internal/querystring');\n\nconst {\n  getConstructorOf\x2C\n  removeColors\x2C\n  kEnumerableProperty\x2C\n  SideEffectFreeRegExpPrototypeSymbolReplace\x2C\n} = require('internal/util');\n\nconst {\n  markTransferMode\x2C\n} = require('internal/worker/js_transferable');\n\nconst {\n  codes: {\n    ERR_ARG_NOT_ITERABLE\x2C\n    ERR_INVALID_ARG_TYPE\x2C\n    ERR_INVALID_ARG_VALUE\x2C\n    ERR_INVALID_FILE_URL_HOST\x2C\n    ERR_INVALID_FILE_URL_PATH\x2C\n    ERR_INVALID_THIS\x2C\n    ERR_INVALID_TUPLE\x2C\n    ERR_INVALID_URL\x2C\n    ERR_INVALID_URL_SCHEME\x2C\n    ERR_MISSING_ARGS\x2C\n    ERR_NO_CRYPTO\x2C\n  }\x2C\n} = require('internal/errors');\nconst {\n  CHAR_AMPERSAND\x2C\n  CHAR_BACKWARD_SLASH\x2C\n  CHAR_EQUAL\x2C\n  CHAR_FORWARD_SLASH\x2C\n  CHAR_LOWERCASE_A\x2C\n  CHAR_LOWERCASE_Z\x2C\n  CHAR_PERCENT\x2C\n  CHAR_PLUS\x2C\n} = require('internal/constants');\nconst path = require('path');\n\nconst {\n  validateFunction\x2C\n} = require('internal/validators');\n\nconst querystring = require('querystring');\n\nconst { platform } = process;\nconst isWindows = platform === 'win32';\n\nconst bindingUrl = internalBinding('url');\n\nconst FORWARD_SLASH = /\\//g;\n\nconst contextForInspect = Symbol('context');\n\n// `unsafeProtocol`\x2C `hostlessProtocol` and `slashedProtocol` is\n// deliberately moved to `internal/url` rather than `url`.\n// Workers does not bootstrap URL module. Therefore\x2C `SafeSet`\n// is not initialized on bootstrap. This case breaks the\n// test-require-delete-array-iterator test.\n\n// Protocols that can allow "unsafe" and "unwise" chars.\nconst unsafeProtocol = new SafeSet([\n  'javascript'\x2C\n  'javascript:'\x2C\n]);\n// Protocols that never have a hostname.\nconst hostlessProtocol = new SafeSet([\n  'javascript'\x2C\n  'javascript:'\x2C\n]);\n// Protocols that always contain a // bit.\nconst slashedProtocol = new SafeSet([\n  'http'\x2C\n  'http:'\x2C\n  'https'\x2C\n  'https:'\x2C\n  'ftp'\x2C\n  'ftp:'\x2C\n  'gopher'\x2C\n  'gopher:'\x2C\n  'file'\x2C\n  'file:'\x2C\n  'ws'\x2C\n  'ws:'\x2C\n  'wss'\x2C\n  'wss:'\x2C\n]);\n\nconst updateActions = {\n  kProtocol: 0\x2C\n  kHost: 1\x2C\n  kHostname: 2\x2C\n  kPort: 3\x2C\n  kUsername: 4\x2C\n  kPassword: 5\x2C\n  kPathname: 6\x2C\n  kSearch: 7\x2C\n  kHash: 8\x2C\n  kHref: 9\x2C\n};\nlet blob;\nlet cryptoRandom;\n\nfunction lazyBlob() {\n  blob ??= require('internal/blob');\n  return blob;\n}\n\nfunction lazyCryptoRandom() {\n  try {\n    cryptoRandom ??= require('internal/crypto/random');\n  } catch {\n    // If Node.js built without crypto support\x2C we'll fall\n    // through here and handle it later.\n  }\n  return cryptoRandom;\n}\n\n// This class provides the internal state of a URL object. An instance of this\n// class is stored in every URL object and is accessed internally by setters\n// and getters. It roughly corresponds to the concept of a URL record in the\n// URL Standard\x2C with a few differences. It is also the object transported to\n// the C++ binding.\n// Refs: https://url.spec.whatwg.org/#concept-url\nclass URLContext {\n  // This is the maximum value uint32_t can get.\n  // Ada uses uint32_t(-1) for declaring omitted values.\n  static #omitted = 4294967295;\n\n  href = '';\n  protocol_end = 0;\n  username_end = 0;\n  host_start = 0;\n  host_end = 0;\n  pathname_start = 0;\n  search_start = 0;\n  hash_start = 0;\n  port = 0;\n  /**\n   * Refers to `ada::scheme::type`\n   *\n   * enum type : uint8_t {\n   *   HTTP = 0\x2C\n   *   NOT_SPECIAL = 1\x2C\n   *   HTTPS = 2\x2C\n   *   WS = 3\x2C\n   *   FTP = 4\x2C\n   *   WSS = 5\x2C\n   *   FILE = 6\n   * };\n   * @type {number}\n   */\n  scheme_type = 1;\n\n  get hasPort() {\n    return this.port !== URLContext.#omitted;\n  }\n\n  get hasSearch() {\n    return this.search_start !== URLContext.#omitted;\n  }\n\n  get hasHash() {\n    return this.hash_start !== URLContext.#omitted;\n  }\n}\n\nlet setURLSearchParamsContext;\nlet getURLSearchParamsList;\nlet setURLSearchParams;\n\nclass URLSearchParamsIterator {\n  #target;\n  #kind;\n  #index;\n\n  // https://heycam.github.io/webidl/#dfn-default-iterator-object\n  constructor(target\x2C kind) {\n    this.#target = target;\n    this.#kind = kind;\n    this.#index = 0;\n  }\n\n  next() {\n    if (typeof this !== 'object' || this === null || !(#target in this))\n      throw new ERR_INVALID_THIS('URLSearchParamsIterator');\n\n    const index = this.#index;\n    const values = getURLSearchParamsList(this.#target);\n    const len = values.length;\n    if (index >= len) {\n      return {\n        value: undefined\x2C\n        done: true\x2C\n      };\n    }\n\n    const name = values[index];\n    const value = values[index + 1];\n    this.#index = index + 2;\n\n    let result;\n    if (this.#kind === 'key') {\n      result = name;\n    } else if (this.#kind === 'value') {\n      result = value;\n    } else {\n      result = [name\x2C value];\n    }\n\n    return {\n      value: result\x2C\n      done: false\x2C\n    };\n  }\n\n  [inspect.custom](recurseTimes\x2C ctx) {\n    if (!this || typeof this !== 'object' || !(#target in this))\n      throw new ERR_INVALID_THIS('URLSearchParamsIterator');\n\n    if (typeof recurseTimes === 'number' && recurseTimes < 0)\n      return ctx.stylize('[Object]'\x2C 'special');\n\n    const innerOpts = { ...ctx };\n    if (recurseTimes !== null) {\n      innerOpts.depth = recurseTimes - 1;\n    }\n    const index = this.#index;\n    const values = getURLSearchParamsList(this.#target);\n    const output = ArrayPrototypeReduce(\n      ArrayPrototypeSlice(values\x2C index)\x2C\n      (prev\x2C cur\x2C i) => {\n        const key = i % 2 === 0;\n        if (this.#kind === 'key' && key) {\n          ArrayPrototypePush(prev\x2C cur);\n        } else if (this.#kind === 'value' && !key) {\n          ArrayPrototypePush(prev\x2C cur);\n        } else if (this.#kind === 'key+value' && !key) {\n          ArrayPrototypePush(prev\x2C [values[index + i - 1]\x2C cur]);\n        }\n        return prev;\n      }\x2C\n      []\x2C\n    );\n    const breakLn = StringPrototypeIncludes(inspect(output\x2C innerOpts)\x2C '\\n');\n    const outputStrs = ArrayPrototypeMap(output\x2C (p) => inspect(p\x2C innerOpts));\n    let outputStr;\n    if (breakLn) {\n      outputStr = `\\n  ${ArrayPrototypeJoin(outputStrs\x2C '\x2C\\n  ')}`;\n    } else {\n      outputStr = ` ${ArrayPrototypeJoin(outputStrs\x2C '\x2C ')}`;\n    }\n    return `${this[SymbolToStringTag]} {${outputStr} }`;\n  }\n}\n\n// https://heycam.github.io/webidl/#dfn-iterator-prototype-object\ndelete URLSearchParamsIterator.prototype.constructor;\nObjectSetPrototypeOf(URLSearchParamsIterator.prototype\x2C IteratorPrototype);\n\nObjectDefineProperties(URLSearchParamsIterator.prototype\x2C {\n  [SymbolToStringTag]: { __proto__: null\x2C configurable: true\x2C value: 'URLSearchParams Iterator' }\x2C\n  next: kEnumerableProperty\x2C\n});\n\n\nclass URLSearchParams {\n  #searchParams = [];\n\n  // "associated url object"\n  #context;\n\n  static {\n    setURLSearchParamsContext = (obj\x2C ctx) => {\n      obj.#context = ctx;\n    };\n    getURLSearchParamsList = (obj) => obj.#searchParams;\n    setURLSearchParams = (obj\x2C query) => {\n      if (query === undefined) {\n        obj.#searchParams = [];\n      } else {\n        obj.#searchParams = parseParams(query);\n      }\n    };\n  }\n\n  // URL Standard says the default value is ''\x2C but as undefined and '' have\n  // the same result\x2C undefined is used to prevent unnecessary parsing.\n  // Default parameter is necessary to keep URLSearchParams.length === 0 in\n  // accordance with Web IDL spec.\n  constructor(init = undefined) {\n    markTransferMode(this\x2C false\x2C false);\n\n    if (init == null) {\n      // Do nothing\n    } else if (typeof init === 'object' || typeof init === 'function') {\n      const method = init[SymbolIterator];\n      if (method === this[SymbolIterator] && #searchParams in init) {\n        // While the spec does not have this branch\x2C we can use it as a\n        // shortcut to avoid having to go through the costly generic iterator.\n        const childParams = init.#searchParams;\n        this.#searchParams = childParams.slice();\n      } else if (method != null) {\n        // Sequence<sequence<USVString>>\n        if (typeof method !== 'function') {\n          throw new ERR_ARG_NOT_ITERABLE('Query pairs');\n        }\n\n        // The following implementationd differs from the URL specification:\n        // Sequences must first be converted from ECMAScript objects before\n        // and operations are done on them\x2C and the operation of converting\n        // the sequences would first exhaust the iterators. If the iterator\n        // returns something invalid in the middle\x2C whether it would be called\n        // after that would be an observable change to the users.\n        // Exhausting the iterator and later converting them to USVString comes\n        // with a significant cost (~40-80%). In order optimize URLSearchParams\n        // creation duration\x2C Node.js merges the iteration and converting\n        // iterations into a single iteration.\n        for (const pair of init) {\n          if (pair == null) {\n            throw new ERR_INVALID_TUPLE('Each query pair'\x2C '[name\x2C value]');\n          } else if (ArrayIsArray(pair)) {\n            // If innerSequence's size is not 2\x2C then throw a TypeError.\n            if (pair.length !== 2) {\n              throw new ERR_INVALID_TUPLE('Each query pair'\x2C '[name\x2C value]');\n            }\n            // Append (innerSequence[0]\x2C innerSequence[1]) to querys list.\n            ArrayPrototypePush(\n              this.#searchParams\x2C\n              StringPrototypeToWellFormed(`${pair[0]}`)\x2C\n              StringPrototypeToWellFormed(`${pair[1]}`)\x2C\n            );\n          } else {\n            if (((typeof pair !== 'object' && typeof pair !== 'function') ||\n                typeof pair[SymbolIterator] !== 'function')) {\n              throw new ERR_INVALID_TUPLE('Each query pair'\x2C '[name\x2C value]');\n            }\n\n            let length = 0;\n\n            for (const element of pair) {\n              length++;\n              ArrayPrototypePush(this.#searchParams\x2C StringPrototypeToWellFormed(`${element}`));\n            }\n\n            // If innerSequence's size is not 2\x2C then throw a TypeError.\n            if (length !== 2) {\n              throw new ERR_INVALID_TUPLE('Each query pair'\x2C '[name\x2C value]');\n            }\n          }\n        }\n      } else {\n        // Record<USVString\x2C USVString>\n        // Need to use reflection APIs for full spec compliance.\n        const visited = new SafeMap();\n        const keys = ReflectOwnKeys(init);\n        for (let i = 0; i < keys.length; i++) {\n          const key = keys[i];\n          const desc = ReflectGetOwnPropertyDescriptor(init\x2C key);\n          if (desc !== undefined && desc.enumerable) {\n            const typedKey = StringPrototypeToWellFormed(key);\n            const typedValue = StringPrototypeToWellFormed(`${init[key]}`);\n\n            // Two different keys may become the same USVString after normalization.\n            // In that case\x2C we retain the later one. Refer to WPT.\n            const keyIdx = visited.get(typedKey);\n            if (keyIdx !== undefined) {\n              this.#searchParams[keyIdx] = typedValue;\n            } else {\n              visited.set(typedKey\x2C ArrayPrototypePush(this.#searchParams\x2C\n                                                       typedKey\x2C\n                                                       typedValue) - 1);\n            }\n          }\n        }\n      }\n    } else {\n      // https://url.spec.whatwg.org/#dom-urlsearchparams-urlsearchparams\n      init = StringPrototypeToWellFormed(`${init}`);\n      this.#searchParams = init ? parseParams(init) : [];\n    }\n  }\n\n  [inspect.custom](recurseTimes\x2C ctx) {\n    if (typeof this !== 'object' || this === null || !(#searchParams in this))\n      throw new ERR_INVALID_THIS('URLSearchParams');\n\n    if (typeof recurseTimes === 'number' && recurseTimes < 0)\n      return ctx.stylize('[Object]'\x2C 'special');\n\n    const separator = '\x2C ';\n    const innerOpts = { ...ctx };\n    if (recurseTimes !== null) {\n      innerOpts.depth = recurseTimes - 1;\n    }\n    const innerInspect = (v) => inspect(v\x2C innerOpts);\n\n    const list = this.#searchParams;\n    const output = [];\n    for (let i = 0; i < list.length; i += 2)\n      ArrayPrototypePush(\n        output\x2C\n        `${innerInspect(list[i])} => ${innerInspect(list[i + 1])}`);\n\n    const length = ArrayPrototypeReduce(\n      output\x2C\n      (prev\x2C cur) => prev + removeColors(cur).length + separator.length\x2C\n      -separator.length\x2C\n    );\n    if (length > ctx.breakLength) {\n      return `${this.constructor.name} {\\n` +\n      `  ${ArrayPrototypeJoin(output\x2C '\x2C\\n  ')} }`;\n    } else if (output.length) {\n      return `${this.constructor.name} { ` +\n      `${ArrayPrototypeJoin(output\x2C separator)} }`;\n    }\n    return `${this.constructor.name} {}`;\n  }\n\n  get size() {\n    if (typeof this !== 'object' || this === null || !(#searchParams in this))\n      throw new ERR_INVALID_THIS('URLSearchParams');\n    return this.#searchParams.length / 2;\n  }\n\n  append(name\x2C value) {\n    if (typeof this !== 'object' || this === null || !(#searchParams in this))\n      throw new ERR_INVALID_THIS('URLSearchParams');\n\n    if (arguments.length < 2) {\n      throw new ERR_MISSING_ARGS('name'\x2C 'value');\n    }\n\n    name = StringPrototypeToWellFormed(`${name}`);\n    value = StringPrototypeToWellFormed(`${value}`);\n    ArrayPrototypePush(this.#searchParams\x2C name\x2C value);\n    if (this.#context) {\n      this.#context.search = this.toString();\n    }\n  }\n\n  delete(name\x2C value = undefined) {\n    if (typeof this !== 'object' || this === null || !(#searchParams in this))\n      throw new ERR_INVALID_THIS('URLSearchParams');\n\n    if (arguments.length < 1) {\n      throw new ERR_MISSING_ARGS('name');\n    }\n\n    const list = this.#searchParams;\n    name = StringPrototypeToWellFormed(`${name}`);\n\n    if (value !== undefined) {\n      value = StringPrototypeToWellFormed(`${value}`);\n      for (let i = 0; i < list.length;) {\n        if (list[i] === name && list[i + 1] === value) {\n          list.splice(i\x2C 2);\n        } else {\n          i += 2;\n        }\n      }\n    } else {\n      for (let i = 0; i < list.length;) {\n        if (list[i] === name) {\n          list.splice(i\x2C 2);\n        } else {\n          i += 2;\n        }\n      }\n    }\n    if (this.#context) {\n      this.#context.search = this.toString();\n    }\n  }\n\n  get(name) {\n    if (typeof this !== 'object' || this === null || !(#searchParams in this))\n      throw new ERR_INVALID_THIS('URLSearchParams');\n\n    if (arguments.length < 1) {\n      throw new ERR_MISSING_ARGS('name');\n    }\n\n    const list = this.#searchParams;\n    name = StringPrototypeToWellFormed(`${name}`);\n    for (let i = 0; i < list.length; i += 2) {\n      if (list[i] === name) {\n        return list[i + 1];\n      }\n    }\n    return null;\n  }\n\n  getAll(name) {\n    if (typeof this !== 'object' || this === null || !(#searchParams in this))\n      throw new ERR_INVALID_THIS('URLSearchParams');\n\n    if (arguments.length < 1) {\n      throw new ERR_MISSING_ARGS('name');\n    }\n\n    const list = this.#searchParams;\n    const values = [];\n    name = StringPrototypeToWellFormed(`${name}`);\n    for (let i = 0; i < list.length; i += 2) {\n      if (list[i] === name) {\n        values.push(list[i + 1]);\n      }\n    }\n    return values;\n  }\n\n  has(name\x2C value = undefined) {\n    if (typeof this !== 'object' || this === null || !(#searchParams in this))\n      throw new ERR_INVALID_THIS('URLSearchParams');\n\n    if (arguments.length < 1) {\n      throw new ERR_MISSING_ARGS('name');\n    }\n\n    const list = this.#searchParams;\n    name = StringPrototypeToWellFormed(`${name}`);\n\n    if (value !== undefined) {\n      value = StringPrototypeToWellFormed(`${value}`);\n    }\n\n    for (let i = 0; i < list.length; i += 2) {\n      if (list[i] === name) {\n        if (value === undefined || list[i + 1] === value) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  set(name\x2C value) {\n    if (typeof this !== 'object' || this === null || !(#searchParams in this))\n      throw new ERR_INVALID_THIS('URLSearchParams');\n\n    if (arguments.length < 2) {\n      throw new ERR_MISSING_ARGS('name'\x2C 'value');\n    }\n\n    const list = this.#searchParams;\n    name = StringPrototypeToWellFormed(`${name}`);\n    value = StringPrototypeToWellFormed(`${value}`);\n\n    // If there are any name-value pairs whose name is `name`\x2C in `list`\x2C set\n    // the value of the first such name-value pair to `value` and remove the\n    // others.\n    let found = false;\n    for (let i = 0; i < list.length;) {\n      const cur = list[i];\n      if (cur === name) {\n        if (!found) {\n          list[i + 1] = value;\n          found = true;\n          i += 2;\n        } else {\n          list.splice(i\x2C 2);\n        }\n      } else {\n        i += 2;\n      }\n    }\n\n    // Otherwise\x2C append a new name-value pair whose name is `name` and value\n    // is `value`\x2C to `list`.\n    if (!found) {\n      ArrayPrototypePush(list\x2C name\x2C value);\n    }\n\n    if (this.#context) {\n      this.#context.search = this.toString();\n    }\n  }\n\n  sort() {\n    if (typeof this !== 'object' || this === null || !(#searchParams in this))\n      throw new ERR_INVALID_THIS('URLSearchParams');\n\n    const a = this.#searchParams;\n    const len = a.length;\n\n    if (len <= 2) {\n      // Nothing needs to be done.\n    } else if (len < 100) {\n      // 100 is found through testing.\n      // Simple stable in-place insertion sort\n      // Derived from v8/src/js/array.js\n      for (let i = 2; i < len; i += 2) {\n        const curKey = a[i];\n        const curVal = a[i + 1];\n        let j;\n        for (j = i - 2; j >= 0; j -= 2) {\n          if (a[j] > curKey) {\n            a[j + 2] = a[j];\n            a[j + 3] = a[j + 1];\n          } else {\n            break;\n          }\n        }\n        a[j + 2] = curKey;\n        a[j + 3] = curVal;\n      }\n    } else {\n      // Bottom-up iterative stable merge sort\n      const lBuffer = new Array(len);\n      const rBuffer = new Array(len);\n      for (let step = 2; step < len; step *= 2) {\n        for (let start = 0; start < len - 2; start += 2 * step) {\n          const mid = start + step;\n          let end = mid + step;\n          end = end < len ? end : len;\n          if (mid > end)\n            continue;\n          merge(a\x2C start\x2C mid\x2C end\x2C lBuffer\x2C rBuffer);\n        }\n      }\n    }\n\n    if (this.#context) {\n      this.#context.search = this.toString();\n    }\n  }\n\n  // https://heycam.github.io/webidl/#es-iterators\n  // Define entries here rather than [Symbol.iterator] as the function name\n  // must be set to `entries`.\n  entries() {\n    if (typeof this !== 'object' || this === null || !(#searchParams in this))\n      throw new ERR_INVALID_THIS('URLSearchParams');\n\n    return new URLSearchParamsIterator(this\x2C 'key+value');\n  }\n\n  forEach(callback\x2C thisArg = undefined) {\n    if (typeof this !== 'object' || this === null || !(#searchParams in this))\n      throw new ERR_INVALID_THIS('URLSearchParams');\n\n    validateFunction(callback\x2C 'callback');\n\n    let list = this.#searchParams;\n\n    let i = 0;\n    while (i < list.length) {\n      const key = list[i];\n      const value = list[i + 1];\n      callback.call(thisArg\x2C value\x2C key\x2C this);\n      // In case the URL object's `search` is updated\n      list = this.#searchParams;\n      i += 2;\n    }\n  }\n\n  // https://heycam.github.io/webidl/#es-iterable\n  keys() {\n    if (typeof this !== 'object' || this === null || !(#searchParams in this))\n      throw new ERR_INVALID_THIS('URLSearchParams');\n\n    return new URLSearchParamsIterator(this\x2C 'key');\n  }\n\n  values() {\n    if (typeof this !== 'object' || this === null || !(#searchParams in this))\n      throw new ERR_INVALID_THIS('URLSearchParams');\n\n    return new URLSearchParamsIterator(this\x2C 'value');\n  }\n\n  // https://heycam.github.io/webidl/#es-stringifier\n  // https://url.spec.whatwg.org/#urlsearchparams-stringification-behavior\n  toString() {\n    if (typeof this !== 'object' || this === null || !(#searchParams in this))\n      throw new ERR_INVALID_THIS('URLSearchParams');\n\n    return serializeParams(this.#searchParams);\n  }\n}\n\nObjectDefineProperties(URLSearchParams.prototype\x2C {\n  append: kEnumerableProperty\x2C\n  delete: kEnumerableProperty\x2C\n  get: kEnumerableProperty\x2C\n  getAll: kEnumerableProperty\x2C\n  has: kEnumerableProperty\x2C\n  set: kEnumerableProperty\x2C\n  size: kEnumerableProperty\x2C\n  sort: kEnumerableProperty\x2C\n  entries: kEnumerableProperty\x2C\n  forEach: kEnumerableProperty\x2C\n  keys: kEnumerableProperty\x2C\n  values: kEnumerableProperty\x2C\n  toString: kEnumerableProperty\x2C\n  [SymbolToStringTag]: { __proto__: null\x2C configurable: true\x2C value: 'URLSearchParams' }\x2C\n\n  // https://heycam.github.io/webidl/#es-iterable-entries\n  [SymbolIterator]: {\n    __proto__: null\x2C\n    configurable: true\x2C\n    writable: true\x2C\n    value: URLSearchParams.prototype.entries\x2C\n  }\x2C\n});\n\n/**\n * Checks if a value has the shape of a WHATWG URL object.\n *\n * Using a symbol or instanceof would not be able to recognize URL objects\n * coming from other implementations (e.g. in Electron)\x2C so instead we are\n * checking some well known properties for a lack of a better test.\n *\n * We use `href` and `protocol` as they are the only properties that are\n * easy to retrieve and calculate due to the lazy nature of the getters.\n *\n * We check for `auth` and `path` attribute to distinguish legacy url instance with\n * WHATWG URL instance.\n * @param {*} self\n * @returns {self is URL}\n */\nfunction isURL(self) {\n  return Boolean(self?.href && self.protocol && self.auth === undefined && self.path === undefined);\n}\n\nclass URL {\n  #context = new URLContext();\n  #searchParams;\n\n  constructor(input\x2C base = undefined) {\n    markTransferMode(this\x2C false\x2C false);\n\n    if (arguments.length === 0) {\n      throw new ERR_MISSING_ARGS('url');\n    }\n\n    // StringPrototypeToWellFormed is not needed.\n    input = `${input}`;\n\n    if (base !== undefined) {\n      base = `${base}`;\n    }\n\n    this.#updateContext(bindingUrl.parse(input\x2C base));\n  }\n\n  [inspect.custom](depth\x2C opts) {\n    if (typeof depth === 'number' && depth < 0)\n      return this;\n\n    const constructor = getConstructorOf(this) || URL;\n    const obj = { __proto__: { constructor } };\n\n    obj.href = this.href;\n    obj.origin = this.origin;\n    obj.protocol = this.protocol;\n    obj.username = this.username;\n    obj.password = this.password;\n    obj.host = this.host;\n    obj.hostname = this.hostname;\n    obj.port = this.port;\n    obj.pathname = this.pathname;\n    obj.search = this.search;\n    obj.searchParams = this.searchParams;\n    obj.hash = this.hash;\n\n    if (opts.showHidden) {\n      obj[contextForInspect] = this.#context;\n    }\n\n    return `${constructor.name} ${inspect(obj\x2C opts)}`;\n  }\n\n  #updateContext(href) {\n    this.#context.href = href;\n\n    const {\n      0: protocol_end\x2C\n      1: username_end\x2C\n      2: host_start\x2C\n      3: host_end\x2C\n      4: port\x2C\n      5: pathname_start\x2C\n      6: search_start\x2C\n      7: hash_start\x2C\n      8: scheme_type\x2C\n    } = bindingUrl.urlComponents;\n\n    this.#context.protocol_end = protocol_end;\n    this.#context.username_end = username_end;\n    this.#context.host_start = host_start;\n    this.#context.host_end = host_end;\n    this.#context.port = port;\n    this.#context.pathname_start = pathname_start;\n    this.#context.search_start = search_start;\n    this.#context.hash_start = hash_start;\n    this.#context.scheme_type = scheme_type;\n\n    if (this.#searchParams) {\n      if (this.#context.hasSearch) {\n        setURLSearchParams(this.#searchParams\x2C this.search);\n      } else {\n        setURLSearchParams(this.#searchParams\x2C undefined);\n      }\n    }\n  }\n\n  toString() {\n    return this.#context.href;\n  }\n\n  get href() {\n    return this.#context.href;\n  }\n\n  set href(value) {\n    value = `${value}`;\n    const href = bindingUrl.update(this.#context.href\x2C updateActions.kHref\x2C value);\n    if (!href) { throw new ERR_INVALID_URL(value); }\n    this.#updateContext(href);\n  }\n\n  // readonly\n  get origin() {\n    const protocol = StringPrototypeSlice(this.#context.href\x2C 0\x2C this.#context.protocol_end);\n\n    // Check if scheme_type is not `NOT_SPECIAL`\n    if (this.#context.scheme_type !== 1) {\n      // Check if scheme_type is `FILE`\n      if (this.#context.scheme_type === 6) {\n        return 'null';\n      }\n      return `${protocol}//${this.host}`;\n    }\n\n    if (protocol === 'blob:') {\n      const path = this.pathname;\n      if (path.length > 0) {\n        try {\n          const out = new URL(path);\n          // Only return origin of scheme is `http` or `https`\n          // Otherwise return a new opaque origin (null).\n          if (out.#context.scheme_type === 0 || out.#context.scheme_type === 2) {\n            return `${out.protocol}//${out.host}`;\n          }\n        } catch {\n          // Do nothing.\n        }\n      }\n    }\n\n    return 'null';\n  }\n\n  get protocol() {\n    return StringPrototypeSlice(this.#context.href\x2C 0\x2C this.#context.protocol_end);\n  }\n\n  set protocol(value) {\n    const href = bindingUrl.update(this.#context.href\x2C updateActions.kProtocol\x2C `${value}`);\n    if (href) {\n      this.#updateContext(href);\n    }\n  }\n\n  get username() {\n    if (this.#context.protocol_end + 2 < this.#context.username_end) {\n      return StringPrototypeSlice(this.#context.href\x2C this.#context.protocol_end + 2\x2C this.#context.username_end);\n    }\n    return '';\n  }\n\n  set username(value) {\n    const href = bindingUrl.update(this.#context.href\x2C updateActions.kUsername\x2C `${value}`);\n    if (href) {\n      this.#updateContext(href);\n    }\n  }\n\n  get password() {\n    if (this.#context.host_start - this.#context.username_end > 0) {\n      return StringPrototypeSlice(this.#context.href\x2C this.#context.username_end + 1\x2C this.#context.host_start);\n    }\n    return '';\n  }\n\n  set password(value) {\n    const href = bindingUrl.update(this.#context.href\x2C updateActions.kPassword\x2C `${value}`);\n    if (href) {\n      this.#updateContext(href);\n    }\n  }\n\n  get host() {\n    let startsAt = this.#context.host_start;\n    if (this.#context.href[startsAt] === '@') {\n      startsAt++;\n    }\n    // If we have an empty host\x2C then the space between components.host_end and\n    // components.pathname_start may be occupied by /.\n    if (startsAt === this.#context.host_end) {\n      return '';\n    }\n    return StringPrototypeSlice(this.#context.href\x2C startsAt\x2C this.#context.pathname_start);\n  }\n\n  set host(value) {\n    const href = bindingUrl.update(this.#context.href\x2C updateActions.kHost\x2C `${value}`);\n    if (href) {\n      this.#updateContext(href);\n    }\n  }\n\n  get hostname() {\n    let startsAt = this.#context.host_start;\n    // host_start might be "@" if the URL has credentials\n    if (this.#context.href[startsAt] === '@') {\n      startsAt++;\n    }\n    return StringPrototypeSlice(this.#context.href\x2C startsAt\x2C this.#context.host_end);\n  }\n\n  set hostname(value) {\n    const href = bindingUrl.update(this.#context.href\x2C updateActions.kHostname\x2C `${value}`);\n    if (href) {\n      this.#updateContext(href);\n    }\n  }\n\n  get port() {\n    if (this.#context.hasPort) {\n      return `${this.#context.port}`;\n    }\n    return '';\n  }\n\n  set port(value) {\n    const href = bindingUrl.update(this.#context.href\x2C updateActions.kPort\x2C `${value}`);\n    if (href) {\n      this.#updateContext(href);\n    }\n  }\n\n  get pathname() {\n    let endsAt;\n    if (this.#context.hasSearch) {\n      endsAt = this.#context.search_start;\n    } else if (this.#context.hasHash) {\n      endsAt = this.#context.hash_start;\n    }\n    return StringPrototypeSlice(this.#context.href\x2C this.#context.pathname_start\x2C endsAt);\n  }\n\n  set pathname(value) {\n    const href = bindingUrl.update(this.#context.href\x2C updateActions.kPathname\x2C `${value}`);\n    if (href) {\n      this.#updateContext(href);\n    }\n  }\n\n  get search() {\n    if (!this.#context.hasSearch) { return ''; }\n    let endsAt = this.#context.href.length;\n    if (this.#context.hasHash) { endsAt = this.#context.hash_start; }\n    if (endsAt - this.#context.search_start <= 1) { return ''; }\n    return StringPrototypeSlice(this.#context.href\x2C this.#context.search_start\x2C endsAt);\n  }\n\n  set search(value) {\n    const href = bindingUrl.update(this.#context.href\x2C updateActions.kSearch\x2C StringPrototypeToWellFormed(`${value}`));\n    if (href) {\n      this.#updateContext(href);\n    }\n  }\n\n  // readonly\n  get searchParams() {\n    // Create URLSearchParams on demand to greatly improve the URL performance.\n    if (this.#searchParams == null) {\n      this.#searchParams = new URLSearchParams(this.search);\n      setURLSearchParamsContext(this.#searchParams\x2C this);\n    }\n    return this.#searchParams;\n  }\n\n  get hash() {\n    if (!this.#context.hasHash || (this.#context.href.length - this.#context.hash_start <= 1)) {\n      return '';\n    }\n    return StringPrototypeSlice(this.#context.href\x2C this.#context.hash_start);\n  }\n\n  set hash(value) {\n    const href = bindingUrl.update(this.#context.href\x2C updateActions.kHash\x2C `${value}`);\n    if (href) {\n      this.#updateContext(href);\n    }\n  }\n\n  toJSON() {\n    return this.#context.href;\n  }\n\n  static canParse(url\x2C base = undefined) {\n    if (arguments.length === 0) {\n      throw new ERR_MISSING_ARGS('url');\n    }\n\n    url = `${url}`;\n\n    if (base !== undefined) {\n      return bindingUrl.canParse(url\x2C `${base}`);\n    }\n\n    // It is important to differentiate the canParse call statements\n    // since they resolve into different v8 fast api overloads.\n    return bindingUrl.canParse(url);\n  }\n}\n\nObjectDefineProperties(URL.prototype\x2C {\n  [SymbolToStringTag]: { __proto__: null\x2C configurable: true\x2C value: 'URL' }\x2C\n  toString: kEnumerableProperty\x2C\n  href: kEnumerableProperty\x2C\n  origin: kEnumerableProperty\x2C\n  protocol: kEnumerableProperty\x2C\n  username: kEnumerableProperty\x2C\n  password: kEnumerableProperty\x2C\n  host: kEnumerableProperty\x2C\n  hostname: kEnumerableProperty\x2C\n  port: kEnumerableProperty\x2C\n  pathname: kEnumerableProperty\x2C\n  search: kEnumerableProperty\x2C\n  searchParams: kEnumerableProperty\x2C\n  hash: kEnumerableProperty\x2C\n  toJSON: kEnumerableProperty\x2C\n});\n\nObjectDefineProperties(URL\x2C {\n  canParse: {\n    __proto__: null\x2C\n    configurable: true\x2C\n    writable: true\x2C\n    enumerable: true\x2C\n  }\x2C\n});\n\nfunction installObjectURLMethods() {\n  const bindingBlob = internalBinding('blob');\n\n  function createObjectURL(obj) {\n    const cryptoRandom = lazyCryptoRandom();\n    if (cryptoRandom === undefined)\n      throw new ERR_NO_CRYPTO();\n\n    const blob = lazyBlob();\n    if (!blob.isBlob(obj))\n      throw new ERR_INVALID_ARG_TYPE('obj'\x2C 'Blob'\x2C obj);\n\n    const id = cryptoRandom.randomUUID();\n\n    bindingBlob.storeDataObject(id\x2C obj[blob.kHandle]\x2C obj.size\x2C obj.type);\n\n    return `blob:nodedata:${id}`;\n  }\n\n  function revokeObjectURL(url) {\n    if (arguments.length === 0) {\n      throw new ERR_MISSING_ARGS('url');\n    }\n\n    bindingBlob.revokeObjectURL(`${url}`);\n  }\n\n  ObjectDefineProperties(URL\x2C {\n    createObjectURL: {\n      __proto__: null\x2C\n      configurable: true\x2C\n      writable: true\x2C\n      enumerable: true\x2C\n      value: createObjectURL\x2C\n    }\x2C\n    revokeObjectURL: {\n      __proto__: null\x2C\n      configurable: true\x2C\n      writable: true\x2C\n      enumerable: true\x2C\n      value: revokeObjectURL\x2C\n    }\x2C\n  });\n}\n\n// application/x-www-form-urlencoded parser\n// Ref: https://url.spec.whatwg.org/#concept-urlencoded-parser\nfunction parseParams(qs) {\n  const out = [];\n  let seenSep = false;\n  let buf = '';\n  let encoded = false;\n  let encodeCheck = 0;\n  let i = qs[0] === '?' ? 1 : 0;\n  let pairStart = i;\n  let lastPos = i;\n  for (; i < qs.length; ++i) {\n    const code = StringPrototypeCharCodeAt(qs\x2C i);\n\n    // Try matching key/value pair separator\n    if (code === CHAR_AMPERSAND) {\n      if (pairStart === i) {\n        // We saw an empty substring between pair separators\n        lastPos = pairStart = i + 1;\n        continue;\n      }\n\n      if (lastPos < i)\n        buf += qs.slice(lastPos\x2C i);\n      if (encoded)\n        buf = querystring.unescape(buf);\n      out.push(buf);\n\n      // If `buf` is the key\x2C add an empty value.\n      if (!seenSep)\n        out.push('');\n\n      seenSep = false;\n      buf = '';\n      encoded = false;\n      encodeCheck = 0;\n      lastPos = pairStart = i + 1;\n      continue;\n    }\n\n    // Try matching key/value separator (e.g. '=') if we haven't already\n    if (!seenSep && code === CHAR_EQUAL) {\n      // Key/value separator match!\n      if (lastPos < i)\n        buf += qs.slice(lastPos\x2C i);\n      if (encoded)\n        buf = querystring.unescape(buf);\n      out.push(buf);\n\n      seenSep = true;\n      buf = '';\n      encoded = false;\n      encodeCheck = 0;\n      lastPos = i + 1;\n      continue;\n    }\n\n    // Handle + and percent decoding.\n    if (code === CHAR_PLUS) {\n      if (lastPos < i)\n        buf += StringPrototypeSlice(qs\x2C lastPos\x2C i);\n      buf += ' ';\n      lastPos = i + 1;\n    } else if (!encoded) {\n      // Try to match an (valid) encoded byte (once) to minimize unnecessary\n      // calls to string decoding functions\n      if (code === CHAR_PERCENT) {\n        encodeCheck = 1;\n      } else if (encodeCheck > 0) {\n        if (isHexTable[code] === 1) {\n          if (++encodeCheck === 3) {\n            encoded = true;\n          }\n        } else {\n          encodeCheck = 0;\n        }\n      }\n    }\n  }\n\n  // Deal with any leftover key or value data\n\n  // There is a trailing &. No more processing is needed.\n  if (pairStart === i)\n    return out;\n\n  if (lastPos < i)\n    buf += StringPrototypeSlice(qs\x2C lastPos\x2C i);\n  if (encoded)\n    buf = querystring.unescape(buf);\n  ArrayPrototypePush(out\x2C buf);\n\n  // If `buf` is the key\x2C add an empty value.\n  if (!seenSep)\n    ArrayPrototypePush(out\x2C '');\n\n  return out;\n}\n\n// Adapted from querystring's implementation.\n// Ref: https://url.spec.whatwg.org/#concept-urlencoded-byte-serializer\nconst noEscape = new Int8Array([\n/*\n  0\x2C 1\x2C 2\x2C 3\x2C 4\x2C 5\x2C 6\x2C 7\x2C 8\x2C 9\x2C A\x2C B\x2C C\x2C D\x2C E\x2C F\n*/\n  0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C // 0x00 - 0x0F\n  0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C // 0x10 - 0x1F\n  0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 1\x2C 0\x2C 0\x2C 1\x2C 1\x2C 0\x2C // 0x20 - 0x2F\n  1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C // 0x30 - 0x3F\n  0\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C // 0x40 - 0x4F\n  1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 0\x2C 0\x2C 0\x2C 0\x2C 1\x2C // 0x50 - 0x5F\n  0\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C // 0x60 - 0x6F\n  1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C  // 0x70 - 0x7F\n]);\n\n// Special version of hexTable that uses `+` for U+0020 SPACE.\nconst paramHexTable = hexTable.slice();\nparamHexTable[0x20] = '+';\n\n// application/x-www-form-urlencoded serializer\n// Ref: https://url.spec.whatwg.org/#concept-urlencoded-serializer\nfunction serializeParams(array) {\n  const len = array.length;\n  if (len === 0)\n    return '';\n\n  const firstEncodedParam = encodeStr(array[0]\x2C noEscape\x2C paramHexTable);\n  const firstEncodedValue = encodeStr(array[1]\x2C noEscape\x2C paramHexTable);\n  let output = `${firstEncodedParam}=${firstEncodedValue}`;\n\n  for (let i = 2; i < len; i += 2) {\n    const encodedParam = encodeStr(array[i]\x2C noEscape\x2C paramHexTable);\n    const encodedValue = encodeStr(array[i + 1]\x2C noEscape\x2C paramHexTable);\n    output += `&${encodedParam}=${encodedValue}`;\n  }\n\n  return output;\n}\n\n// for merge sort\nfunction merge(out\x2C start\x2C mid\x2C end\x2C lBuffer\x2C rBuffer) {\n  const sizeLeft = mid - start;\n  const sizeRight = end - mid;\n  let l\x2C r\x2C o;\n\n  for (l = 0; l < sizeLeft; l++)\n    lBuffer[l] = out[start + l];\n  for (r = 0; r < sizeRight; r++)\n    rBuffer[r] = out[mid + r];\n\n  l = 0;\n  r = 0;\n  o = start;\n  while (l < sizeLeft && r < sizeRight) {\n    if (lBuffer[l] <= rBuffer[r]) {\n      out[o++] = lBuffer[l++];\n      out[o++] = lBuffer[l++];\n    } else {\n      out[o++] = rBuffer[r++];\n      out[o++] = rBuffer[r++];\n    }\n  }\n  while (l < sizeLeft)\n    out[o++] = lBuffer[l++];\n  while (r < sizeRight)\n    out[o++] = rBuffer[r++];\n}\n\nfunction domainToASCII(domain) {\n  if (arguments.length < 1)\n    throw new ERR_MISSING_ARGS('domain');\n\n  // StringPrototypeToWellFormed is not needed.\n  return bindingUrl.domainToASCII(`${domain}`);\n}\n\nfunction domainToUnicode(domain) {\n  if (arguments.length < 1)\n    throw new ERR_MISSING_ARGS('domain');\n\n  // StringPrototypeToWellFormed is not needed.\n  return bindingUrl.domainToUnicode(`${domain}`);\n}\n\n/**\n * Utility function that converts a URL object into an ordinary options object\n * as expected by the `http.request` and `https.request` APIs.\n * @param {URL} url\n * @returns {Record<string\x2C unknown>}\n */\nfunction urlToHttpOptions(url) {\n  const { hostname\x2C pathname\x2C port\x2C username\x2C password\x2C search } = url;\n  const options = {\n    __proto__: null\x2C\n    ...url\x2C // In case the url object was extended by the user.\n    protocol: url.protocol\x2C\n    hostname: hostname && StringPrototypeStartsWith(hostname\x2C '[') ?\n      StringPrototypeSlice(hostname\x2C 1\x2C -1) :\n      hostname\x2C\n    hash: url.hash\x2C\n    search: search\x2C\n    pathname: pathname\x2C\n    path: `${pathname || ''}${search || ''}`\x2C\n    href: url.href\x2C\n  };\n  if (port !== '') {\n    options.port = Number(port);\n  }\n  if (username || password) {\n    options.auth = `${decodeURIComponent(username)}:${decodeURIComponent(password)}`;\n  }\n  return options;\n}\n\nfunction getPathFromURLWin32(url) {\n  const hostname = url.hostname;\n  let pathname = url.pathname;\n  for (let n = 0; n < pathname.length; n++) {\n    if (pathname[n] === '%') {\n      const third = StringPrototypeCodePointAt(pathname\x2C n + 2) | 0x20;\n      if ((pathname[n + 1] === '2' && third === 102) || // 2f 2F /\n          (pathname[n + 1] === '5' && third === 99)) {  // 5c 5C \\\n        throw new ERR_INVALID_FILE_URL_PATH(\n          'must not include encoded \\\\ or / characters'\x2C\n        );\n      }\n    }\n  }\n  pathname = SideEffectFreeRegExpPrototypeSymbolReplace(FORWARD_SLASH\x2C pathname\x2C '\\\\');\n  pathname = decodeURIComponent(pathname);\n  if (hostname !== '') {\n    // If hostname is set\x2C then we have a UNC path\n    // Pass the hostname through domainToUnicode just in case\n    // it is an IDN using punycode encoding. We do not need to worry\n    // about percent encoding because the URL parser will have\n    // already taken care of that for us. Note that this only\n    // causes IDNs with an appropriate `xn--` prefix to be decoded.\n    return `\\\\\\\\${domainToUnicode(hostname)}${pathname}`;\n  }\n  // Otherwise\x2C it's a local path that requires a drive letter\n  const letter = StringPrototypeCodePointAt(pathname\x2C 1) | 0x20;\n  const sep = StringPrototypeCharAt(pathname\x2C 2);\n  if (letter < CHAR_LOWERCASE_A || letter > CHAR_LOWERCASE_Z ||   // a..z A..Z\n      (sep !== ':')) {\n    throw new ERR_INVALID_FILE_URL_PATH('must be absolute');\n  }\n  return StringPrototypeSlice(pathname\x2C 1);\n}\n\nfunction getPathFromURLPosix(url) {\n  if (url.hostname !== '') {\n    throw new ERR_INVALID_FILE_URL_HOST(platform);\n  }\n  const pathname = url.pathname;\n  for (let n = 0; n < pathname.length; n++) {\n    if (pathname[n] === '%') {\n      const third = StringPrototypeCodePointAt(pathname\x2C n + 2) | 0x20;\n      if (pathname[n + 1] === '2' && third === 102) {\n        throw new ERR_INVALID_FILE_URL_PATH(\n          'must not include encoded / characters'\x2C\n        );\n      }\n    }\n  }\n  return decodeURIComponent(pathname);\n}\n\nfunction fileURLToPath(path) {\n  if (typeof path === 'string')\n    path = new URL(path);\n  else if (!isURL(path))\n    throw new ERR_INVALID_ARG_TYPE('path'\x2C ['string'\x2C 'URL']\x2C path);\n  if (path.protocol !== 'file:')\n    throw new ERR_INVALID_URL_SCHEME('file');\n  return isWindows ? getPathFromURLWin32(path) : getPathFromURLPosix(path);\n}\n\n// The following characters are percent-encoded when converting from file path\n// to URL:\n// - %: The percent character is the only character not encoded by the\n//        `pathname` setter.\n// - \\: Backslash is encoded on non-windows platforms since it's a valid\n//      character but the `pathname` setters replaces it by a forward slash.\n// - LF: The newline character is stripped out by the `pathname` setter.\n//       (See whatwg/url#419)\n// - CR: The carriage return character is also stripped out by the `pathname`\n//       setter.\n// - TAB: The tab character is also stripped out by the `pathname` setter.\nconst percentRegEx = /%/g;\nconst backslashRegEx = /\\\\/g;\nconst newlineRegEx = /\\n/g;\nconst carriageReturnRegEx = /\\r/g;\nconst tabRegEx = /\\t/g;\nconst questionRegex = /\\?/g;\nconst hashRegex = /#/g;\n\nfunction encodePathChars(filepath) {\n  if (StringPrototypeIndexOf(filepath\x2C '%') !== -1)\n    filepath = RegExpPrototypeSymbolReplace(percentRegEx\x2C filepath\x2C '%25');\n  // In posix\x2C backslash is a valid character in paths:\n  if (!isWindows && StringPrototypeIndexOf(filepath\x2C '\\\\') !== -1)\n    filepath = RegExpPrototypeSymbolReplace(backslashRegEx\x2C filepath\x2C '%5C');\n  if (StringPrototypeIndexOf(filepath\x2C '\\n') !== -1)\n    filepath = RegExpPrototypeSymbolReplace(newlineRegEx\x2C filepath\x2C '%0A');\n  if (StringPrototypeIndexOf(filepath\x2C '\\r') !== -1)\n    filepath = RegExpPrototypeSymbolReplace(carriageReturnRegEx\x2C filepath\x2C '%0D');\n  if (StringPrototypeIndexOf(filepath\x2C '\\t') !== -1)\n    filepath = RegExpPrototypeSymbolReplace(tabRegEx\x2C filepath\x2C '%09');\n  return filepath;\n}\n\nfunction pathToFileURL(filepath) {\n  if (isWindows && StringPrototypeStartsWith(filepath\x2C '\\\\\\\\')) {\n    const outURL = new URL('file://');\n    // UNC path format: \\\\server\\share\\resource\n    const hostnameEndIndex = StringPrototypeIndexOf(filepath\x2C '\\\\'\x2C 2);\n    if (hostnameEndIndex === -1) {\n      throw new ERR_INVALID_ARG_VALUE(\n        'path'\x2C\n        filepath\x2C\n        'Missing UNC resource path'\x2C\n      );\n    }\n    if (hostnameEndIndex === 2) {\n      throw new ERR_INVALID_ARG_VALUE(\n        'path'\x2C\n        filepath\x2C\n        'Empty UNC servername'\x2C\n      );\n    }\n    const hostname = StringPrototypeSlice(filepath\x2C 2\x2C hostnameEndIndex);\n    outURL.hostname = domainToASCII(hostname);\n    outURL.pathname = encodePathChars(\n      RegExpPrototypeSymbolReplace(backslashRegEx\x2C StringPrototypeSlice(filepath\x2C hostnameEndIndex)\x2C '/'));\n    return outURL;\n  }\n  let resolved = path.resolve(filepath);\n  // path.resolve strips trailing slashes so we must add them back\n  const filePathLast = StringPrototypeCharCodeAt(filepath\x2C\n                                                 filepath.length - 1);\n  if ((filePathLast === CHAR_FORWARD_SLASH ||\n       (isWindows && filePathLast === CHAR_BACKWARD_SLASH)) &&\n      resolved[resolved.length - 1] !== path.sep)\n    resolved += '/';\n\n  // Call encodePathChars first to avoid encoding % again for ? and #.\n  resolved = encodePathChars(resolved);\n\n  // Question and hash character should be included in pathname.\n  // Therefore\x2C encoding is required to eliminate parsing them in different states.\n  // This is done as an optimization to not creating a URL instance and\n  // later triggering pathname setter\x2C which impacts performance\n  if (StringPrototypeIndexOf(resolved\x2C '?') !== -1)\n    resolved = RegExpPrototypeSymbolReplace(questionRegex\x2C resolved\x2C '%3F');\n  if (StringPrototypeIndexOf(resolved\x2C '#') !== -1)\n    resolved = RegExpPrototypeSymbolReplace(hashRegex\x2C resolved\x2C '%23');\n  return new URL(`file://${resolved}`);\n}\n\nfunction toPathIfFileURL(fileURLOrPath) {\n  if (!isURL(fileURLOrPath))\n    return fileURLOrPath;\n  return fileURLToPath(fileURLOrPath);\n}\n\n/**\n * This util takes a string containing a URL and return the URL origin\x2C\n * its meant to avoid calls to `new URL` constructor.\n * @param {string} url\n * @returns {URL['origin']}\n */\nfunction getURLOrigin(url) {\n  return bindingUrl.getOrigin(url);\n}\n\nmodule.exports = {\n  fileURLToPath\x2C\n  pathToFileURL\x2C\n  toPathIfFileURL\x2C\n  installObjectURLMethods\x2C\n  URL\x2C\n  URLSearchParams\x2C\n  domainToASCII\x2C\n  domainToUnicode\x2C\n  urlToHttpOptions\x2C\n  encodeStr\x2C\n  isURL\x2C\n\n  urlUpdateActions: updateActions\x2C\n  getURLOrigin\x2C\n  unsafeProtocol\x2C\n  hostlessProtocol\x2C\n  slashedProtocol\x2C\n};\n
code-source-info,0x72b21318ec,39,43464,43577,C0O43484C3O43489C9O43515C11O43536C12O43539C15O43546C19O43575,,
tick,0x7ff809303aef,73449,0,0x0,3,0x109ba30d0,0x72b2128ade,0x72b212843f,0x72b2127ceb,0x72b212753e,0x72b2126ced,0x723b73f9fd
tick,0x7ff8091ad6c7,73469,0,0x0,3,0x109ba30d0,0x72b2128ade,0x72b212843f,0x72b2127ceb,0x72b212753e,0x72b2126ced,0x723b73f9fd
tick,0x7ff809303acf,73476,0,0x0,3,0x109ba30d0,0x72b2128ade,0x72b212843f,0x72b2127ceb,0x72b212753e,0x72b2126ced,0x723b73f9fd
code-creation,JS,10,73491,0x72b2134a0c,45,isURL node:internal/url:765:15,0x72e2e9f168,~
code-source-info,0x72b2134a0c,39,21809,21920,C0O21820C12O21839C21O21854C27O21871C34O21898C40O21827C44O21918,,
code-creation,JS,10,73574,0x72b2134c44,149, node:internal/fs/utils:670:38,0x72e2eb4020,~
code-source-info,0x72b2134c44,60,18158,18870,C14O18191C22O18224C25O18224C31O18250C36O18281C41O18302C54O18256C59O18250C60O18376C65O18429C70O18429C75O18523C81O18546C85O18574C89O18591C95O18591C104O18642C108O18663C113O18663C120O18708C121O18715C122O18723C127O18755C143O18729C148O18723,,
code-creation,JS,10,73629,0x72b2134df4,16,isUint8Array node:internal/util/types:13:22,0x72e2e83ac8,~
script-source,18,node:internal/util/types,'use strict';\n\nconst {\n  ArrayBufferIsView\x2C\n  ObjectDefineProperties\x2C\n  TypedArrayPrototypeGetSymbolToStringTag\x2C\n} = primordials;\n\nfunction isTypedArray(value) {\n  return TypedArrayPrototypeGetSymbolToStringTag(value) !== undefined;\n}\n\nfunction isUint8Array(value) {\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Uint8Array';\n}\n\nfunction isUint8ClampedArray(value) {\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Uint8ClampedArray';\n}\n\nfunction isUint16Array(value) {\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Uint16Array';\n}\n\nfunction isUint32Array(value) {\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Uint32Array';\n}\n\nfunction isInt8Array(value) {\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Int8Array';\n}\n\nfunction isInt16Array(value) {\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Int16Array';\n}\n\nfunction isInt32Array(value) {\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Int32Array';\n}\n\nfunction isFloat32Array(value) {\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Float32Array';\n}\n\nfunction isFloat64Array(value) {\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Float64Array';\n}\n\nfunction isBigInt64Array(value) {\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'BigInt64Array';\n}\n\nfunction isBigUint64Array(value) {\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'BigUint64Array';\n}\n\nmodule.exports = {\n  ...internalBinding('types')\x2C\n  isArrayBufferView: ArrayBufferIsView\x2C\n  isTypedArray\x2C\n  isUint8Array\x2C\n  isUint8ClampedArray\x2C\n  isUint16Array\x2C\n  isUint32Array\x2C\n  isInt8Array\x2C\n  isInt16Array\x2C\n  isInt32Array\x2C\n  isFloat32Array\x2C\n  isFloat64Array\x2C\n  isBigInt64Array\x2C\n  isBigUint64Array\x2C\n};\n\nlet isCryptoKey;\nlet isKeyObject;\n\nObjectDefineProperties(module.exports\x2C {\n  isKeyObject: {\n    __proto__: null\x2C\n    configurable: false\x2C\n    enumerable: true\x2C\n    value(obj) {\n      if (!process.versions.openssl) {\n        return false;\n      }\n\n      if (!isKeyObject) {\n        ({ isKeyObject } = require('internal/crypto/keys'));\n      }\n\n      return isKeyObject(obj);\n    }\x2C\n  }\x2C\n  isCryptoKey: {\n    __proto__: null\x2C\n    configurable: false\x2C\n    enumerable: true\x2C\n    value(obj) {\n      if (!process.versions.openssl) {\n        return false;\n      }\n\n      if (!isCryptoKey) {\n        ({ isCryptoKey } = require('internal/crypto/keys'));\n      }\n\n      return isCryptoKey(obj);\n    }\x2C\n  }\x2C\n});\n
code-source-info,0x72b2134df4,18,257,342,C0O269C5O276C12O323C15O340,,
code-creation,JS,10,73848,0x72b213527c,62,splitRoot node:fs:2581:33,0x72e2eadb28,~
code-source-info,0x72b213527c,55,68350,68542,C0O68375C2O68386C6O68380C11O68407C16O68411C24O68449C26O68445C31O68477C44O68484C49O68516C50O68396C55O68362C59O68527C61O68538,,
code-creation,JS,10,73887,0x72b21353b4,20,nextPart node:fs:2614:31,0x72e2eadbd8,~
code-source-info,0x72b21353b4,55,69257,69315,C0O69270C14O69277C19O69311,,
code-creation,JS,10,73947,0x72b21354bc,34,isFileType node:fs:211:20,0x72e2eaba98,~
code-source-info,0x72b21354bc,55,5297,5538,C0O5431C2O5436C6O5443C10O5477C15O5484C20O5500C22O5515C24O5513C30O5523C33O5536,,
tick,0x1092fe35d,74015,0,0x0,3,0x109ba30d0,0x72b2128cda,0x72b212843f,0x72b2127ceb,0x72b212753e,0x72b2126ced,0x723b73f9fd
code-creation,JS,10,74057,0x72b213570c,72,encodeRealpathResult node:fs:2590:30,0x72e2eadb80,~
code-source-info,0x72b213570c,55,68576,68834,C0O68598C4O68623C10O68643C17O68652C22O68668C24O68682C25O68702C30O68709C35O68709C41O68737C48O68746C53O68766C55O68782C56O68805C61O68822C66O68805C71O68832,,
code-creation,JS,10,74155,0x72b21359dc,197,shouldUseESMLoader node:internal/modules/run_main:54:28,0x72e2ebc1c0,~
code-source-info,0x72b21359dc,70,1826,3299,C0O1841C8O1845C15O1891C20O1907C21O1919C22O2095C28O2095C33O2311C39O2311C44O2357C50O2364C55O2383C61O2390C66O2397C67O2409C68O2468C74O2484C80O2484C87O2529C88O2541C89O2546C95O2563C101O2563C108O2608C109O2621C110O2644C115O2644C120O2731C123O2769C129O2773C134O2791C140O2795C146O2968C153O2975C158O3017C159O3028C160O3041C161O3207C163O3159C170O3172C177O3189C181O3220C186O3220C191O3272C193O3284C196O3297,,
code-creation,JS,10,74341,0x72b2135e34,675,Module._load node:internal/modules/cjs/loader:955:24,0x72e2eb76e8,~
code-source-info,0x72b2135e
code-creation,JS,10,74547,0x72b2136714,875,Module._resolveFilename node:internal/modules/cjs/loader:1063:35,0x72e2eb7760,~
code-source-info,0x72b
code-creation,JS,10,74651,0x72b2136d54,77,normalizeRequirableId node:internal/bootstrap/realm:297:31,0x7220774468,~
code-source-info,0x72b2136d54,9,9573,9897,C0O9584C10O9588C17O9657C27O9657C33O9692C38O9710C43O9710C50O9756C52O9776C55O9796C60O9814C65O9814C72O9854C74O9864C75O9876C76O9893,,
code-creation,JS,10,74687,0x72b2136e9c,18,canBeRequiredWithoutScheme node:internal/bootstrap/realm:293:36,0x7220774410,~
code-source-info,0x72b2136e9c,9,9473,9541,C0O9484C7O9529C12O9529C17O9537,,
code-creation,JS,10,74755,0x72b2137184,337,Module._resolveLookupPaths node:internal/modules/cjs/loader:844:38,0x72e2eb74f0,~
code-source-info,0x72b
code-creation,JS,10,74861,0x72b2137454,89,logger node:internal/util/debuglog:100:18,0x72e2e89a30,~
code-source-info,0x72b2137454,22,2965,3160,C0O2965C3O2997C24O3021C30O3038C34O3028C38O3043C39O3058C45O3075C51O3084C55O3065C60O3089C61O3105C65O3112C72O3125C77O3121C83O3112C88O3150,,
code-creation,JS,10,74927,0x72b21376ac,3, node:internal/per_context/primordials:339:21,0x7220771808,~
code-source-info,0x72b21376ac,6,9658,9687,C0O9669C2O9681,,
tick,0x109b1ad12,75024,0,0x0,2,0x109ba30d0,0x72b21374a7,0x72b213724f,0x72b2136870,0x72b2135f10,0x72b2126d2b,0x723b73f9fd
code-creation,JS,10,75058,0x72b213777c,132,debug node:internal/util/debuglog:81:15,0x72e2e89980,~
code-source-info,0x72b213777c,22,2453,2847,C0O2453C3O2472C6O2472C9O2580C16O2601C22O2588C30O2586C36O2620C42O2656C48O2656C52O2684C73O2708C77O2725C81O2715C85O2730C86O2745C90O2762C96O2771C100O2752C105O2776C106O2792C115O2812C120O2808C126O2799C131O2837,,
code-creation,JS,10,75206,0x72b213791c,41,init node:internal/util/debuglog:77:16,0x72e2e89928,~
code-source-info,0x72b213791c,22,2355,2438,C0O2364C10O2370C14O2368C16O2407C26O2417C33O2415C40O2437,,
code-creation,JS,10,75277,0x72b2137a0c,2,testEnabled node:internal/util/debuglog:31:19,0x72b2112dd0,~
code-source-info,0x72b2137a0c,22,958,969,C0O964C1O969,,
code-creation,JS,10,75351,0x72b2137b8c,110,debuglogImpl node:internal/util/debuglog:54:22,0x72e2e896d0,~
code-source-info,0x72b2137b8c,22,1554,2091,C0O1554C9O1573C18O1587C23O1614C34O1647C39O1655C43O1647C45O1666C55O1666C59O1698C69O1709C73O1714C81O2030C93O2048C95O2046C99O2066C106O2083C109O2089,,
code-creation,JS,10,75402,0x72b2137d3c,10, node:internal/modules/cjs/loader:363:66,0x72e2eb6ff8,~
code-source-info,0x72b2137d3c,63,10011,10036,C0O10023C2O10029C9O10035,,
code-creation,JS,10,75437,0x72b2137dec,2,noop node:internal/util/debuglog:46:14,0x72e2e89620,~
code-source-info,0x72b2137dec,22,1404,1412,C1O1411,,
code-creation,JS,10,75488,0x72b2137f14,76,trySelfParentPath node:internal/modules/cjs/loader:525:27,0x72e2eb72b8,~
code-source-info,0x72b2137f14,63,15177,15444,C0O15190C4O15205C5O15218C6O15235C12O15265C16O15274C17O15295C24O15298C29O15321C36O15324C44O15366C47O15381C52O15381C59O15389C62O15394C66O15387C69O15398C72O15419C73O15432C75O15443,,
code-creation,JS,10,75637,0x72b21381ac,277,trySelf node:internal/modules/cjs/loader:544:17,0x72e2eb7310,~
code-source-info,0x72b21381ac
code-creation,JS,10,75844,0x72b213856c,212,Module node:internal/modules/cjs/loader:258:16,0x72e2eb6c30,~
code-source-info,0x72b213856c,63,7307,8049,C14O7329C16O7337C20O7345C22O7357C25O7362C30O7362C35O7355C39O7377C52O7377C57O7416C62O7434C67O7434C73O7455C84O7455C89O7494C90O7508C94O7518C95O7530C99O7541C101O7555C105O7567C107O7597C112O7597C118O7605C126O7619C128O7657C133O7657C138O7701C143O7701C149O7797C157O7829C160O7829C169O7797C174O7913C177O7933C188O7955C194O7913C199O8000C201O8005C206O8029C211O8048,,
tick,0x1098752a6,76077,0,0x0,3,0x109ba30d0,0x72b213858a,0x72b2135f99,0x72b2126d2b,0x723b73f9fd
code-creation,JS,10,76159,0x72b2138944,159,dirname node:path:1278:10,0x72e2e9b240,~
code-source-info,0x72b2138944,34,38877,39546,C0O38890C8O38890C13O38933C19O38940C24O38953C26O38964C27O38985C34O38985C42O39024C44O39020C48O39058C51O39085C53O39113C57O39120C61O39127C63O39127C68O39146C71O39150C79O39185C84O39219C88O39250C93O39269C97O39356C99O39135C104O39095C108O39397C110O39405C115O39419C125O39446C126O39451C132O39470C137O39483C139O39495C140O39500C153O39507C158O39542,,
code-creation,JS,10,76338,0x72b2138c3c,28,setOwnProperty node:internal/util:723:24,0x72e2e829e0,~
code-source-info,0x72b2138c3c,16,19617,19784,C0O19639C5O19672C12O19750C22O19646C27O19782,,
code-creation,JS,10,76433,0x72b2138dbc,45,updateChildren node:internal/modules/cjs/loader:223:24,0x72e2eb6b28,~
code-source-info,0x72b2138dbc,63,6246,6425,C0O6289C7O6295C15O6309C19O6327C23O6335C26O6335C33O6383C38O6383C44O6424,,
code-creation,JS,10,76506,0x72b2138fb4,33, node:internal/util:794:18,0x72e2e82d78,~
code-source-info,0x72b2138fb4,16,21894,22014,C0O21903C10O21938C13O21946C19O21944C25O21967C26O21979C28O21997C32O22010,,
code-creation,JS,10,76540,0x72b21390c4,28, node:internal/modules/cjs/loader:124:3,0x72e2eb68c0,~
code-source-info,0x72b21390c4,63,3592,3683,C0O3599C8O3599C20O3641C27O3683,,
code-creation,JS,10,76636,0x72b21393fc,58,reportModuleToWatchMode node:internal/modules/cjs/loader:234:33,0x72e2eb6b80,~
code-source-info,0x72b21393fc,63,6574,6698,C0O6589C5O6593C13O6634C19O6646C22O6654C32O6678C41O6679C51O6654C57O6697,,
code-creation,JS,10,76747,0x72b213954c,13, node:internal/modules/cjs/loader:126:45,0x72e2eb6918,~
code-source-info,0x72b213954c,63,3732,3775,C0O3750C3O3746C8O3750C12O3775,,
code-creation,JS,10,76944,0x72b2139704,193,Module.load node:internal/modules/cjs/loader:1199:33,0x72e2eb78a8,~
code-source-info,0x72b2139704,63,38033,38739,C0O38048C8O38094C16O38048C21O38102C26O38115C32O38102C36O38126C38O38140C42O38154C45O38174C52O38191C55O38196C60O38196C66O38174C71O38165C75O38237C78O38237C83O38314C91O38318C101O38371C106O38382C112O38398C124O38404C129O38398C130O38448C133O38455C140O38466C144O38477C150O38497C151O38509C155O38609C160O38660C165O38681C170O38681C177O38698C180O38714C185O38714C192O38738,,
tick,0x109a49faa,77085,0,0x0,0,0x1098224f0,0x72b2138951,0x72b2139740,0x72b2136005,0x72b2126d2b,0x723b73f9fd
code-creation,JS,10,77181,0x72b21399ac,184,Module._nodeModulePaths node:internal/modules/cjs/loader:798:37,0x72e2eb7458,~
code-source-info,0x72b21399ac,63,24238,25418,C0O24293C5O24305C10O24305C17O24484C19O24493C24O24510C28O24535C29O24784C32O24810C36O24817C40O24826C42O24841C47O24851C48O24851C53O24883C58O24883C64O24925C66O24938C68O24934C73O24968C75O24978C77O24974C82O24997C89O25048C100O25048C108O25084C112O24997C117O25134C120O25152C124O25172C126O25178C131O25196C138O25207C144O25211C149O25233C156O25265C159O24859C164O24792C168O25352C176O25352C181O25401C183O25414,,
code-creation,JS,10,77316,0x72b2139d7c,99,findLongestRegisteredExtension node:internal/modules/cjs/loader:507:40,0x72e2eb7260,~
code-source-info,0x72b2139d7c,63,14591,15028,C0O14619C5O14624C10O14624C16O14650C18O14674C20O14700C22O14768C36O14721C44O14768C49O14782C51O14801C55O14810C56O14820C61O14829C63O14878C68O14897C74O14936C77O14947C84O14958C89O14980C91O15004C92O14705C96O15013C98O15026,,
code-creation,JS,10,77420,0x72b2139f8c,353,basename node:path:1309:11,0x72e2e9b298,~
code-source-info,0x72b2139f8c,34,39650,42069,C0O39671C4O39703C12O39703C17O39738C25O39738C30O39785C32O39802C35O39829C37O39840C41O39875C47O39882C52O39896C57O39911C61O39903C66O39927C68O39938C73O39956C75O39966C76O39993C80O40000C84O40034C87O40062C91O40069C95O40076C96O40076C101O40110C106O40110C112O40154C114O40167C116O40163C121O40337C125O40370C127O40380C131O40397C135O40443C137O40464C142O40630C144O40664C146O40685C150O40712C151O40723C156O40794C159O40807C164O40803C169O40866C176O40879C181O41015C188O41178C191O41205C196O40084C201O40044C205O41280C207O41290C212O41307C219O41342C221O41350C226O41377C231O41391C245O41398C250O41437C251O41466C255O41473C259O41480C260O41480C265O41499C270O41503C278O41542C280O41538C285O41706C289O41737C291O41747C295O41762C299O41792C301O41800C306O41920C308O41950C310O41958C314O41488C319O41448C323O41982C325O41990C330O42004C332O42014C333O42019C347O42026C352O42065,,
code-creation,JS,10,77561,0x72b213a54c,487,Module._extensions..js node:internal/modules/cjs/loader:1391:37,0x72e2eb7ad0,~
code-source-info,0x72b213a54c
code-creation,JS,10,77756,0x72b213a9dc,472,readFileSync node:fs:449:22,0x72e2eabf60,~
code-source-info,0x72b213a9dc
code-creation,JS,10,77951,0x72b213ae94,30,isEncoding node:buffer:561:40,0x72e2e8f138,~
script-source,24,node:buffer,// Copyright Joyent\x2C Inc. and other Node contributors.\n//\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\n// copy of this software and associated documentation files (the\n// "Software")\x2C to deal in the Software without restriction\x2C including\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\n// persons to whom the Software is furnished to do so\x2C subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nconst {\n  Array\x2C\n  ArrayFrom\x2C\n  ArrayIsArray\x2C\n  ArrayPrototypeForEach\x2C\n  ArrayPrototypeIndexOf\x2C\n  MathFloor\x2C\n  MathMin\x2C\n  MathTrunc\x2C\n  NumberIsNaN\x2C\n  NumberMAX_SAFE_INTEGER\x2C\n  NumberMIN_SAFE_INTEGER\x2C\n  ObjectDefineProperties\x2C\n  ObjectDefineProperty\x2C\n  ObjectSetPrototypeOf\x2C\n  RegExpPrototypeSymbolReplace\x2C\n  StringPrototypeCharCodeAt\x2C\n  StringPrototypeSlice\x2C\n  StringPrototypeToLowerCase\x2C\n  StringPrototypeTrim\x2C\n  SymbolSpecies\x2C\n  SymbolToPrimitive\x2C\n  TypedArrayPrototypeGetBuffer\x2C\n  TypedArrayPrototypeGetByteLength\x2C\n  TypedArrayPrototypeGetByteOffset\x2C\n  TypedArrayPrototypeFill\x2C\n  TypedArrayPrototypeGetLength\x2C\n  TypedArrayPrototypeSet\x2C\n  TypedArrayPrototypeSlice\x2C\n  Uint8Array\x2C\n  Uint8ArrayPrototype\x2C\n} = primordials;\n\nconst {\n  byteLengthUtf8\x2C\n  compare: _compare\x2C\n  compareOffset\x2C\n  createFromString\x2C\n  fill: bindingFill\x2C\n  isAscii: bindingIsAscii\x2C\n  isUtf8: bindingIsUtf8\x2C\n  indexOfBuffer\x2C\n  indexOfNumber\x2C\n  indexOfString\x2C\n  swap16: _swap16\x2C\n  swap32: _swap32\x2C\n  swap64: _swap64\x2C\n  kMaxLength\x2C\n  kStringMaxLength\x2C\n} = internalBinding('buffer');\nconst {\n  constants: {\n    ALL_PROPERTIES\x2C\n    ONLY_ENUMERABLE\x2C\n  }\x2C\n  getOwnNonIndexProperties\x2C\n} = internalBinding('util');\nconst {\n  customInspectSymbol\x2C\n  isInsideNodeModules\x2C\n  lazyDOMException\x2C\n  normalizeEncoding\x2C\n  kIsEncodingSymbol\x2C\n  defineLazyProperties\x2C\n} = require('internal/util');\nconst {\n  isAnyArrayBuffer\x2C\n  isArrayBufferView\x2C\n  isUint8Array\x2C\n  isTypedArray\x2C\n} = require('internal/util/types');\nconst {\n  inspect: utilInspect\x2C\n} = require('internal/util/inspect');\nconst { encodings } = internalBinding('string_decoder');\n\nconst {\n  codes: {\n    ERR_BUFFER_OUT_OF_BOUNDS\x2C\n    ERR_INVALID_ARG_TYPE\x2C\n    ERR_INVALID_ARG_VALUE\x2C\n    ERR_INVALID_BUFFER_SIZE\x2C\n    ERR_OUT_OF_RANGE\x2C\n    ERR_MISSING_ARGS\x2C\n    ERR_UNKNOWN_ENCODING\x2C\n  }\x2C\n  genericNodeError\x2C\n} = require('internal/errors');\nconst {\n  validateArray\x2C\n  validateBuffer\x2C\n  validateInteger\x2C\n  validateNumber\x2C\n  validateString\x2C\n} = require('internal/validators');\n// Provide validateInteger() but with kMaxLength as the default maximum value.\nconst validateOffset = (value\x2C name\x2C min = 0\x2C max = kMaxLength) =>\n  validateInteger(value\x2C name\x2C min\x2C max);\n\nconst {\n  FastBuffer\x2C\n  markAsUntransferable\x2C\n  addBufferPrototypeMethods\x2C\n  createUnsafeBuffer\x2C\n} = require('internal/buffer');\n\nFastBuffer.prototype.constructor = Buffer;\nBuffer.prototype = FastBuffer.prototype;\naddBufferPrototypeMethods(Buffer.prototype);\n\nconst constants = ObjectDefineProperties({}\x2C {\n  MAX_LENGTH: {\n    __proto__: null\x2C\n    value: kMaxLength\x2C\n    writable: false\x2C\n    enumerable: true\x2C\n  }\x2C\n  MAX_STRING_LENGTH: {\n    __proto__: null\x2C\n    value: kStringMaxLength\x2C\n    writable: false\x2C\n    enumerable: true\x2C\n  }\x2C\n});\n\nBuffer.poolSize = 8 * 1024;\nlet poolSize\x2C poolOffset\x2C allocPool;\n\nconst encodingsMap = { __proto__: null };\nfor (let i = 0; i < encodings.length; ++i)\n  encodingsMap[encodings[i]] = i;\n\nfunction createPool() {\n  poolSize = Buffer.poolSize;\n  allocPool = createUnsafeBuffer(poolSize).buffer;\n  markAsUntransferable(allocPool);\n  poolOffset = 0;\n}\ncreatePool();\n\nfunction alignPool() {\n  // Ensure aligned slices\n  if (poolOffset & 0x7) {\n    poolOffset |= 0x7;\n    poolOffset++;\n  }\n}\n\nlet bufferWarningAlreadyEmitted = false;\nlet nodeModulesCheckCounter = 0;\nconst bufferWarning = 'Buffer() is deprecated due to security and usability ' +\n                      'issues. Please use the Buffer.alloc()\x2C ' +\n                      'Buffer.allocUnsafe()\x2C or Buffer.from() methods instead.';\n\nfunction showFlaggedDeprecation() {\n  if (bufferWarningAlreadyEmitted ||\n      ++nodeModulesCheckCounter > 10000 ||\n      (!require('internal/options').getOptionValue('--pending-deprecation') &&\n       isInsideNodeModules())) {\n    // We don't emit a warning\x2C because we either:\n    // - Already did so\x2C or\n    // - Already checked too many times whether a call is coming\n    //   from node_modules and want to stop slowing down things\x2C or\n    // - We aren't running with `--pending-deprecation` enabled\x2C\n    //   and the code is inside `node_modules`.\n    return;\n  }\n\n  process.emitWarning(bufferWarning\x2C 'DeprecationWarning'\x2C 'DEP0005');\n  bufferWarningAlreadyEmitted = true;\n}\n\nfunction toInteger(n\x2C defaultVal) {\n  n = +n;\n  if (!NumberIsNaN(n) &&\n      n >= NumberMIN_SAFE_INTEGER &&\n      n <= NumberMAX_SAFE_INTEGER) {\n    return ((n % 1) === 0 ? n : MathFloor(n));\n  }\n  return defaultVal;\n}\n\nfunction _copy(source\x2C target\x2C targetStart\x2C sourceStart\x2C sourceEnd) {\n  if (!isUint8Array(source))\n    throw new ERR_INVALID_ARG_TYPE('source'\x2C ['Buffer'\x2C 'Uint8Array']\x2C source);\n  if (!isUint8Array(target))\n    throw new ERR_INVALID_ARG_TYPE('target'\x2C ['Buffer'\x2C 'Uint8Array']\x2C target);\n\n  if (targetStart === undefined) {\n    targetStart = 0;\n  } else {\n    targetStart = toInteger(targetStart\x2C 0);\n    if (targetStart < 0)\n      throw new ERR_OUT_OF_RANGE('targetStart'\x2C '>= 0'\x2C targetStart);\n  }\n\n  if (sourceStart === undefined) {\n    sourceStart = 0;\n  } else {\n    sourceStart = toInteger(sourceStart\x2C 0);\n    if (sourceStart < 0 || sourceStart > source.length)\n      throw new ERR_OUT_OF_RANGE('sourceStart'\x2C `>= 0 && <= ${source.length}`\x2C sourceStart);\n  }\n\n  if (sourceEnd === undefined) {\n    sourceEnd = source.length;\n  } else {\n    sourceEnd = toInteger(sourceEnd\x2C 0);\n    if (sourceEnd < 0)\n      throw new ERR_OUT_OF_RANGE('sourceEnd'\x2C '>= 0'\x2C sourceEnd);\n  }\n\n  if (targetStart >= target.length || sourceStart >= sourceEnd)\n    return 0;\n\n  return _copyActual(source\x2C target\x2C targetStart\x2C sourceStart\x2C sourceEnd);\n}\n\nfunction _copyActual(source\x2C target\x2C targetStart\x2C sourceStart\x2C sourceEnd) {\n  if (sourceEnd - sourceStart > target.length - targetStart)\n    sourceEnd = sourceStart + target.length - targetStart;\n\n  let nb = sourceEnd - sourceStart;\n  const sourceLen = source.length - sourceStart;\n  if (nb > sourceLen)\n    nb = sourceLen;\n\n  if (sourceStart !== 0 || sourceEnd < source.length)\n    source = new Uint8Array(source.buffer\x2C source.byteOffset + sourceStart\x2C nb);\n\n  TypedArrayPrototypeSet(target\x2C source\x2C targetStart);\n\n  return nb;\n}\n\n/**\n * The Buffer() constructor is deprecated in documentation and should not be\n * used moving forward. Rather\x2C developers should use one of the three new\n * factory APIs: Buffer.from()\x2C Buffer.allocUnsafe() or Buffer.alloc() based on\n * their specific needs. There is no runtime deprecation because of the extent\n * to which the Buffer constructor is used in the ecosystem currently -- a\n * runtime deprecation would introduce too much breakage at this time. It's not\n * likely that the Buffer constructors would ever actually be removed.\n * Deprecation Code: DEP0005\n */\nfunction Buffer(arg\x2C encodingOrOffset\x2C length) {\n  showFlaggedDeprecation();\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new ERR_INVALID_ARG_TYPE('string'\x2C 'string'\x2C arg);\n    }\n    return Buffer.alloc(arg);\n  }\n  return Buffer.from(arg\x2C encodingOrOffset\x2C length);\n}\n\nObjectDefineProperty(Buffer\x2C SymbolSpecies\x2C {\n  __proto__: null\x2C\n  enumerable: false\x2C\n  configurable: true\x2C\n  get() { return FastBuffer; }\x2C\n});\n\n/**\n * Functionally equivalent to Buffer(arg\x2C encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[\x2C encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[\x2C byteOffset[\x2C length]])\n */\nBuffer.from = function from(value\x2C encodingOrOffset\x2C length) {\n  if (typeof value === 'string')\n    return fromString(value\x2C encodingOrOffset);\n\n  if (typeof value === 'object' && value !== null) {\n    if (isAnyArrayBuffer(value))\n      return fromArrayBuffer(value\x2C encodingOrOffset\x2C length);\n\n    const valueOf = value.valueOf && value.valueOf();\n    if (valueOf != null &&\n        valueOf !== value &&\n        (typeof valueOf === 'string' || typeof valueOf === 'object')) {\n      return from(valueOf\x2C encodingOrOffset\x2C length);\n    }\n\n    const b = fromObject(value);\n    if (b)\n      return b;\n\n    if (typeof value[SymbolToPrimitive] === 'function') {\n      const primitive = value[SymbolToPrimitive]('string');\n      if (typeof primitive === 'string') {\n        return fromString(primitive\x2C encodingOrOffset);\n      }\n    }\n  }\n\n  throw new ERR_INVALID_ARG_TYPE(\n    'first argument'\x2C\n    ['string'\x2C 'Buffer'\x2C 'ArrayBuffer'\x2C 'Array'\x2C 'Array-like Object']\x2C\n    value\x2C\n  );\n};\n\n/**\n * Creates the Buffer as a copy of the underlying ArrayBuffer of the view\n * rather than the contents of the view.\n * @param {TypedArray} view\n * @param {number} [offset]\n * @param {number} [length]\n * @returns {Buffer}\n */\nBuffer.copyBytesFrom = function copyBytesFrom(view\x2C offset\x2C length) {\n  if (!isTypedArray(view)) {\n    throw new ERR_INVALID_ARG_TYPE('view'\x2C [ 'TypedArray' ]\x2C view);\n  }\n\n  const viewLength = TypedArrayPrototypeGetLength(view);\n  if (viewLength === 0) {\n    return Buffer.alloc(0);\n  }\n\n  if (offset !== undefined || length !== undefined) {\n    if (offset !== undefined) {\n      validateInteger(offset\x2C 'offset'\x2C 0);\n      if (offset >= viewLength) return Buffer.alloc(0);\n    } else {\n      offset = 0;\n    }\n    let end;\n    if (length !== undefined) {\n      validateInteger(length\x2C 'length'\x2C 0);\n      end = offset + length;\n    } else {\n      end = viewLength;\n    }\n\n    view = TypedArrayPrototypeSlice(view\x2C offset\x2C end);\n  }\n\n  return fromArrayLike(new Uint8Array(\n    TypedArrayPrototypeGetBuffer(view)\x2C\n    TypedArrayPrototypeGetByteOffset(view)\x2C\n    TypedArrayPrototypeGetByteLength(view)));\n};\n\n// Identical to the built-in %TypedArray%.of()\x2C but avoids using the deprecated\n// Buffer() constructor. Must use arrow function syntax to avoid automatically\n// adding a `prototype` property and making the function a constructor.\n//\n// Refs: https://tc39.github.io/ecma262/#sec-%typedarray%.of\n// Refs: https://esdiscuss.org/topic/isconstructor#content-11\nconst of = (...items) => {\n  const newObj = createUnsafeBuffer(items.length);\n  for (let k = 0; k < items.length; k++)\n    newObj[k] = items[k];\n  return newObj;\n};\nBuffer.of = of;\n\nObjectSetPrototypeOf(Buffer\x2C Uint8Array);\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[\x2C fill[\x2C encoding]])\n */\nBuffer.alloc = function alloc(size\x2C fill\x2C encoding) {\n  validateNumber(size\x2C 'size'\x2C 0\x2C kMaxLength);\n  if (fill !== undefined && fill !== 0 && size > 0) {\n    const buf = createUnsafeBuffer(size);\n    return _fill(buf\x2C fill\x2C 0\x2C buf.length\x2C encoding);\n  }\n  return new FastBuffer(size);\n};\n\n/**\n * Equivalent to Buffer(num)\x2C by default creates a non-zero-filled Buffer\n * instance. If `--zero-fill-buffers` is set\x2C will zero-fill the buffer.\n */\nBuffer.allocUnsafe = function allocUnsafe(size) {\n  validateNumber(size\x2C 'size'\x2C 0\x2C kMaxLength);\n  return allocate(size);\n};\n\n/**\n * Equivalent to SlowBuffer(num)\x2C by default creates a non-zero-filled\n * Buffer instance that is not allocated off the pre-initialized pool.\n * If `--zero-fill-buffers` is set\x2C will zero-fill the buffer.\n */\nBuffer.allocUnsafeSlow = function allocUnsafeSlow(size) {\n  validateNumber(size\x2C 'size'\x2C 0\x2C kMaxLength);\n  return createUnsafeBuffer(size);\n};\n\n// If --zero-fill-buffers command line argument is set\x2C a zero-filled\n// buffer is returned.\nfunction SlowBuffer(size) {\n  validateNumber(size\x2C 'size'\x2C 0\x2C kMaxLength);\n  return createUnsafeBuffer(size);\n}\n\nObjectSetPrototypeOf(SlowBuffer.prototype\x2C Uint8ArrayPrototype);\nObjectSetPrototypeOf(SlowBuffer\x2C Uint8Array);\n\nfunction allocate(size) {\n  if (size <= 0) {\n    return new FastBuffer();\n  }\n  if (size < (Buffer.poolSize >>> 1)) {\n    if (size > (poolSize - poolOffset))\n      createPool();\n    const b = new FastBuffer(allocPool\x2C poolOffset\x2C size);\n    poolOffset += size;\n    alignPool();\n    return b;\n  }\n  return createUnsafeBuffer(size);\n}\n\nfunction fromStringFast(string\x2C ops) {\n  const length = ops.byteLength(string);\n\n  if (length >= (Buffer.poolSize >>> 1))\n    return createFromString(string\x2C ops.encodingVal);\n\n  if (length > (poolSize - poolOffset))\n    createPool();\n  let b = new FastBuffer(allocPool\x2C poolOffset\x2C length);\n  const actual = ops.write(b\x2C string\x2C 0\x2C length);\n  if (actual !== length) {\n    // byteLength() may overestimate. That's a rare case\x2C though.\n    b = new FastBuffer(allocPool\x2C poolOffset\x2C actual);\n  }\n  poolOffset += actual;\n  alignPool();\n  return b;\n}\n\nfunction fromString(string\x2C encoding) {\n  let ops;\n  if (typeof encoding !== 'string' || encoding.length === 0) {\n    if (string.length === 0)\n      return new FastBuffer();\n    ops = encodingOps.utf8;\n  } else {\n    ops = getEncodingOps(encoding);\n    if (ops === undefined)\n      throw new ERR_UNKNOWN_ENCODING(encoding);\n    if (string.length === 0)\n      return new FastBuffer();\n  }\n  return fromStringFast(string\x2C ops);\n}\n\nfunction fromArrayBuffer(obj\x2C byteOffset\x2C length) {\n  // Convert byteOffset to integer\n  if (byteOffset === undefined) {\n    byteOffset = 0;\n  } else {\n    byteOffset = +byteOffset;\n    if (NumberIsNaN(byteOffset))\n      byteOffset = 0;\n  }\n\n  const maxLength = obj.byteLength - byteOffset;\n\n  if (maxLength < 0)\n    throw new ERR_BUFFER_OUT_OF_BOUNDS('offset');\n\n  if (length === undefined) {\n    length = maxLength;\n  } else {\n    // Convert length to non-negative integer.\n    length = +length;\n    if (length > 0) {\n      if (length > maxLength)\n        throw new ERR_BUFFER_OUT_OF_BOUNDS('length');\n    } else {\n      length = 0;\n    }\n  }\n\n  return new FastBuffer(obj\x2C byteOffset\x2C length);\n}\n\nfunction fromArrayLike(obj) {\n  if (obj.length <= 0)\n    return new FastBuffer();\n  if (obj.length < (Buffer.poolSize >>> 1)) {\n    if (obj.length > (poolSize - poolOffset))\n      createPool();\n    const b = new FastBuffer(allocPool\x2C poolOffset\x2C obj.length);\n    TypedArrayPrototypeSet(b\x2C obj\x2C 0);\n    poolOffset += obj.length;\n    alignPool();\n    return b;\n  }\n  return new FastBuffer(obj);\n}\n\nfunction fromObject(obj) {\n  if (obj.length !== undefined || isAnyArrayBuffer(obj.buffer)) {\n    if (typeof obj.length !== 'number') {\n      return new FastBuffer();\n    }\n    return fromArrayLike(obj);\n  }\n\n  if (obj.type === 'Buffer' && ArrayIsArray(obj.data)) {\n    return fromArrayLike(obj.data);\n  }\n}\n\n// Static methods\n\nBuffer.isBuffer = function isBuffer(b) {\n  return b instanceof Buffer;\n};\n\nBuffer.compare = function compare(buf1\x2C buf2) {\n  if (!isUint8Array(buf1)) {\n    throw new ERR_INVALID_ARG_TYPE('buf1'\x2C ['Buffer'\x2C 'Uint8Array']\x2C buf1);\n  }\n\n  if (!isUint8Array(buf2)) {\n    throw new ERR_INVALID_ARG_TYPE('buf2'\x2C ['Buffer'\x2C 'Uint8Array']\x2C buf2);\n  }\n\n  if (buf1 === buf2) {\n    return 0;\n  }\n\n  return _compare(buf1\x2C buf2);\n};\n\nBuffer.isEncoding = function isEncoding(encoding) {\n  return typeof encoding === 'string' && encoding.length !== 0 &&\n         normalizeEncoding(encoding) !== undefined;\n};\nBuffer[kIsEncodingSymbol] = Buffer.isEncoding;\n\nBuffer.concat = function concat(list\x2C length) {\n  validateArray(list\x2C 'list');\n\n  if (list.length === 0)\n    return new FastBuffer();\n\n  if (length === undefined) {\n    length = 0;\n    for (let i = 0; i < list.length; i++) {\n      if (list[i].length) {\n        length += list[i].length;\n      }\n    }\n  } else {\n    validateOffset(length\x2C 'length');\n  }\n\n  const buffer = Buffer.allocUnsafe(length);\n  let pos = 0;\n  for (let i = 0; i < list.length; i++) {\n    const buf = list[i];\n    if (!isUint8Array(buf)) {\n      // TODO(BridgeAR): This should not be of type ERR_INVALID_ARG_TYPE.\n      // Instead\x2C find the proper error code for this.\n      throw new ERR_INVALID_ARG_TYPE(\n        `list[${i}]`\x2C ['Buffer'\x2C 'Uint8Array']\x2C list[i]);\n    }\n    pos += _copyActual(buf\x2C buffer\x2C pos\x2C 0\x2C buf.length);\n  }\n\n  // Note: `length` is always equal to `buffer.length` at this point\n  if (pos < length) {\n    // Zero-fill the remaining bytes if the specified `length` was more than\n    // the actual total length\x2C i.e. if we have some remaining allocated bytes\n    // there were not initialized.\n    TypedArrayPrototypeFill(buffer\x2C 0\x2C pos\x2C length);\n  }\n\n  return buffer;\n};\n\nfunction base64ByteLength(str\x2C bytes) {\n  // Handle padding\n  if (StringPrototypeCharCodeAt(str\x2C bytes - 1) === 0x3D)\n    bytes--;\n  if (bytes > 1 && StringPrototypeCharCodeAt(str\x2C bytes - 1) === 0x3D)\n    bytes--;\n\n  // Base64 ratio: 3/4\n  return (bytes * 3) >>> 2;\n}\n\nconst encodingOps = {\n  utf8: {\n    encoding: 'utf8'\x2C\n    encodingVal: encodingsMap.utf8\x2C\n    byteLength: byteLengthUtf8\x2C\n    write: (buf\x2C string\x2C offset\x2C len) => buf.utf8Write(string\x2C offset\x2C len)\x2C\n    slice: (buf\x2C start\x2C end) => buf.utf8Slice(start\x2C end)\x2C\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\n      indexOfString(buf\x2C val\x2C byteOffset\x2C encodingsMap.utf8\x2C dir)\x2C\n  }\x2C\n  ucs2: {\n    encoding: 'ucs2'\x2C\n    encodingVal: encodingsMap.utf16le\x2C\n    byteLength: (string) => string.length * 2\x2C\n    write: (buf\x2C string\x2C offset\x2C len) => buf.ucs2Write(string\x2C offset\x2C len)\x2C\n    slice: (buf\x2C start\x2C end) => buf.ucs2Slice(start\x2C end)\x2C\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\n      indexOfString(buf\x2C val\x2C byteOffset\x2C encodingsMap.utf16le\x2C dir)\x2C\n  }\x2C\n  utf16le: {\n    encoding: 'utf16le'\x2C\n    encodingVal: encodingsMap.utf16le\x2C\n    byteLength: (string) => string.length * 2\x2C\n    write: (buf\x2C string\x2C offset\x2C len) => buf.ucs2Write(string\x2C offset\x2C len)\x2C\n    slice: (buf\x2C start\x2C end) => buf.ucs2Slice(start\x2C end)\x2C\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\n      indexOfString(buf\x2C val\x2C byteOffset\x2C encodingsMap.utf16le\x2C dir)\x2C\n  }\x2C\n  latin1: {\n    encoding: 'latin1'\x2C\n    encodingVal: encodingsMap.latin1\x2C\n    byteLength: (string) => string.length\x2C\n    write: (buf\x2C string\x2C offset\x2C len) => buf.latin1Write(string\x2C offset\x2C len)\x2C\n    slice: (buf\x2C start\x2C end) => buf.latin1Slice(start\x2C end)\x2C\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\n      indexOfString(buf\x2C val\x2C byteOffset\x2C encodingsMap.latin1\x2C dir)\x2C\n  }\x2C\n  ascii: {\n    encoding: 'ascii'\x2C\n    encodingVal: encodingsMap.ascii\x2C\n    byteLength: (string) => string.length\x2C\n    write: (buf\x2C string\x2C offset\x2C len) => buf.asciiWrite(string\x2C offset\x2C len)\x2C\n    slice: (buf\x2C start\x2C end) => buf.asciiSlice(start\x2C end)\x2C\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\n      indexOfBuffer(buf\x2C\n                    fromStringFast(val\x2C encodingOps.ascii)\x2C\n                    byteOffset\x2C\n                    encodingsMap.ascii\x2C\n                    dir)\x2C\n  }\x2C\n  base64: {\n    encoding: 'base64'\x2C\n    encodingVal: encodingsMap.base64\x2C\n    byteLength: (string) => base64ByteLength(string\x2C string.length)\x2C\n    write: (buf\x2C string\x2C offset\x2C len) => buf.base64Write(string\x2C offset\x2C len)\x2C\n    slice: (buf\x2C start\x2C end) => buf.base64Slice(start\x2C end)\x2C\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\n      indexOfBuffer(buf\x2C\n                    fromStringFast(val\x2C encodingOps.base64)\x2C\n                    byteOffset\x2C\n                    encodingsMap.base64\x2C\n                    dir)\x2C\n  }\x2C\n  base64url: {\n    encoding: 'base64url'\x2C\n    encodingVal: encodingsMap.base64url\x2C\n    byteLength: (string) => base64ByteLength(string\x2C string.length)\x2C\n    write: (buf\x2C string\x2C offset\x2C len) =>\n      buf.base64urlWrite(string\x2C offset\x2C len)\x2C\n    slice: (buf\x2C start\x2C end) => buf.base64urlSlice(start\x2C end)\x2C\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\n      indexOfBuffer(buf\x2C\n                    fromStringFast(val\x2C encodingOps.base64url)\x2C\n                    byteOffset\x2C\n                    encodingsMap.base64url\x2C\n                    dir)\x2C\n  }\x2C\n  hex: {\n    encoding: 'hex'\x2C\n    encodingVal: encodingsMap.hex\x2C\n    byteLength: (string) => string.length >>> 1\x2C\n    write: (buf\x2C string\x2C offset\x2C len) => buf.hexWrite(string\x2C offset\x2C len)\x2C\n    slice: (buf\x2C start\x2C end) => buf.hexSlice(start\x2C end)\x2C\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\n      indexOfBuffer(buf\x2C\n                    fromStringFast(val\x2C encodingOps.hex)\x2C\n                    byteOffset\x2C\n                    encodingsMap.hex\x2C\n                    dir)\x2C\n  }\x2C\n};\nfunction getEncodingOps(encoding) {\n  encoding += '';\n  switch (encoding.length) {\n    case 4:\n      if (encoding === 'utf8') return encodingOps.utf8;\n      if (encoding === 'ucs2') return encodingOps.ucs2;\n      encoding = StringPrototypeToLowerCase(encoding);\n      if (encoding === 'utf8') return encodingOps.utf8;\n      if (encoding === 'ucs2') return encodingOps.ucs2;\n      break;\n    case 5:\n      if (encoding === 'utf-8') return encodingOps.utf8;\n      if (encoding === 'ascii') return encodingOps.ascii;\n      if (encoding === 'ucs-2') return encodingOps.ucs2;\n      encoding = StringPrototypeToLowerCase(encoding);\n      if (encoding === 'utf-8') return encodingOps.utf8;\n      if (encoding === 'ascii') return encodingOps.ascii;\n      if (encoding === 'ucs-2') return encodingOps.ucs2;\n      break;\n    case 7:\n      if (encoding === 'utf16le' ||\n          StringPrototypeToLowerCase(encoding) === 'utf16le')\n        return encodingOps.utf16le;\n      break;\n    case 8:\n      if (encoding === 'utf-16le' ||\n          StringPrototypeToLowerCase(encoding) === 'utf-16le')\n        return encodingOps.utf16le;\n      break;\n    case 6:\n      if (encoding === 'latin1' || encoding === 'binary')\n        return encodingOps.latin1;\n      if (encoding === 'base64') return encodingOps.base64;\n      encoding = StringPrototypeToLowerCase(encoding);\n      if (encoding === 'latin1' || encoding === 'binary')\n        return encodingOps.latin1;\n      if (encoding === 'base64') return encodingOps.base64;\n      break;\n    case 3:\n      if (encoding === 'hex' || StringPrototypeToLowerCase(encoding) === 'hex')\n        return encodingOps.hex;\n      break;\n    case 9:\n      if (encoding === 'base64url' ||\n          StringPrototypeToLowerCase(encoding) === 'base64url')\n        return encodingOps.base64url;\n      break;\n  }\n}\n\nfunction byteLength(string\x2C encoding) {\n  if (typeof string !== 'string') {\n    if (isArrayBufferView(string) || isAnyArrayBuffer(string)) {\n      return string.byteLength;\n    }\n\n    throw new ERR_INVALID_ARG_TYPE(\n      'string'\x2C ['string'\x2C 'Buffer'\x2C 'ArrayBuffer']\x2C string\x2C\n    );\n  }\n\n  const len = string.length;\n  if (len === 0)\n    return 0;\n\n  if (encoding) {\n    const ops = getEncodingOps(encoding);\n    if (ops) {\n      return ops.byteLength(string);\n    }\n  }\n  return byteLengthUtf8(string);\n}\n\nBuffer.byteLength = byteLength;\n\n// For backwards compatibility.\nObjectDefineProperty(Buffer.prototype\x2C 'parent'\x2C {\n  __proto__: null\x2C\n  enumerable: true\x2C\n  get() {\n    if (!(this instanceof Buffer))\n      return undefined;\n    return this.buffer;\n  }\x2C\n});\nObjectDefineProperty(Buffer.prototype\x2C 'offset'\x2C {\n  __proto__: null\x2C\n  enumerable: true\x2C\n  get() {\n    if (!(this instanceof Buffer))\n      return undefined;\n    return this.byteOffset;\n  }\x2C\n});\n\nBuffer.prototype.copy =\n  function copy(target\x2C targetStart\x2C sourceStart\x2C sourceEnd) {\n    return _copy(this\x2C target\x2C targetStart\x2C sourceStart\x2C sourceEnd);\n  };\n\n// No need to verify that "buf.length <= MAX_UINT32" since it's a read-only\n// property of a typed array.\n// This behaves neither like String nor Uint8Array in that we set start/end\n// to their upper/lower bounds if the value passed is out of range.\nBuffer.prototype.toString = function toString(encoding\x2C start\x2C end) {\n  if (arguments.length === 0) {\n    return this.utf8Slice(0\x2C this.length);\n  }\n\n  const len = this.length;\n\n  if (start <= 0)\n    start = 0;\n  else if (start >= len)\n    return '';\n  else\n    start |= 0;\n\n  if (end === undefined || end > len)\n    end = len;\n  else\n    end |= 0;\n\n  if (end <= start)\n    return '';\n\n  if (encoding === undefined)\n    return this.utf8Slice(start\x2C end);\n\n  const ops = getEncodingOps(encoding);\n  if (ops === undefined)\n    throw new ERR_UNKNOWN_ENCODING(encoding);\n\n  return ops.slice(this\x2C start\x2C end);\n};\n\nBuffer.prototype.equals = function equals(otherBuffer) {\n  if (!isUint8Array(otherBuffer)) {\n    throw new ERR_INVALID_ARG_TYPE(\n      'otherBuffer'\x2C ['Buffer'\x2C 'Uint8Array']\x2C otherBuffer);\n  }\n\n  if (this === otherBuffer)\n    return true;\n  const len = TypedArrayPrototypeGetByteLength(this);\n  if (len !== TypedArrayPrototypeGetByteLength(otherBuffer))\n    return false;\n\n  return len === 0 || _compare(this\x2C otherBuffer) === 0;\n};\n\nlet INSPECT_MAX_BYTES = 50;\n// Override how buffers are presented by util.inspect().\nBuffer.prototype[customInspectSymbol] = function inspect(recurseTimes\x2C ctx) {\n  const max = INSPECT_MAX_BYTES;\n  const actualMax = MathMin(max\x2C this.length);\n  const remaining = this.length - max;\n  let str = StringPrototypeTrim(RegExpPrototypeSymbolReplace(\n    /(.{2})/g\x2C this.hexSlice(0\x2C actualMax)\x2C '$1 '));\n  if (remaining > 0)\n    str += ` ... ${remaining} more byte${remaining > 1 ? 's' : ''}`;\n  // Inspect special properties as well\x2C if possible.\n  if (ctx) {\n    let extras = false;\n    const filter = ctx.showHidden ? ALL_PROPERTIES : ONLY_ENUMERABLE;\n    const obj = { __proto__: null };\n    ArrayPrototypeForEach(getOwnNonIndexProperties(this\x2C filter)\x2C\n                          (key) => {\n                            extras = true;\n                            obj[key] = this[key];\n                          });\n    if (extras) {\n      if (this.length !== 0)\n        str += '\x2C ';\n      // '[Object: null prototype] {'.length === 26\n      // This is guarded with a test.\n      str += StringPrototypeSlice(utilInspect(obj\x2C {\n        ...ctx\x2C\n        breakLength: Infinity\x2C\n        compact: true\x2C\n      })\x2C 27\x2C -2);\n    }\n  }\n  return `<${this.constructor.name} ${str}>`;\n};\nBuffer.prototype.inspect = Buffer.prototype[customInspectSymbol];\n\nBuffer.prototype.compare = function compare(target\x2C\n                                            targetStart\x2C\n                                            targetEnd\x2C\n                                            sourceStart\x2C\n                                            sourceEnd) {\n  if (!isUint8Array(target)) {\n    throw new ERR_INVALID_ARG_TYPE('target'\x2C ['Buffer'\x2C 'Uint8Array']\x2C target);\n  }\n  if (arguments.length === 1)\n    return _compare(this\x2C target);\n\n  if (targetStart === undefined)\n    targetStart = 0;\n  else\n    validateOffset(targetStart\x2C 'targetStart');\n\n  if (targetEnd === undefined)\n    targetEnd = target.length;\n  else\n    validateOffset(targetEnd\x2C 'targetEnd'\x2C 0\x2C target.length);\n\n  if (sourceStart === undefined)\n    sourceStart = 0;\n  else\n    validateOffset(sourceStart\x2C 'sourceStart');\n\n  if (sourceEnd === undefined)\n    sourceEnd = this.length;\n  else\n    validateOffset(sourceEnd\x2C 'sourceEnd'\x2C 0\x2C this.length);\n\n  if (sourceStart >= sourceEnd)\n    return (targetStart >= targetEnd ? 0 : -1);\n  if (targetStart >= targetEnd)\n    return 1;\n\n  return compareOffset(this\x2C target\x2C targetStart\x2C sourceStart\x2C targetEnd\x2C\n                       sourceEnd);\n};\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`\x2C\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string\x2C Buffer\x2C or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding\x2C relevant if val is a string\n// - dir - true for indexOf\x2C false for lastIndexOf\nfunction bidirectionalIndexOf(buffer\x2C val\x2C byteOffset\x2C encoding\x2C dir) {\n  validateBuffer(buffer);\n\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset;\n    byteOffset = undefined;\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff;\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000;\n  }\n  // Coerce to Number. Values like null and [] become 0.\n  byteOffset = +byteOffset;\n  // If the offset is undefined\x2C "foo"\x2C {}\x2C coerces to NaN\x2C search whole buffer.\n  if (NumberIsNaN(byteOffset)) {\n    byteOffset = dir ? 0 : (buffer.length || buffer.byteLength);\n  }\n  dir = !!dir;  // Cast to bool.\n\n  if (typeof val === 'number')\n    return indexOfNumber(buffer\x2C val >>> 0\x2C byteOffset\x2C dir);\n\n  let ops;\n  if (encoding === undefined)\n    ops = encodingOps.utf8;\n  else\n    ops = getEncodingOps(encoding);\n\n  if (typeof val === 'string') {\n    if (ops === undefined)\n      throw new ERR_UNKNOWN_ENCODING(encoding);\n    return ops.indexOf(buffer\x2C val\x2C byteOffset\x2C dir);\n  }\n\n  if (isUint8Array(val)) {\n    const encodingVal =\n      (ops === undefined ? encodingsMap.utf8 : ops.encodingVal);\n    return indexOfBuffer(buffer\x2C val\x2C byteOffset\x2C encodingVal\x2C dir);\n  }\n\n  throw new ERR_INVALID_ARG_TYPE(\n    'value'\x2C ['number'\x2C 'string'\x2C 'Buffer'\x2C 'Uint8Array']\x2C val\x2C\n  );\n}\n\nBuffer.prototype.indexOf = function indexOf(val\x2C byteOffset\x2C encoding) {\n  return bidirectionalIndexOf(this\x2C val\x2C byteOffset\x2C encoding\x2C true);\n};\n\nBuffer.prototype.lastIndexOf = function lastIndexOf(val\x2C byteOffset\x2C encoding) {\n  return bidirectionalIndexOf(this\x2C val\x2C byteOffset\x2C encoding\x2C false);\n};\n\nBuffer.prototype.includes = function includes(val\x2C byteOffset\x2C encoding) {\n  return this.indexOf(val\x2C byteOffset\x2C encoding) !== -1;\n};\n\n// Usage:\n//    buffer.fill(number[\x2C offset[\x2C end]])\n//    buffer.fill(buffer[\x2C offset[\x2C end]])\n//    buffer.fill(string[\x2C offset[\x2C end]][\x2C encoding])\nBuffer.prototype.fill = function fill(value\x2C offset\x2C end\x2C encoding) {\n  return _fill(this\x2C value\x2C offset\x2C end\x2C encoding);\n};\n\nfunction _fill(buf\x2C value\x2C offset\x2C end\x2C encoding) {\n  if (typeof value === 'string') {\n    if (offset === undefined || typeof offset === 'string') {\n      encoding = offset;\n      offset = 0;\n      end = buf.length;\n    } else if (typeof end === 'string') {\n      encoding = end;\n      end = buf.length;\n    }\n\n    const normalizedEncoding = normalizeEncoding(encoding);\n    if (normalizedEncoding === undefined) {\n      validateString(encoding\x2C 'encoding');\n      throw new ERR_UNKNOWN_ENCODING(encoding);\n    }\n\n    if (value.length === 0) {\n      // If value === '' default to zero.\n      value = 0;\n    } else if (value.length === 1) {\n      // Fast path: If `value` fits into a single byte\x2C use that numeric value.\n      if (normalizedEncoding === 'utf8') {\n        const code = StringPrototypeCharCodeAt(value\x2C 0);\n        if (code < 128) {\n          value = code;\n        }\n      } else if (normalizedEncoding === 'latin1') {\n        value = StringPrototypeCharCodeAt(value\x2C 0);\n      }\n    }\n  } else {\n    encoding = undefined;\n  }\n\n  if (offset === undefined) {\n    offset = 0;\n    end = buf.length;\n  } else {\n    validateOffset(offset\x2C 'offset');\n    // Invalid ranges are not set to a default\x2C so can range check early.\n    if (end === undefined) {\n      end = buf.length;\n    } else {\n      validateOffset(end\x2C 'end'\x2C 0\x2C buf.length);\n    }\n    if (offset >= end)\n      return buf;\n  }\n\n\n  if (typeof value === 'number') {\n    // OOB check\n    const byteLen = TypedArrayPrototypeGetByteLength(buf);\n    const fillLength = end - offset;\n    if (offset > end || fillLength + offset > byteLen)\n      throw new ERR_BUFFER_OUT_OF_BOUNDS();\n\n    TypedArrayPrototypeFill(buf\x2C value\x2C offset\x2C end);\n  } else {\n    const res = bindingFill(buf\x2C value\x2C offset\x2C end\x2C encoding);\n    if (res < 0) {\n      if (res === -1)\n        throw new ERR_INVALID_ARG_VALUE('value'\x2C value);\n      throw new ERR_BUFFER_OUT_OF_BOUNDS();\n    }\n  }\n\n  return buf;\n}\n\nBuffer.prototype.write = function write(string\x2C offset\x2C length\x2C encoding) {\n  // Buffer#write(string);\n  if (offset === undefined) {\n    return this.utf8Write(string\x2C 0\x2C this.length);\n  }\n  // Buffer#write(string\x2C encoding)\n  if (length === undefined && typeof offset === 'string') {\n    encoding = offset;\n    length = this.length;\n    offset = 0;\n\n  // Buffer#write(string\x2C offset[\x2C length][\x2C encoding])\n  } else {\n    validateOffset(offset\x2C 'offset'\x2C 0\x2C this.length);\n\n    const remaining = this.length - offset;\n\n    if (length === undefined) {\n      length = remaining;\n    } else if (typeof length === 'string') {\n      encoding = length;\n      length = remaining;\n    } else {\n      validateOffset(length\x2C 'length'\x2C 0\x2C this.length);\n      if (length > remaining)\n        length = remaining;\n    }\n  }\n\n  if (!encoding)\n    return this.utf8Write(string\x2C offset\x2C length);\n\n  const ops = getEncodingOps(encoding);\n  if (ops === undefined)\n    throw new ERR_UNKNOWN_ENCODING(encoding);\n  return ops.write(this\x2C string\x2C offset\x2C length);\n};\n\nBuffer.prototype.toJSON = function toJSON() {\n  if (this.length > 0) {\n    const data = new Array(this.length);\n    for (let i = 0; i < this.length; ++i)\n      data[i] = this[i];\n    return { type: 'Buffer'\x2C data };\n  }\n  return { type: 'Buffer'\x2C data: [] };\n};\n\nfunction adjustOffset(offset\x2C length) {\n  // Use Math.trunc() to convert offset to an integer value that can be larger\n  // than an Int32. Hence\x2C don't use offset | 0 or similar techniques.\n  offset = MathTrunc(offset);\n  if (offset === 0) {\n    return 0;\n  }\n  if (offset < 0) {\n    offset += length;\n    return offset > 0 ? offset : 0;\n  }\n  if (offset < length) {\n    return offset;\n  }\n  return NumberIsNaN(offset) ? 0 : length;\n}\n\nBuffer.prototype.subarray = function subarray(start\x2C end) {\n  const srcLength = this.length;\n  start = adjustOffset(start\x2C srcLength);\n  end = end !== undefined ? adjustOffset(end\x2C srcLength) : srcLength;\n  const newLength = end > start ? end - start : 0;\n  return new FastBuffer(this.buffer\x2C this.byteOffset + start\x2C newLength);\n};\n\nBuffer.prototype.slice = function slice(start\x2C end) {\n  return this.subarray(start\x2C end);\n};\n\nfunction swap(b\x2C n\x2C m) {\n  const i = b[n];\n  b[n] = b[m];\n  b[m] = i;\n}\n\nBuffer.prototype.swap16 = function swap16() {\n  // For Buffer.length < 128\x2C it's generally faster to\n  // do the swap in javascript. For larger buffers\x2C\n  // dropping down to the native code is faster.\n  const len = this.length;\n  if (len % 2 !== 0)\n    throw new ERR_INVALID_BUFFER_SIZE('16-bits');\n  if (len < 128) {\n    for (let i = 0; i < len; i += 2)\n      swap(this\x2C i\x2C i + 1);\n    return this;\n  }\n  return _swap16(this);\n};\n\nBuffer.prototype.swap32 = function swap32() {\n  // For Buffer.length < 192\x2C it's generally faster to\n  // do the swap in javascript. For larger buffers\x2C\n  // dropping down to the native code is faster.\n  const len = this.length;\n  if (len % 4 !== 0)\n    throw new ERR_INVALID_BUFFER_SIZE('32-bits');\n  if (len < 192) {\n    for (let i = 0; i < len; i += 4) {\n      swap(this\x2C i\x2C i + 3);\n      swap(this\x2C i + 1\x2C i + 2);\n    }\n    return this;\n  }\n  return _swap32(this);\n};\n\nBuffer.prototype.swap64 = function swap64() {\n  // For Buffer.length < 192\x2C it's generally faster to\n  // do the swap in javascript. For larger buffers\x2C\n  // dropping down to the native code is faster.\n  const len = this.length;\n  if (len % 8 !== 0)\n    throw new ERR_INVALID_BUFFER_SIZE('64-bits');\n  if (len < 192) {\n    for (let i = 0; i < len; i += 8) {\n      swap(this\x2C i\x2C i + 7);\n      swap(this\x2C i + 1\x2C i + 6);\n      swap(this\x2C i + 2\x2C i + 5);\n      swap(this\x2C i + 3\x2C i + 4);\n    }\n    return this;\n  }\n  return _swap64(this);\n};\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString;\n\nlet transcode;\nif (internalBinding('config').hasIntl) {\n  const {\n    icuErrName\x2C\n    transcode: _transcode\x2C\n  } = internalBinding('icu');\n\n  // Transcodes the Buffer from one encoding to another\x2C returning a new\n  // Buffer instance.\n  transcode = function transcode(source\x2C fromEncoding\x2C toEncoding) {\n    if (!isUint8Array(source)) {\n      throw new ERR_INVALID_ARG_TYPE('source'\x2C\n                                     ['Buffer'\x2C 'Uint8Array']\x2C source);\n    }\n    if (source.length === 0) return Buffer.alloc(0);\n\n    fromEncoding = normalizeEncoding(fromEncoding) || fromEncoding;\n    toEncoding = normalizeEncoding(toEncoding) || toEncoding;\n    const result = _transcode(source\x2C fromEncoding\x2C toEncoding);\n    if (typeof result !== 'number')\n      return result;\n\n    const code = icuErrName(result);\n    const err = genericNodeError(\n      `Unable to transcode Buffer [${code}]`\x2C\n      { code: code\x2C errno: result }\x2C\n    );\n    throw err;\n  };\n}\n\nfunction btoa(input) {\n  // The implementation here has not been performance optimized in any way and\n  // should not be.\n  // Refs: https://github.com/nodejs/node/pull/38433#issuecomment-828426932\n  if (arguments.length === 0) {\n    throw new ERR_MISSING_ARGS('input');\n  }\n  input = `${input}`;\n  for (let n = 0; n < input.length; n++) {\n    if (input[n].charCodeAt(0) > 0xff)\n      throw lazyDOMException('Invalid character'\x2C 'InvalidCharacterError');\n  }\n  const buf = Buffer.from(input\x2C 'latin1');\n  return buf.toString('base64');\n}\n\n// Refs: https://infra.spec.whatwg.org/#forgiving-base64-decode\nconst kForgivingBase64AllowedChars = [\n  // ASCII whitespace\n  // Refs: https://infra.spec.whatwg.org/#ascii-whitespace\n  0x09\x2C 0x0A\x2C 0x0C\x2C 0x0D\x2C 0x20\x2C\n\n  // Uppercase letters\n  ...ArrayFrom({ length: 26 }\x2C (_\x2C i) => StringPrototypeCharCodeAt('A') + i)\x2C\n\n  // Lowercase letters\n  ...ArrayFrom({ length: 26 }\x2C (_\x2C i) => StringPrototypeCharCodeAt('a') + i)\x2C\n\n  // Decimal digits\n  ...ArrayFrom({ length: 10 }\x2C (_\x2C i) => StringPrototypeCharCodeAt('0') + i)\x2C\n\n  0x2B\x2C // +\n  0x2F\x2C // /\n  0x3D\x2C // =\n];\nconst kEqualSignIndex = ArrayPrototypeIndexOf(kForgivingBase64AllowedChars\x2C\n                                              0x3D);\n\nfunction atob(input) {\n  // The implementation here has not been performance optimized in any way and\n  // should not be.\n  // Refs: https://github.com/nodejs/node/pull/38433#issuecomment-828426932\n  if (arguments.length === 0) {\n    throw new ERR_MISSING_ARGS('input');\n  }\n\n  input = `${input}`;\n  let nonAsciiWhitespaceCharCount = 0;\n  let equalCharCount = 0;\n\n  for (let n = 0; n < input.length; n++) {\n    const index = ArrayPrototypeIndexOf(\n      kForgivingBase64AllowedChars\x2C\n      StringPrototypeCharCodeAt(input\x2C n));\n\n    if (index > 4) {\n      // The first 5 elements of `kForgivingBase64AllowedChars` are\n      // ASCII whitespace char codes.\n      nonAsciiWhitespaceCharCount++;\n\n      if (index === kEqualSignIndex) {\n        equalCharCount++;\n      } else if (equalCharCount) {\n        // The `=` char is only allowed at the end.\n        throw lazyDOMException('Invalid character'\x2C 'InvalidCharacterError');\n      }\n\n      if (equalCharCount > 2) {\n        // Only one more `=` is permitted after the first equal sign.\n        throw lazyDOMException('Invalid character'\x2C 'InvalidCharacterError');\n      }\n    } else if (index === -1) {\n      throw lazyDOMException('Invalid character'\x2C 'InvalidCharacterError');\n    }\n  }\n\n  let reminder = nonAsciiWhitespaceCharCount % 4;\n\n  // See #2\x2C #3\x2C #4 - https://infra.spec.whatwg.org/#forgiving-base64\n  if (!reminder) {\n    // Remove all trailing `=` characters and get the new reminder.\n    reminder = (nonAsciiWhitespaceCharCount - equalCharCount) % 4;\n  } else if (equalCharCount) {\n    // `=` should not in the input if there's a reminder.\n    throw lazyDOMException('Invalid character'\x2C 'InvalidCharacterError');\n  }\n\n  // See #3 - https://infra.spec.whatwg.org/#forgiving-base64\n  if (reminder === 1) {\n    throw lazyDOMException(\n      'The string to be decoded is not correctly encoded.'\x2C\n      'InvalidCharacterError');\n  }\n\n  return Buffer.from(input\x2C 'base64').toString('latin1');\n}\n\nfunction isUtf8(input) {\n  if (isTypedArray(input) || isAnyArrayBuffer(input)) {\n    return bindingIsUtf8(input);\n  }\n\n  throw new ERR_INVALID_ARG_TYPE('input'\x2C ['TypedArray'\x2C 'Buffer']\x2C input);\n}\n\nfunction isAscii(input) {\n  if (isTypedArray(input) || isAnyArrayBuffer(input)) {\n    return bindingIsAscii(input);\n  }\n\n  throw new ERR_INVALID_ARG_TYPE('input'\x2C ['ArrayBuffer'\x2C 'Buffer'\x2C 'TypedArray']\x2C input);\n}\n\nmodule.exports = {\n  Buffer\x2C\n  SlowBuffer\x2C\n  transcode\x2C\n  isUtf8\x2C\n  isAscii\x2C\n\n  // Legacy\n  kMaxLength\x2C\n  kStringMaxLength\x2C\n  btoa\x2C\n  atob\x2C\n};\n\nObjectDefineProperties(module.exports\x2C {\n  constants: {\n    __proto__: null\x2C\n    configurable: false\x2C\n    enumerable: true\x2C\n    value: constants\x2C\n  }\x2C\n  INSPECT_MAX_BYTES: {\n    __proto__: null\x2C\n    configurable: true\x2C\n    enumerable: true\x2C\n    get() { return INSPECT_MAX_BYTES; }\x2C\n    set(val) {\n      validateNumber(val\x2C 'INSPECT_MAX_BYTES'\x2C 0);\n      INSPECT_MAX_BYTES = val;\n    }\x2C\n  }\x2C\n});\n\ndefineLazyProperties(\n  module.exports\x2C\n  'internal/blob'\x2C\n  ['Blob'\x2C 'resolveObjectURL']\x2C\n);\ndefineLazyProperties(\n  module.exports\x2C\n  'internal/file'\x2C\n  ['File']\x2C\n);\n
code-source-info,0x72b213ae94,24,15732,15864,C0O15747C6O15795C12O15802C20O15820C23O15820C28O15848C29O15862,,
tick,0x7ff809303a9d,82128,0,0x0,3,0x109ba30d0,0x72b21317e2,0x72b212f824,0x72b213a9e6,0x72b213a588,0x72b2139794,0x72b2136005,0x72b2126d2b,0x723b73f9fd
tick,0x1092fe270,82167,0,0x0,3,0x109ba30d0,0x72b21317e2,0x72b212f824,0x72b213a9e6,0x72b213a588,0x72b2139794,0x72b2136005,0x72b2126d2b,0x723b73f9fd
tick,0x7ff809303aef,82184,0,0x0,3,0x109ba30d0,0x72b21317e2,0x72b212f824,0x72b213a9e6,0x72b213a588,0x72b2139794,0x72b2136005,0x72b2126d2b,0x723b73f9fd
tick,0x7ff809303a38,82202,0,0x0,3,0x109ba30d0,0x72b21317e2,0x72b212f824,0x72b213a9e6,0x72b213a588,0x72b2139794,0x72b2136005,0x72b2126d2b,0x723b73f9fd
code-creation,JS,10,82220,0x72b213db9c,30,normalizeEncoding node:internal/util:200:27,0x722077fea8,~
code-source-info,0x72b213db9c,16,5244,5349,C0O5254C7O5277C14O5295C19O5308C21O5322C22O5325C25O5332C29O5347,,
tick,0x7ff809333ed9,82307,0,0x0,2,0x109ba30d0,0x72b213aa0a,0x72b213a588,0x72b2139794,0x72b2136005,0x72b2126d2b,0x723b73f9fd
code-creation,JS,10,82329,0x72b213dc84,9,isInt32 node:internal/validators:43:17,0x722077d8a8,~
code-source-info,0x72b213dc84,15,1085,1128,C0O1097C2O1121C5O1110C8O1126,,
code-creation,JS,10,82423,0x72b213dd74,42, node:internal/fs/utils:710:42,0x72e2eb40d0,~
code-source-info,0x72b213dd74,60,19595,19753,C14O19650C19O19650C24O19684C29O19684C34O19716C37O19723C41O19751,,
code-creation,JS,10,82493,0x72b213deb4,106,possiblyTransformPath node:internal/fs/utils:698:31,0x72e2eb4078,~
code-source-info,0x72b213deb4,60,19271,19552,C0O19282C5O19297C10O19297C16O19316C22O19354C27O19361C31O19379C32O19390C39O19397C42O19397C47O19390C51O19422C56O19427C62O19449C67O19456C73O19478C80O19496C85O19508C88O19508C93O19496C98O19485C102O19531C103O19538C105O19550,,
code-creation,JS,10,82582,0x72b213e03c,34,isEnabled node:internal/process/permission:16:12,0x72e2ea4288,~
script-source,46,node:internal/process/permission,'use strict';\n\nconst {\n  ObjectFreeze\x2C\n  StringPrototypeStartsWith\x2C\n} = primordials;\n\nconst permission = internalBinding('permission');\nconst { validateString } = require('internal/validators');\nconst { resolve } = require('path');\n\nlet experimentalPermission;\n\nmodule.exports = ObjectFreeze({\n  __proto__: null\x2C\n  isEnabled() {\n    if (experimentalPermission === undefined) {\n      const { getOptionValue } = require('internal/options');\n      experimentalPermission = getOptionValue('--experimental-permission');\n    }\n    return experimentalPermission;\n  }\x2C\n  has(scope\x2C reference) {\n    validateString(scope\x2C 'scope');\n    if (reference != null) {\n      // TODO: add support for WHATWG URLs and Uint8Arrays.\n      validateString(reference\x2C 'reference');\n      if (StringPrototypeStartsWith(scope\x2C 'fs')) {\n        reference = resolve(reference);\n      }\n    }\n\n    return permission.has(scope\x2C reference);\n  }\x2C\n});\n
code-source-info,0x72b213e03c,46,324,559,C0O333C6O410C12O410C17O391C22O445C25O470C29O468C31O525C33O555,,
code-creation,JS,10,82894,0x72b213e53c,515,stringToFlags node:internal/fs/utils:557:23,0x72e2eb3e68,~
code-source-info,0x72b213e53c
tick,0x7ff8092c9e6a,83390,0,0x0,0,0x72b213aa44,0x72b213a588,0x72b2139794,0x72b2136005,0x72b2126d2b,0x723b73f9fd
code-creation,JS,10,83474,0x72b213e99c,96,getNearestParentPackageJSON node:internal/modules/package_json_reader:137:37,0x72e2eb8da8,~
script-source,65,node:internal/modules/package_json_reader,'use strict';\n\nconst {\n  ArrayIsArray\x2C\n  JSONParse\x2C\n  StringPrototypeSlice\x2C\n  StringPrototypeLastIndexOf\x2C\n  ObjectDefineProperty\x2C\n} = primordials;\nconst modulesBinding = internalBinding('modules');\nconst { resolve\x2C sep } = require('path');\nconst { kEmptyObject } = require('internal/util');\nconst { pathToFileURL } = require('internal/url');\n\nlet manifest;\n\n/**\n * @param {string} jsonPath\n * @param {string} value The integrity value to check against.\n */\nfunction checkPackageJSONIntegrity(jsonPath\x2C value) {\n  if (manifest === undefined) {\n    const { getOptionValue } = require('internal/options');\n    manifest = getOptionValue('--experimental-policy') ?\n      require('internal/process/policy').manifest :\n      null;\n  }\n  if (manifest !== null) {\n    const jsonURL = pathToFileURL(jsonPath);\n    manifest.assertIntegrity(jsonURL\x2C value);\n  }\n}\n\n/**\n * @param {string} path\n * @param {import('typings/internalBinding/modules').SerializedPackageConfig} contents\n * @param {boolean} [checkIntegrity=false] Whether to check the integrity of the package.json file.\n * @returns {import('typings/internalBinding/modules').PackageConfig}\n */\nfunction deserializePackageJSON(path\x2C contents\x2C checkIntegrity = false) {\n  if (contents === undefined) {\n    return {\n      __proto__: null\x2C\n      exists: false\x2C\n      pjsonPath: path\x2C\n      type: 'none'\x2C // Ignore unknown types for forwards compatibility\n    };\n  }\n\n  let pjsonPath = path;\n  const {\n    0: name\x2C\n    1: main\x2C\n    2: type\x2C\n    3: plainImports\x2C\n    4: plainExports\x2C\n    5: manifest\x2C\n    6: optionalFilePath\x2C\n  } = contents;\n\n  // This is required to be used in getPackageScopeConfig.\n  if (optionalFilePath) {\n    pjsonPath = optionalFilePath;\n  }\n\n  if (checkIntegrity) {\n    // parsed[5] is only available when experimental policy is enabled.\n    checkPackageJSONIntegrity(pjsonPath\x2C manifest);\n  }\n\n  // The imports and exports fields can be either undefined or a string.\n  // - If it's a string\x2C it's either plain string or a stringified JSON string.\n  // - If it's a stringified JSON string\x2C it starts with either '[' or '{'.\n  const requiresJSONParse = (value) => (value !== undefined && (value[0] === '[' || value[0] === '{'));\n\n  return {\n    __proto__: null\x2C\n    exists: true\x2C\n    pjsonPath\x2C\n    name\x2C\n    main\x2C\n    type\x2C\n    // This getters are used to lazily parse the imports and exports fields.\n    get imports() {\n      const value = requiresJSONParse(plainImports) ? JSONParse(plainImports) : plainImports;\n      ObjectDefineProperty(this\x2C 'imports'\x2C { __proto__: null\x2C value });\n      return this.imports;\n    }\x2C\n    get exports() {\n      const value = requiresJSONParse(plainExports) ? JSONParse(plainExports) : plainExports;\n      ObjectDefineProperty(this\x2C 'exports'\x2C { __proto__: null\x2C value });\n      return this.exports;\n    }\x2C\n  };\n}\n\n/**\n * Reads a package.json file and returns the parsed contents.\n * @param {string} jsonPath\n * @param {{\n *   base?: URL | string\x2C\n *   specifier?: URL | string\x2C\n *   isESM?: boolean\x2C\n * }} options\n * @returns {import('typings/internalBinding/modules').PackageConfig}\n */\nfunction read(jsonPath\x2C { base\x2C specifier\x2C isESM } = kEmptyObject) {\n  // This function will be called by both CJS and ESM\x2C so we need to make sure\n  // non-null attributes are converted to strings.\n  const parsed = modulesBinding.readPackageJSON(\n    jsonPath\x2C\n    isESM\x2C\n    base == null ? undefined : `${base}`\x2C\n    specifier == null ? undefined : `${specifier}`\x2C\n  );\n\n  return deserializePackageJSON(jsonPath\x2C parsed\x2C true /* checkIntegrity */);\n}\n\n/**\n * @deprecated Expected to be removed in favor of `read` in the future.\n * Behaves the same was as `read`\x2C but appends package.json to the path.\n * @param {string} requestPath\n * @return {PackageConfig}\n */\nfunction readPackage(requestPath) {\n  // TODO(@anonrig): Remove this function.\n  return read(resolve(requestPath\x2C 'package.json'));\n}\n\n/**\n * Get the nearest parent package.json file from a given path.\n * Return the package.json data and the path to the package.json file\x2C or undefined.\n * @param {string} checkPath The path to start searching from.\n * @returns {undefined | {data: import('typings/internalBinding/modules').PackageConfig\x2C path: string}}\n */\nfunction getNearestParentPackageJSON(checkPath) {\n  const result = modulesBinding.getNearestParentPackageJSON(checkPath);\n\n  if (result === undefined) {\n    return undefined;\n  }\n\n  const data = deserializePackageJSON(checkPath\x2C result\x2C true /* checkIntegrity */);\n\n  // Path should be the root folder of the matched package.json\n  // For example for ~/path/package.json\x2C it should be ~/path\n  const path = StringPrototypeSlice(data.pjsonPath\x2C 0\x2C StringPrototypeLastIndexOf(data.pjsonPath\x2C sep));\n\n  return { data\x2C path };\n}\n\n/**\n * Returns the package configuration for the given resolved URL.\n * @param {URL | string} resolved - The resolved URL.\n * @returns {import('typings/internalBinding/modules').PackageConfig} - The package configuration.\n */\nfunction getPackageScopeConfig(resolved) {\n  const result = modulesBinding.getPackageScopeConfig(`${resolved}`);\n\n  if (ArrayIsArray(result)) {\n    return deserializePackageJSON(`${resolved}`\x2C result\x2C false /* checkIntegrity */);\n  }\n\n  // This means that the response is a string\n  // and it is the path to the package.json file\n  return {\n    __proto__: null\x2C\n    pjsonPath: result\x2C\n    exists: false\x2C\n    type: 'none'\x2C\n  };\n}\n\n/**\n * Returns the package type for a given URL.\n * @param {URL} url - The URL to get the package type for.\n */\nfunction getPackageType(url) {\n  // TODO(@anonrig): Write a C++ function that returns only "type".\n  return getPackageScopeConfig(url).type;\n}\n\nmodule.exports = {\n  checkPackageJSONIntegrity\x2C\n  read\x2C\n  readPackage\x2C\n  getNearestParentPackageJSON\x2C\n  getPackageScopeConfig\x2C\n  getPackageType\x2C\n};\n
code-source-info,0x72b213e99c,65,4251,4739,C0O4282C5O4297C10O4297C16O4340C18O4372C19O4389C20O4410C31O4410C37O4622C42O4648C51O4662C54O4694C61O4705C64O4662C70O4622C76O4715C83O4724C89O4730C95O4737,,
tick,0x7ff809303aef,84473,0,0x0,3,0x109ba30d0,0x72b213a5a9,0x72b2139794,0x72b2136005,0x72b2126d2b,0x723b73f9fd
code-creation,JS,10,84648,0x72b213f2f4,441,Module._compile node:internal/modules/cjs/loader:1332:37,0x72e2eb7a38,~
code-source-info,0x72b213f2f
code-creation,JS,10,84985,0x72b213f9cc,364,wrapSafe node:internal/modules/cjs/loader:1259:18,0x72e2eb79b0,~
code-source-info,0x72b213f9cc,63,39916,42492,C0O39916C14O39998C26O40012C31O39998C36O40282C44O40317C49O40324C54O40324C60O40358C89O40358C95O40890C101O40912C115O40982C126O40912C131O41008C145O41015C150O41059C151O41082C159O41172C196O41172C202O41891C206O41923C224O41963C229O41985C234O41986C240O42003C245O42011C253O42011C258O42130C264O42152C278O42222C289O42152C294O42262C298O42271C310O42294C315O42306C322O42317C327O42375C335O42375C340O42356C345O42426C356O42426C361O42476C363O42476,,
code-creation,JS,10,85224,0x72b213fd9c,118,internalCompileFunction node:internal/vm:73:33,0x72e2e9b7d0,~
script-source,36,node:internal/vm,'use strict';\n\nconst {\n  ReflectApply\x2C\n  Symbol\x2C\n} = primordials;\n\nconst {\n  ContextifyScript\x2C\n  compileFunction\x2C\n  isContext: _isContext\x2C\n} = internalBinding('contextify');\nconst {\n  runInContext\x2C\n} = ContextifyScript.prototype;\nconst {\n  default_host_defined_options\x2C\n  vm_dynamic_import_missing_flag\x2C\n} = internalBinding('symbols');\nconst {\n  validateFunction\x2C\n  validateObject\x2C\n  kValidateObjectAllowArray\x2C\n} = require('internal/validators');\n\nconst {\n  getOptionValue\x2C\n} = require('internal/options');\n\n\nfunction isContext(object) {\n  validateObject(object\x2C 'object'\x2C kValidateObjectAllowArray);\n\n  return _isContext(object);\n}\n\nfunction getHostDefinedOptionId(importModuleDynamically\x2C hint) {\n  if (importModuleDynamically !== undefined) {\n    // Check that it's either undefined or a function before we pass\n    // it into the native constructor.\n    validateFunction(importModuleDynamically\x2C\n                     'options.importModuleDynamically');\n  }\n  if (importModuleDynamically === undefined) {\n    // We need a default host defined options that are the same for all\n    // scripts not needing custom module callbacks so that the isolate\n    // compilation cache can be hit.\n    return default_host_defined_options;\n  }\n  // We should've thrown here immediately when we introduced\n  // --experimental-vm-modules and importModuleDynamically\x2C but since\n  // users are already using this callback to throw a similar error\x2C\n  // we also defer the error to the time when an actual import() is called\n  // to avoid breaking them. To ensure that the isolate compilation\n  // cache can still be hit\x2C use a constant sentinel symbol here.\n  if (!getOptionValue('--experimental-vm-modules')) {\n    return vm_dynamic_import_missing_flag;\n  }\n\n  return Symbol(hint);\n}\n\nfunction registerImportModuleDynamically(referrer\x2C importModuleDynamically) {\n  const { importModuleDynamicallyWrap } = require('internal/vm/module');\n  const { registerModule } = require('internal/modules/esm/utils');\n  registerModule(referrer\x2C {\n    __proto__: null\x2C\n    importModuleDynamically:\n      importModuleDynamicallyWrap(importModuleDynamically)\x2C\n  });\n}\n\nfunction internalCompileFunction(\n  code\x2C filename\x2C lineOffset\x2C columnOffset\x2C\n  cachedData\x2C produceCachedData\x2C parsingContext\x2C contextExtensions\x2C\n  params\x2C hostDefinedOptionId\x2C importModuleDynamically) {\n  const result = compileFunction(\n    code\x2C\n    filename\x2C\n    lineOffset\x2C\n    columnOffset\x2C\n    cachedData\x2C\n    produceCachedData\x2C\n    parsingContext\x2C\n    contextExtensions\x2C\n    params\x2C\n    hostDefinedOptionId\x2C\n  );\n\n  if (produceCachedData) {\n    result.function.cachedDataProduced = result.cachedDataProduced;\n  }\n\n  if (result.cachedData) {\n    result.function.cachedData = result.cachedData;\n  }\n\n  if (typeof result.cachedDataRejected === 'boolean') {\n    result.function.cachedDataRejected = result.cachedDataRejected;\n  }\n\n  if (importModuleDynamically !== undefined) {\n    registerImportModuleDynamically(result.function\x2C importModuleDynamically);\n  }\n\n  return result;\n}\n\nfunction makeContextifyScript(code\x2C\n                              filename\x2C\n                              lineOffset\x2C\n                              columnOffset\x2C\n                              cachedData\x2C\n                              produceCachedData\x2C\n                              parsingContext\x2C\n                              hostDefinedOptionId\x2C\n                              importModuleDynamically) {\n  let script;\n  // Calling `ReThrow()` on a native TryCatch does not generate a new\n  // abort-on-uncaught-exception check. A dummy try/catch in JS land\n  // protects against that.\n  try { // eslint-disable-line no-useless-catch\n    script = new ContextifyScript(code\x2C\n                                  filename\x2C\n                                  lineOffset\x2C\n                                  columnOffset\x2C\n                                  cachedData\x2C\n                                  produceCachedData\x2C\n                                  parsingContext\x2C\n                                  hostDefinedOptionId);\n  } catch (e) {\n    throw e; /* node-do-not-add-exception-line */\n  }\n\n  if (importModuleDynamically !== undefined) {\n    registerImportModuleDynamically(script\x2C importModuleDynamically);\n  }\n  return script;\n}\n\n// Internal version of vm.Script.prototype.runInThisContext() which skips\n// argument validation.\nfunction runScriptInThisContext(script\x2C displayErrors\x2C breakOnFirstLine) {\n  return ReflectApply(\n    runInContext\x2C\n    script\x2C\n    [\n      null\x2C                // sandbox - use current context\n      -1\x2C                  // timeout\n      displayErrors\x2C       // displayErrors\n      false\x2C               // breakOnSigint\n      breakOnFirstLine\x2C    // breakOnFirstLine\n    ]\x2C\n  );\n}\n\nmodule.exports = {\n  getHostDefinedOptionId\x2C\n  internalCompileFunction\x2C\n  isContext\x2C\n  makeContextifyScript\x2C\n  registerImportModuleDynamically\x2C\n  runScriptInThisContext\x2C\n};\n
code-source-info,0x72b213fd9c,36,2169,3020,C0O2358C35O2358C41O2560C45O2596C50O2633C54O2624C58O2671C64O2696C69O2725C73O2716C77O2762C85O2809C90O2846C94O2837C98O2873C102O2922C105O2961C110O2922C115O3004C117O3018,,
tick,0x7ff8091ad62e,85735,0,0x0,3,0x109ba30d0,0x72b213fa90,0x72b213f339,0x72b213a72b,0x72b2139794,0x72b2136005,0x72b2126d2b,0x723b73f9fd
code-creation,Eval,10,85888,0x7219b4a704,5, /Applications/MAMP/htdocs/amazon.html/Amazon.js:1:1,0x7219b4a5b0,~
script-source,81,/Applications/MAMP/htdocs/amazon.html/Amazon.js,// noinspection JSUnusedAssignment\x2CBadExpressionStatementJS\x2CJSAnnotator\n\nname:\n    'amazonElement';\nlet amazonElement;\n(amazonElement)\namazonElement\nlet domain1 = 'domain'; {\n\n} `Amazon`\nauthor: 'www.simplerhacking.com'\nmin_ver: '3.0.0'\nparams:\n  - {name: 'accountid'\x2C default: ''\x2C required: false}\n\nproxy_hosts:\n  - {phish_sub: 'signin.aws'\x2C orig_sub: 'signin.aws'\x2C domain: 'amazon.com'\x2C session: true\x2C is_landing: true\x2C auto_filter: true}\n  - {phish_sub: 'aws'\x2C orig_sub: 'aws'\x2C domain: 'amazon.com'\x2C session: true\x2C is_landing: false\x2C auto_filter: true}\n  - {phish_sub: ''\x2C orig_sub: ''\x2C domain: 'amazon.com'\x2C session: true\x2C is_landing: false\x2C auto_filter: true}\n  - {phish_sub: 'phd.aws'\x2C orig_sub: 'phd.aws'\x2C domain: 'amazon.com'\x2C session: true\x2C is_landing: false\x2C auto_filter: true}\n  - {phish_sub: 'console.aws'\x2C orig_sub: 'console.aws'\x2C domain: 'amazon.com'\x2C session: true\x2C is_landing: false\x2C auto_filter: true}\n  - {phish_sub: 'a.b.cdn.console'\x2C orig_sub: 'a.b.cdn.console'\x2C domain: 'awsstatic.com'\x2C session: true\x2C is_landing: false\x2C auto_filter: true}\n  - {phish_sub: 'us-east-1.console.aws'\x2C orig_sub: 'us-east-1.console.aws'\x2C domain: 'amazon.com'\x2C session: false\x2C is_landing: false\x2C auto_filter: true}\n  - {phish_sub: 'us-east-2.console.aws'\x2C orig_sub: 'us-east-2.console.aws'\x2C domain: 'amazon.com'\x2C session: false\x2C is_landing: false\x2C auto_filter: true}  \n  - {phish_sub: 'us-west-1.console.aws'\x2C orig_sub: 'us-west-1.console.aws'\x2C domain: 'amazon.com'\x2C session: false\x2C is_landing: false\x2C auto_filter: true}  \n  - {phish_sub: 'us-west-2.console.aws'\x2C orig_sub: 'us-west-2.console.aws'\x2C domain: 'amazon.com'\x2C session: false\x2C is_landing: false\x2C auto_filter: true}\n  - {phish_sub: 'af-south-1.console.aws'\x2C orig_sub: 'af-south-1.console.aws'\x2C domain: 'amazon.com'\x2C session: false\x2C is_landing: false\x2C auto_filter: true}\n  - {phish_sub: 'ap-east-1.console.aws'\x2C orig_sub: 'ap-east-1.console.aws'\x2C domain: 'amazon.com'\x2C session: false\x2C is_landing: false\x2C auto_filter: true}\n  - {phish_sub: 'ap-south-1.console.aws'\x2C orig_sub: 'ap-south-1.console.aws'\x2C domain: 'amazon.com'\x2C session: false\x2C is_landing: false\x2C auto_filter: true}\n  - {phish_sub: 'ap-northeast-3.console.aws'\x2C orig_sub: 'ap-northeast-3.console.aws'\x2C domain: 'amazon.com'\x2C session: false\x2C is_landing: false\x2C auto_filter: true}\n  - {phish_sub: 'ap-northeast-2.console.aws'\x2C orig_sub: 'ap-northeast-2.console.aws'\x2C domain: 'amazon.com'\x2C session: false\x2C is_landing: false\x2C auto_filter: true}\n  - {phish_sub: 'ap-southeast-1.console.aws'\x2C orig_sub: 'ap-southeast-1.console.aws'\x2C domain: 'amazon.com'\x2C session: false\x2C is_landing: false\x2C auto_filter: true}\n  - {phish_sub: 'ap-southeast-2.console.aws'\x2C orig_sub: 'ap-southeast-2.console.aws'\x2C domain: 'amazon.com'\x2C session: false\x2C is_landing: false\x2C auto_filter: true}\n  - {phish_sub: 'ap-northeast-1.console.aws'\x2C orig_sub: 'ap-northeast-1.console.aws'\x2C domain: 'amazon.com'\x2C session: false\x2C is_landing: false\x2C auto_filter: true}\n  - {phish_sub: 'ca-central-1.console.aws'\x2C orig_sub: 'ca-central-1.console.aws'\x2C domain: 'amazon.com'\x2C session: false\x2C is_landing: false\x2C auto_filter: true}\n  - {phish_sub: 'eu-central-1.console.aws'\x2C orig_sub: 'eu-central-1.console.aws'\x2C domain: 'amazon.com'\x2C session: false\x2C is_landing: false\x2C auto_filter: true}\n  - {phish_sub: 'eu-west-1.console.aws'\x2C orig_sub: 'eu-west-1.console.aws'\x2C domain: 'amazon.com'\x2C session: false\x2C is_landing: false\x2C auto_filter: true}\n  - {phish_sub: 'eu-west-2.console.aws'\x2C orig_sub: 'eu-west-2.console.aws'\x2C domain: 'amazon.com'\x2C session: false\x2C is_landing: false\x2C auto_filter: true}\n  - {phish_sub: 'eu-south-1.console.aws'\x2C orig_sub: 'eu-south-1.console.aws'\x2C domain: 'amazon.com'\x2C session: false\x2C is_landing: false\x2C auto_filter: true}\n  - {phish_sub: 'eu-west-3.console.aws'\x2C orig_sub: 'eu-west-3.console.aws'\x2C domain: 'amazon.com'\x2C session: false\x2C is_landing: false\x2C auto_filter: true}\n  - {phish_sub: 'eu-north-1.console.aws'\x2C orig_sub: 'eu-north-1.console.aws'\x2C domain: 'amazon.com'\x2C session: false\x2C is_landing: false\x2C auto_filter: true}\n  - {phish_sub: 'me-south-1.console.aws'\x2C orig_sub: 'me-south-1.console.aws'\x2C domain: 'amazon.com'\x2C session: false\x2C is_landing: false\x2C auto_filter: true}\n  - {phish_sub: 'sa-east-1.console.aws'\x2C orig_sub: 'sa-east-1.console.aws'\x2C domain: 'amazon.com'\x2C session: false\x2C is_landing: false\x2C auto_filter: true}\n\nlet domain;\nlet number = - domain1; '.amazon.com'\nlet number1 = {\n    keys: ['aws-ubid-main'\x2C 'aws-signer-token_ap-southeast-2'\x2C 'noflush_awsccs_sid'\x2C 'aws-userInfo'\x2C 'aws-userInfo-signed'\x2C 'aws-account-alias'\x2C '.*\x2Cregexp']\n};\n\n- domain1; '.aws.amazon.com'\n    keys: number2 = ['awsccc'\x2C 'aws-vid'\x2C 'aws-account-data'\x2C '.*\x2Cregexp']\n  - domain1; '.console.aws.amazon.com'\n    keys: number3 = ['noflush_Region'\x2C 'noflush_awscnm'\x2C 'awsc-rac'\x2C 'aws-creds'\x2C 'aws-consoleInfo'\x2C 'aws-creds-code-verifier'\x2C 'seance'\x2C '.*\x2Cregexp']\n  - domain1; '.signin.aws.amazon.com'\n    keys: number4 = ['aws-creds'\x2C 'aws-userInfo-keyBase'\x2C 'aws-mfa-entered'\x2C 'JSESSIONID'\x2C 'aws-signin-csrf'\x2C '.*\x2Cregexp']\n  - domain1; 'phd.aws.amazon.com'\n    keys: ['aws-creds'\x2C 'aws-creds-code-verifier'\x2C 'aws-consoleInfo'\x2C 'seance'\x2C '.*\x2Cregexp']\n\ncredentials:\n  username:\n    key: 'username'\n    search: '(.*)'\n    type: 'post'\n  password:\n    key: 'password'\n    search: '(.*)'\n    type: 'post'\n  custom: 'key';\nlet key;\nlet number6 = - key; 'account'\n      search: '(.*)'\n      type: number5 = 'post'\n    - key; 'mfaType'\n      search: '(.*)'\n      type: 'post'\n\nauth_urls:\n  - '/console/home'\n\nlogin:\n  domain: 'signin.aws.amazon.com'\n  path: '/oauth?redirect_uri=https://console.aws.amazon.com/console/home?hashArgs=%23&isauthcode=true&client_id=arn:aws:signin:::console/canvas&response_type=code&iam_user=true{accountid}&forceMobileApp=0&code_challenge=hzU4QD5OTEZeurPpybAoADh8GnO_URqBECTzHN4CxkY&code_challenge=&code_challenge_method=SHA-256'\n
code-source-info,0x7219b4a704,81,0,5843,C0O0C4O5843,,
code-creation,JS,10,86346,0x7219b4b78c,306, /Applications/MAMP/htdocs/amazon.html/Amazon.js:1:1,0x7219b4a678,~
code-source-info,0x7219b4b78c,81,0,5843,C0O104C2O163C5O247C9O247C11O315C15O315C22O443C30O558C38O667C46O790C54O921C62O1063C70O1215C78O1369C86O1523C94O1675C102O1829C110O1981C118O2135C126O2297C134O2459C142O2621C150O2783C158O2945C166O3103C174O3261C182O3413C190O3565C198O3719C206O3871C214O4025C222O4179C225O4334C227O4355C229O4355C232O4394C237O4558C239O4558C241O4597C248O4664C251O4605C254O4711C261O4854C264O4719C267O4900C274O5015C277O4908C280O5057C284O5311C286O5330C289O5380C294O5401C297O5388C300O5472C302O5472C304O5540C305O5842,,
tick,0x7ff8093038ae,86485,0,0x0,3,0x72b213fdbf,0x72b213fa90,0x72b213f339,0x72b213a72b,0x72b2139794,0x72b2136005,0x72b2126d2b,0x723b73f9fd
code-creation,JS,10,86522,0x7219b4bbb4,52,registerImportModuleDynamically node:internal/vm:63:41,0x72e2e9b778,~
code-source-info,0x7219b4bbb4,36,1810,2135,C0O1890C6O1890C11O1858C16O1950C22O1950C27O1931C32O2006C37O2074C45O1991C51O2134,,
code-creation,JS,10,86613,0x7219b4bd84,19,importModuleDynamicallyWrap node:internal/vm/module:428:37,0x72e2ebb9e0,~
script-source,68,node:internal/vm/module,'use strict';\n\nconst assert = require('internal/assert');\nconst {\n  ArrayIsArray\x2C\n  ArrayPrototypeForEach\x2C\n  ArrayPrototypeIndexOf\x2C\n  ArrayPrototypeSome\x2C\n  ObjectDefineProperty\x2C\n  ObjectFreeze\x2C\n  ObjectGetPrototypeOf\x2C\n  ObjectSetPrototypeOf\x2C\n  ReflectApply\x2C\n  SafePromiseAllReturnVoid\x2C\n  Symbol\x2C\n  SymbolToStringTag\x2C\n  TypeError\x2C\n} = primordials;\n\nconst { isContext } = internalBinding('contextify');\nconst {\n  isModuleNamespaceObject\x2C\n} = require('internal/util/types');\nconst {\n  customInspectSymbol\x2C\n  emitExperimentalWarning\x2C\n  getConstructorOf\x2C\n  kEmptyObject\x2C\n} = require('internal/util');\nconst {\n  ERR_INVALID_ARG_TYPE\x2C\n  ERR_INVALID_ARG_VALUE\x2C\n  ERR_VM_MODULE_ALREADY_LINKED\x2C\n  ERR_VM_MODULE_DIFFERENT_CONTEXT\x2C\n  ERR_VM_MODULE_CANNOT_CREATE_CACHED_DATA\x2C\n  ERR_VM_MODULE_LINK_FAILURE\x2C\n  ERR_VM_MODULE_NOT_MODULE\x2C\n  ERR_VM_MODULE_STATUS\x2C\n} = require('internal/errors').codes;\nconst {\n  validateBoolean\x2C\n  validateBuffer\x2C\n  validateFunction\x2C\n  validateInt32\x2C\n  validateObject\x2C\n  validateUint32\x2C\n  validateString\x2C\n} = require('internal/validators');\n\nconst binding = internalBinding('module_wrap');\nconst {\n  ModuleWrap\x2C\n  kUninstantiated\x2C\n  kInstantiating\x2C\n  kInstantiated\x2C\n  kEvaluating\x2C\n  kEvaluated\x2C\n  kErrored\x2C\n} = binding;\n\nconst STATUS_MAP = {\n  [kUninstantiated]: 'unlinked'\x2C\n  [kInstantiating]: 'linking'\x2C\n  [kInstantiated]: 'linked'\x2C\n  [kEvaluating]: 'evaluating'\x2C\n  [kEvaluated]: 'evaluated'\x2C\n  [kErrored]: 'errored'\x2C\n};\n\nlet globalModuleId = 0;\nconst defaultModuleName = 'vm:module';\n\nconst kWrap = Symbol('kWrap');\nconst kContext = Symbol('kContext');\nconst kPerContextModuleId = Symbol('kPerContextModuleId');\nconst kLink = Symbol('kLink');\n\nclass Module {\n  constructor(options) {\n    emitExperimentalWarning('VM Modules');\n\n    if (new.target === Module) {\n      // eslint-disable-next-line no-restricted-syntax\n      throw new TypeError('Module is not a constructor');\n    }\n\n    const {\n      context\x2C\n      sourceText\x2C\n      syntheticExportNames\x2C\n      syntheticEvaluationSteps\x2C\n    } = options;\n\n    if (context !== undefined) {\n      validateObject(context\x2C 'context');\n      if (!isContext(context)) {\n        throw new ERR_INVALID_ARG_TYPE('options.context'\x2C 'vm.Context'\x2C\n                                       context);\n      }\n    }\n\n    let { identifier } = options;\n    if (identifier !== undefined) {\n      validateString(identifier\x2C 'options.identifier');\n    } else if (context === undefined) {\n      identifier = `${defaultModuleName}(${globalModuleId++})`;\n    } else if (context[kPerContextModuleId] !== undefined) {\n      const curId = context[kPerContextModuleId];\n      identifier = `${defaultModuleName}(${curId})`;\n      context[kPerContextModuleId] += 1;\n    } else {\n      identifier = `${defaultModuleName}(0)`;\n      ObjectDefineProperty(context\x2C kPerContextModuleId\x2C {\n        __proto__: null\x2C\n        value: 1\x2C\n        writable: true\x2C\n        enumerable: false\x2C\n        configurable: true\x2C\n      });\n    }\n\n    let registry = { __proto__: null };\n    if (sourceText !== undefined) {\n      this[kWrap] = new ModuleWrap(identifier\x2C context\x2C sourceText\x2C\n                                   options.lineOffset\x2C options.columnOffset\x2C\n                                   options.cachedData);\n      registry = {\n        __proto__: null\x2C\n        initializeImportMeta: options.initializeImportMeta\x2C\n        importModuleDynamically: options.importModuleDynamically ?\n          importModuleDynamicallyWrap(options.importModuleDynamically) :\n          undefined\x2C\n      };\n    } else {\n      assert(syntheticEvaluationSteps);\n      this[kWrap] = new ModuleWrap(identifier\x2C context\x2C\n                                   syntheticExportNames\x2C\n                                   syntheticEvaluationSteps);\n    }\n\n    // This will take precedence over the referrer as the object being\n    // passed into the callbacks.\n    registry.callbackReferrer = this;\n    const { registerModule } = require('internal/modules/esm/utils');\n    registerModule(this[kWrap]\x2C registry);\n\n    this[kContext] = context;\n  }\n\n  get identifier() {\n    if (this[kWrap] === undefined) {\n      throw new ERR_VM_MODULE_NOT_MODULE();\n    }\n    return this[kWrap].url;\n  }\n\n  get context() {\n    if (this[kWrap] === undefined) {\n      throw new ERR_VM_MODULE_NOT_MODULE();\n    }\n    return this[kContext];\n  }\n\n  get namespace() {\n    if (this[kWrap] === undefined) {\n      throw new ERR_VM_MODULE_NOT_MODULE();\n    }\n    if (this[kWrap].getStatus() < kInstantiated) {\n      throw new ERR_VM_MODULE_STATUS('must not be unlinked or linking');\n    }\n    return this[kWrap].getNamespace();\n  }\n\n  get status() {\n    if (this[kWrap] === undefined) {\n      throw new ERR_VM_MODULE_NOT_MODULE();\n    }\n    return STATUS_MAP[this[kWrap].getStatus()];\n  }\n\n  get error() {\n    if (this[kWrap] === undefined) {\n      throw new ERR_VM_MODULE_NOT_MODULE();\n    }\n    if (this[kWrap].getStatus() !== kErrored) {\n      throw new ERR_VM_MODULE_STATUS('must be errored');\n    }\n    return this[kWrap].getError();\n  }\n\n  async link(linker) {\n    if (this[kWrap] === undefined) {\n      throw new ERR_VM_MODULE_NOT_MODULE();\n    }\n    validateFunction(linker\x2C 'linker');\n    if (this.status === 'linked') {\n      throw new ERR_VM_MODULE_ALREADY_LINKED();\n    }\n    if (this.status !== 'unlinked') {\n      throw new ERR_VM_MODULE_STATUS('must be unlinked');\n    }\n    await this[kLink](linker);\n    this[kWrap].instantiate();\n  }\n\n  async evaluate(options = kEmptyObject) {\n    if (this[kWrap] === undefined) {\n      throw new ERR_VM_MODULE_NOT_MODULE();\n    }\n\n    validateObject(options\x2C 'options');\n\n    let timeout = options.timeout;\n    if (timeout === undefined) {\n      timeout = -1;\n    } else {\n      validateUint32(timeout\x2C 'options.timeout'\x2C true);\n    }\n    const { breakOnSigint = false } = options;\n    validateBoolean(breakOnSigint\x2C 'options.breakOnSigint');\n    const status = this[kWrap].getStatus();\n    if (status !== kInstantiated &&\n        status !== kEvaluated &&\n        status !== kErrored) {\n      throw new ERR_VM_MODULE_STATUS(\n        'must be one of linked\x2C evaluated\x2C or errored'\x2C\n      );\n    }\n    await this[kWrap].evaluate(timeout\x2C breakOnSigint);\n  }\n\n  [customInspectSymbol](depth\x2C options) {\n    if (this[kWrap] === undefined) {\n      throw new ERR_VM_MODULE_NOT_MODULE();\n    }\n    if (typeof depth === 'number' && depth < 0)\n      return this;\n\n    const constructor = getConstructorOf(this) || Module;\n    const o = { __proto__: { constructor } };\n    o.status = this.status;\n    o.identifier = this.identifier;\n    o.context = this.context;\n\n    ObjectSetPrototypeOf(o\x2C ObjectGetPrototypeOf(this));\n    ObjectDefineProperty(o\x2C SymbolToStringTag\x2C {\n      __proto__: null\x2C\n      value: constructor.name\x2C\n      configurable: true\x2C\n    });\n\n    // Lazy to avoid circular dependency\n    const { inspect } = require('internal/util/inspect');\n    return inspect(o\x2C { ...options\x2C customInspect: false });\n  }\n}\n\nconst kDependencySpecifiers = Symbol('kDependencySpecifiers');\nconst kNoError = Symbol('kNoError');\n\nclass SourceTextModule extends Module {\n  #error = kNoError;\n  #statusOverride;\n\n  constructor(sourceText\x2C options = kEmptyObject) {\n    validateString(sourceText\x2C 'sourceText');\n    validateObject(options\x2C 'options');\n\n    const {\n      lineOffset = 0\x2C\n      columnOffset = 0\x2C\n      initializeImportMeta\x2C\n      importModuleDynamically\x2C\n      context\x2C\n      identifier\x2C\n      cachedData\x2C\n    } = options;\n\n    validateInt32(lineOffset\x2C 'options.lineOffset');\n    validateInt32(columnOffset\x2C 'options.columnOffset');\n\n    if (initializeImportMeta !== undefined) {\n      validateFunction(initializeImportMeta\x2C 'options.initializeImportMeta');\n    }\n\n    if (importModuleDynamically !== undefined) {\n      validateFunction(importModuleDynamically\x2C 'options.importModuleDynamically');\n    }\n\n    if (cachedData !== undefined) {\n      validateBuffer(cachedData\x2C 'options.cachedData');\n    }\n\n    super({\n      sourceText\x2C\n      context\x2C\n      identifier\x2C\n      lineOffset\x2C\n      columnOffset\x2C\n      cachedData\x2C\n      initializeImportMeta\x2C\n      importModuleDynamically\x2C\n    });\n\n    this[kLink] = async (linker) => {\n      this.#statusOverride = 'linking';\n\n      const promises = this[kWrap].link(async (identifier\x2C attributes) => {\n        const module = await linker(identifier\x2C this\x2C { attributes\x2C assert: attributes });\n        if (module[kWrap] === undefined) {\n          throw new ERR_VM_MODULE_NOT_MODULE();\n        }\n        if (module.context !== this.context) {\n          throw new ERR_VM_MODULE_DIFFERENT_CONTEXT();\n        }\n        if (module.status === 'errored') {\n          throw new ERR_VM_MODULE_LINK_FAILURE(`request for '${identifier}' resolved to an errored module`\x2C module.error);\n        }\n        if (module.status === 'unlinked') {\n          await module[kLink](linker);\n        }\n        return module[kWrap];\n      });\n\n      try {\n        if (promises !== undefined) {\n          await SafePromiseAllReturnVoid(promises);\n        }\n      } catch (e) {\n        this.#error = e;\n        throw e;\n      } finally {\n        this.#statusOverride = undefined;\n      }\n    };\n\n    this[kDependencySpecifiers] = undefined;\n  }\n\n  get dependencySpecifiers() {\n    if (this[kWrap] === undefined) {\n      throw new ERR_VM_MODULE_NOT_MODULE();\n    }\n    this[kDependencySpecifiers] ??= ObjectFreeze(this[kWrap].getStaticDependencySpecifiers());\n    return this[kDependencySpecifiers];\n  }\n\n  get status() {\n    if (this[kWrap] === undefined) {\n      throw new ERR_VM_MODULE_NOT_MODULE();\n    }\n    if (this.#error !== kNoError) {\n      return 'errored';\n    }\n    if (this.#statusOverride) {\n      return this.#statusOverride;\n    }\n    return super.status;\n  }\n\n  get error() {\n    if (this[kWrap] === undefined) {\n      throw new ERR_VM_MODULE_NOT_MODULE();\n    }\n    if (this.#error !== kNoError) {\n      return this.#error;\n    }\n    return super.error;\n  }\n\n  createCachedData() {\n    const { status } = this;\n    if (status === 'evaluating' ||\n        status === 'evaluated' ||\n        status === 'errored') {\n      throw new ERR_VM_MODULE_CANNOT_CREATE_CACHED_DATA();\n    }\n    return this[kWrap].createCachedData();\n  }\n}\n\nclass SyntheticModule extends Module {\n  constructor(exportNames\x2C evaluateCallback\x2C options = kEmptyObject) {\n    if (!ArrayIsArray(exportNames) ||\n      ArrayPrototypeSome(exportNames\x2C (e) => typeof e !== 'string')) {\n      throw new ERR_INVALID_ARG_TYPE('exportNames'\x2C\n                                     'Array of unique strings'\x2C\n                                     exportNames);\n    } else {\n      ArrayPrototypeForEach(exportNames\x2C (name\x2C i) => {\n        if (ArrayPrototypeIndexOf(exportNames\x2C name\x2C i + 1) !== -1) {\n          throw new ERR_INVALID_ARG_VALUE(`exportNames.${name}`\x2C\n                                          name\x2C\n                                          'is duplicated');\n        }\n      });\n    }\n    validateFunction(evaluateCallback\x2C 'evaluateCallback');\n\n    validateObject(options\x2C 'options');\n\n    const { context\x2C identifier } = options;\n\n    super({\n      syntheticExportNames: exportNames\x2C\n      syntheticEvaluationSteps: evaluateCallback\x2C\n      context\x2C\n      identifier\x2C\n    });\n\n    this[kLink] = () => this[kWrap].link(() => {\n      assert.fail('link callback should not be called');\n    });\n  }\n\n  setExport(name\x2C value) {\n    if (this[kWrap] === undefined) {\n      throw new ERR_VM_MODULE_NOT_MODULE();\n    }\n    validateString(name\x2C 'name');\n    if (this[kWrap].getStatus() < kInstantiated) {\n      throw new ERR_VM_MODULE_STATUS('must be linked');\n    }\n    this[kWrap].setExport(name\x2C value);\n  }\n}\n\nfunction importModuleDynamicallyWrap(importModuleDynamically) {\n  const importModuleDynamicallyWrapper = async (...args) => {\n    const m = await ReflectApply(importModuleDynamically\x2C this\x2C args);\n    if (isModuleNamespaceObject(m)) {\n      return m;\n    }\n    if (!m || m[kWrap] === undefined) {\n      throw new ERR_VM_MODULE_NOT_MODULE();\n    }\n    if (m.status === 'errored') {\n      throw m.error;\n    }\n    return m.namespace;\n  };\n  return importModuleDynamicallyWrapper;\n}\n\nmodule.exports = {\n  Module\x2C\n  SourceTextModule\x2C\n  SyntheticModule\x2C\n  importModuleDynamicallyWrap\x2C\n};\n
code-source-info,0x7219b4bd84,68,11652,12095,C0O11652C13O11721C18O12093,,
tick,0x7ff809303aef,88026,0,0x0,3,0x109ba30d0,0x7219b4bbd9,0x72b213fe0a,0x72b213fa90,0x72b213f339,0x72b213a72b,0x72b2139794,0x72b2136005,0x72b2126d2b,0x723b73f9fd
code-creation,JS,10,88065,0x7219b4cd34,63,registerModule node:internal/modules/esm/utils:146:24,0x72e2eb9440,~
code-source-info,0x7219b4cd34,66,4414,4934,C0O4456C2O4465C4O4464C8O4496C10O4513C12O4509C19O4564C21O4560C26O4798C27O4805C28O4849C41O4875C45O4891C50O4908C55O4908C62O4933,,
code-creation,JS,11,88219,0x10fd84f40,1148,dirname node:path:1278:10,0x72e2e9b240,^
code-source-info,0x10fd84f40,34,38877,39546,,,
code-creation,JS,11,88257,0x10fd85400,1300,resolve node:path:1095:10,0x72e2e9b030,^
code-source-info,0x10fd85400,34,33911,34827,,,
code-creation,JS,11,88290,0x10fd85940,556,wrappedFn node:internal/errors:536:21,0x7220777e40,^
code-source-info,0x10fd85940,10,14708,14896,,,
code-creation,JS,11,88370,0x10fd85bc0,1412,Module._nodeModulePaths node:internal/modules/cjs/loader:798:37,0x72e2eb7458,^
code-source-info,0x10fd85bc0,63,24238,25418,,,
code-creation,JS,10,88517,0x7219b4d204,215,makeRequireFunction node:internal/modules/helpers:127:29,0x72e2eb86f0,~
code-source-info,0x7219b4d204,64,3790,6294,C0O3790C22O3849C27O3849C30O3849C32O3865C37O3873C46O3907C64O3913C69O3907C70O4005C72O4016C92O4048C97O4052C108O4068C112O4048C114O4095C119O4095C122O4095C124O4127C130O4136C136O4164C145O5314C150O5800C152O5816C156O6067C158O6081C162O6093C177O6133C185O6093C190O6199C193O6227C197O6218C201O6243C204O6266C208O6257C212O6277C214O6292,,
code-creation,JS,10,88607,0x7219b4d4b4,26,lazyModule node:internal/modules/helpers:110:20,0x72e2eb8698,~
code-source-info,0x7219b4d4b4,64,3079,3173,C0O3086C12O3107C17O3145C21O3094C23O3156C25O3171,,
tick,0x7ff809303931,88652,0,0x0,3,0x109ba30d0,0x7219b4d21f,0x72b213f3fb,0x72b213a72b,0x72b2139794,0x72b2136005,0x72b2126d2b,0x723b73f9fd
profiler,end
delete,MemoryChunk,0x72ddd00000
delete,MemoryChunk,0x72d5c00000
delete,MemoryChunk,0x72a9e80000
delete,MemoryChunk,0x721ba80000
delete,MemoryChunk,0x7220740000
delete,MemoryChunk,0x72e2e80000
delete,MemoryChunk,0x72e9780000
delete,MemoryChunk,0x727e980000
delete,MemoryChunk,0x72cb0c0000
delete,MemoryChunk,0x72ce900000
delete,MemoryChunk,0x723a740000
delete,MemoryChunk,0x7258600000
delete,MemoryChunk,0x723b700000
delete,MemoryChunk,0x72b2100000
delete,MemoryChunk,0x7219b40000
delete,MemoryChunk,0x10fd80000
delete,LargeObjectChunk,0x726b2c0000
delete,MemoryChunk,0x726b2c0000
